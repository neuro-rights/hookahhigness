{"abi": [{"anonymous": false, "inputs": [{"indexed": true, "name": "sender", "type": "address"}, {"indexed": true, "name": "receiver", "type": "address"}, {"indexed": true, "name": "tokenId", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "owner", "type": "address"}, {"indexed": true, "name": "approved", "type": "address"}, {"indexed": true, "name": "tokenId", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "owner", "type": "address"}, {"indexed": true, "name": "operator", "type": "address"}, {"indexed": false, "name": "approved", "type": "bool"}], "name": "ApprovalForAll", "type": "event"}, {"inputs": [], "outputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"name": "interface_id", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"name": "", "type": "bool"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"name": "_owner", "type": "address"}], "name": "balanceOf", "outputs": [{"name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"name": "_tokenId", "type": "uint256"}], "name": "ownerOf", "outputs": [{"name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"name": "_tokenId", "type": "uint256"}], "name": "getApproved", "outputs": [{"name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"name": "_owner", "type": "address"}, {"name": "_operator", "type": "address"}], "name": "isApprovedForAll", "outputs": [{"name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "name": "transferFrom", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"name": "_from", "type": "address"}, {"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}, {"name": "_data", "type": "bytes"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"name": "_approved", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"name": "_operator", "type": "address"}, {"name": "_approved", "type": "bool"}], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"name": "_to", "type": "address"}, {"name": "_tokenId", "type": "uint256"}], "name": "mint", "outputs": [{"name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"name": "_tokenId", "type": "uint256"}], "name": "burn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"name": "tokenId", "type": "uint256"}], "name": "tokenURI", "outputs": [{"name": "", "type": "string"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/ERC721.vy"}, "ast": {"ast_type": "Module", "body": [{"alias": null, "ast_type": "ImportFrom", "col_offset": 0, "end_col_offset": 35, "end_lineno": 7, "level": 0, "lineno": 7, "module": "vyper.interfaces", "name": "ERC165", "node_id": 1, "src": "242:35:2"}, {"alias": null, "ast_type": "ImportFrom", "col_offset": 0, "end_col_offset": 35, "end_lineno": 8, "level": 0, "lineno": 8, "module": "vyper.interfaces", "name": "ERC721", "node_id": 3, "src": "278:35:2"}, {"annotation": {"ast_type": "Name", "col_offset": 12, "end_col_offset": 18, "end_lineno": 10, "id": "ERC721", "lineno": 10, "node_id": 8, "src": "327:6:2"}, "ast_type": "AnnAssign", "col_offset": 0, "end_col_offset": 18, "end_lineno": 10, "lineno": 10, "node_id": 5, "simple": 1, "src": "315:18:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 10, "end_lineno": 10, "id": "implements", "lineno": 10, "node_id": 6, "src": "315:10:2"}, "value": null}, {"annotation": {"ast_type": "Name", "col_offset": 12, "end_col_offset": 18, "end_lineno": 11, "id": "ERC165", "lineno": 11, "node_id": 13, "src": "346:6:2"}, "ast_type": "AnnAssign", "col_offset": 0, "end_col_offset": 18, "end_lineno": 11, "lineno": 11, "node_id": 10, "simple": 1, "src": "334:18:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 10, "end_lineno": 11, "id": "implements", "lineno": 11, "node_id": 11, "src": "334:10:2"}, "value": null}, {"ast_type": "InterfaceDef", "body": [{"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 23, "end_col_offset": 30, "end_lineno": 16, "id": "address", "lineno": 16, "node_id": 19, "src": "487:7:2"}, "arg": "_operator", "ast_type": "arg", "col_offset": 12, "end_col_offset": 30, "end_lineno": 16, "lineno": 16, "node_id": 18, "src": "476:18:2"}, {"annotation": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 26, "end_lineno": 17, "id": "address", "lineno": 17, "node_id": 22, "src": "515:7:2"}, "arg": "_from", "ast_type": "arg", "col_offset": 12, "end_col_offset": 26, "end_lineno": 17, "lineno": 17, "node_id": 21, "src": "508:14:2"}, {"annotation": {"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 18, "id": "uint256", "lineno": 18, "node_id": 25, "src": "546:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 12, "end_col_offset": 29, "end_lineno": 18, "lineno": 18, "node_id": 24, "src": "536:17:2"}, {"annotation": {"ast_type": "Subscript", "col_offset": 19, "end_col_offset": 30, "end_lineno": 19, "lineno": 19, "node_id": 28, "slice": {"ast_type": "Index", "col_offset": 19, "end_col_offset": 30, "end_lineno": 19, "lineno": 19, "node_id": 33, "src": "574:11:2", "value": {"ast_type": "Int", "col_offset": 25, "end_col_offset": 29, "end_lineno": 19, "lineno": 19, "node_id": 31, "src": "580:4:2", "value": 1024}}, "src": "574:11:2", "value": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 24, "end_lineno": 19, "id": "Bytes", "lineno": 19, "node_id": 29, "src": "574:5:2"}}, "arg": "_data", "ast_type": "arg", "col_offset": 12, "end_col_offset": 30, "end_lineno": 19, "lineno": 19, "node_id": 27, "src": "567:18:2"}], "ast_type": "arguments", "col_offset": 12, "default": null, "defaults": [], "end_col_offset": 30, "end_lineno": 19, "lineno": 16, "node_id": 17, "src": "476:109:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Expr", "col_offset": 21, "end_col_offset": 31, "end_lineno": 20, "lineno": 20, "node_id": 34, "src": "607:10:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 31, "end_lineno": 20, "id": "nonpayable", "lineno": 20, "node_id": 35, "src": "607:10:2"}}], "col_offset": 4, "decorator_list": [], "doc_string": null, "end_col_offset": 31, "end_lineno": 20, "lineno": 15, "name": "onERC721Received", "node_id": 16, "pos": null, "returns": {"ast_type": "Name", "col_offset": 13, "end_col_offset": 19, "end_lineno": 20, "id": "bytes4", "lineno": 20, "node_id": 37, "src": "599:6:2"}, "src": "442:175:2"}], "col_offset": 0, "end_col_offset": 31, "end_lineno": 20, "lineno": 14, "name": "ERC721Receiver", "node_id": 15, "src": "412:205:2"}, {"ast_type": "EventDef", "body": [{"annotation": {"args": [{"ast_type": "Name", "col_offset": 20, "end_col_offset": 27, "end_lineno": 31, "id": "address", "lineno": 31, "node_id": 46, "src": "1247:7:2"}], "ast_type": "Call", "col_offset": 12, "end_col_offset": 28, "end_lineno": 31, "func": {"ast_type": "Name", "col_offset": 12, "end_col_offset": 19, "end_lineno": 31, "id": "indexed", "lineno": 31, "node_id": 44, "src": "1239:7:2"}, "keyword": null, "keywords": [], "lineno": 31, "node_id": 43, "src": "1239:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 28, "end_lineno": 31, "lineno": 31, "node_id": 40, "simple": 1, "src": "1231:24:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 10, "end_lineno": 31, "id": "sender", "lineno": 31, "node_id": 41, "src": "1231:6:2"}, "value": null}, {"annotation": {"args": [{"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 32, "id": "address", "lineno": 32, "node_id": 54, "src": "1278:7:2"}], "ast_type": "Call", "col_offset": 14, "end_col_offset": 30, "end_lineno": 32, "func": {"ast_type": "Name", "col_offset": 14, "end_col_offset": 21, "end_lineno": 32, "id": "indexed", "lineno": 32, "node_id": 52, "src": "1270:7:2"}, "keyword": null, "keywords": [], "lineno": 32, "node_id": 51, "src": "1270:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 30, "end_lineno": 32, "lineno": 32, "node_id": 48, "simple": 1, "src": "1260:26:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 12, "end_lineno": 32, "id": "receiver", "lineno": 32, "node_id": 49, "src": "1260:8:2"}, "value": null}, {"annotation": {"args": [{"ast_type": "Name", "col_offset": 21, "end_col_offset": 28, "end_lineno": 33, "id": "uint256", "lineno": 33, "node_id": 62, "src": "1308:7:2"}], "ast_type": "Call", "col_offset": 13, "end_col_offset": 29, "end_lineno": 33, "func": {"ast_type": "Name", "col_offset": 13, "end_col_offset": 20, "end_lineno": 33, "id": "indexed", "lineno": 33, "node_id": 60, "src": "1300:7:2"}, "keyword": null, "keywords": [], "lineno": 33, "node_id": 59, "src": "1300:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 29, "end_lineno": 33, "lineno": 33, "node_id": 56, "simple": 1, "src": "1291:25:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 11, "end_lineno": 33, "id": "tokenId", "lineno": 33, "node_id": 57, "src": "1291:7:2"}, "value": null}], "col_offset": 0, "end_col_offset": 29, "end_lineno": 33, "lineno": 30, "name": "Transfer", "node_id": 39, "src": "1211:105:2"}, {"ast_type": "EventDef", "body": [{"annotation": {"args": [{"ast_type": "Name", "col_offset": 19, "end_col_offset": 26, "end_lineno": 42, "id": "address", "lineno": 42, "node_id": 71, "src": "1746:7:2"}], "ast_type": "Call", "col_offset": 11, "end_col_offset": 27, "end_lineno": 42, "func": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 42, "id": "indexed", "lineno": 42, "node_id": 69, "src": "1738:7:2"}, "keyword": null, "keywords": [], "lineno": 42, "node_id": 68, "src": "1738:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 27, "end_lineno": 42, "lineno": 42, "node_id": 65, "simple": 1, "src": "1731:23:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 42, "id": "owner", "lineno": 42, "node_id": 66, "src": "1731:5:2"}, "value": null}, {"annotation": {"args": [{"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 43, "id": "address", "lineno": 43, "node_id": 79, "src": "1777:7:2"}], "ast_type": "Call", "col_offset": 14, "end_col_offset": 30, "end_lineno": 43, "func": {"ast_type": "Name", "col_offset": 14, "end_col_offset": 21, "end_lineno": 43, "id": "indexed", "lineno": 43, "node_id": 77, "src": "1769:7:2"}, "keyword": null, "keywords": [], "lineno": 43, "node_id": 76, "src": "1769:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 30, "end_lineno": 43, "lineno": 43, "node_id": 73, "simple": 1, "src": "1759:26:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 12, "end_lineno": 43, "id": "approved", "lineno": 43, "node_id": 74, "src": "1759:8:2"}, "value": null}, {"annotation": {"args": [{"ast_type": "Name", "col_offset": 21, "end_col_offset": 28, "end_lineno": 44, "id": "uint256", "lineno": 44, "node_id": 87, "src": "1807:7:2"}], "ast_type": "Call", "col_offset": 13, "end_col_offset": 29, "end_lineno": 44, "func": {"ast_type": "Name", "col_offset": 13, "end_col_offset": 20, "end_lineno": 44, "id": "indexed", "lineno": 44, "node_id": 85, "src": "1799:7:2"}, "keyword": null, "keywords": [], "lineno": 44, "node_id": 84, "src": "1799:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 29, "end_lineno": 44, "lineno": 44, "node_id": 81, "simple": 1, "src": "1790:25:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 11, "end_lineno": 44, "id": "tokenId", "lineno": 44, "node_id": 82, "src": "1790:7:2"}, "value": null}], "col_offset": 0, "end_col_offset": 29, "end_lineno": 44, "lineno": 41, "name": "Approval", "node_id": 64, "src": "1711:104:2"}, {"ast_type": "EventDef", "body": [{"annotation": {"args": [{"ast_type": "Name", "col_offset": 19, "end_col_offset": 26, "end_lineno": 53, "id": "address", "lineno": 53, "node_id": 96, "src": "2186:7:2"}], "ast_type": "Call", "col_offset": 11, "end_col_offset": 27, "end_lineno": 53, "func": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 53, "id": "indexed", "lineno": 53, "node_id": 94, "src": "2178:7:2"}, "keyword": null, "keywords": [], "lineno": 53, "node_id": 93, "src": "2178:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 27, "end_lineno": 53, "lineno": 53, "node_id": 90, "simple": 1, "src": "2171:23:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 53, "id": "owner", "lineno": 53, "node_id": 91, "src": "2171:5:2"}, "value": null}, {"annotation": {"args": [{"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 54, "id": "address", "lineno": 54, "node_id": 104, "src": "2217:7:2"}], "ast_type": "Call", "col_offset": 14, "end_col_offset": 30, "end_lineno": 54, "func": {"ast_type": "Name", "col_offset": 14, "end_col_offset": 21, "end_lineno": 54, "id": "indexed", "lineno": 54, "node_id": 102, "src": "2209:7:2"}, "keyword": null, "keywords": [], "lineno": 54, "node_id": 101, "src": "2209:16:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 30, "end_lineno": 54, "lineno": 54, "node_id": 98, "simple": 1, "src": "2199:26:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 12, "end_lineno": 54, "id": "operator", "lineno": 54, "node_id": 99, "src": "2199:8:2"}, "value": null}, {"annotation": {"ast_type": "Name", "col_offset": 14, "end_col_offset": 18, "end_lineno": 55, "id": "bool", "lineno": 55, "node_id": 109, "src": "2240:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 18, "end_lineno": 55, "lineno": 55, "node_id": 106, "simple": 1, "src": "2230:14:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 12, "end_lineno": 55, "id": "approved", "lineno": 55, "node_id": 107, "src": "2230:8:2"}, "value": null}], "col_offset": 0, "end_col_offset": 18, "end_lineno": 55, "lineno": 52, "name": "ApprovalForAll", "node_id": 89, "src": "2145:99:2"}, {"annotation": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 36, "end_lineno": 59, "lineno": 59, "node_id": 114, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 36, "end_lineno": 59, "lineno": 59, "node_id": 124, "src": "2314:25:2", "value": {"ast_type": "Tuple", "col_offset": 19, "elements": [{"ast_type": "Name", "col_offset": 19, "end_col_offset": 26, "end_lineno": 59, "id": "uint256", "lineno": 59, "node_id": 118, "src": "2322:7:2"}, {"ast_type": "Name", "col_offset": 28, "end_col_offset": 35, "end_lineno": 59, "id": "address", "lineno": 59, "node_id": 120, "src": "2331:7:2"}], "end_col_offset": 35, "end_lineno": 59, "lineno": 59, "node_id": 117, "src": "2322:16:2"}}, "src": "2314:25:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 59, "id": "HashMap", "lineno": 59, "node_id": 115, "src": "2314:7:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 36, "end_lineno": 59, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 59, "node_id": 111, "src": "2303:36:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 9, "end_lineno": 59, "id": "idToOwner", "lineno": 59, "node_id": 112, "src": "2303:9:2"}, "value": null}, {"annotation": {"ast_type": "Subscript", "col_offset": 15, "end_col_offset": 40, "end_lineno": 62, "lineno": 62, "node_id": 128, "slice": {"ast_type": "Index", "col_offset": 15, "end_col_offset": 40, "end_lineno": 62, "lineno": 62, "node_id": 138, "src": "2404:25:2", "value": {"ast_type": "Tuple", "col_offset": 23, "elements": [{"ast_type": "Name", "col_offset": 23, "end_col_offset": 30, "end_lineno": 62, "id": "uint256", "lineno": 62, "node_id": 132, "src": "2412:7:2"}, {"ast_type": "Name", "col_offset": 32, "end_col_offset": 39, "end_lineno": 62, "id": "address", "lineno": 62, "node_id": 134, "src": "2421:7:2"}], "end_col_offset": 39, "end_lineno": 62, "lineno": 62, "node_id": 131, "src": "2412:16:2"}}, "src": "2404:25:2", "value": {"ast_type": "Name", "col_offset": 15, "end_col_offset": 22, "end_lineno": 62, "id": "HashMap", "lineno": 62, "node_id": 129, "src": "2404:7:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 40, "end_lineno": 62, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 62, "node_id": 125, "src": "2389:40:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 13, "end_lineno": 62, "id": "idToApprovals", "lineno": 62, "node_id": 126, "src": "2389:13:2"}, "value": null}, {"annotation": {"ast_type": "Subscript", "col_offset": 21, "end_col_offset": 46, "end_lineno": 65, "lineno": 65, "node_id": 142, "slice": {"ast_type": "Index", "col_offset": 21, "end_col_offset": 46, "end_lineno": 65, "lineno": 65, "node_id": 152, "src": "2510:25:2", "value": {"ast_type": "Tuple", "col_offset": 29, "elements": [{"ast_type": "Name", "col_offset": 29, "end_col_offset": 36, "end_lineno": 65, "id": "address", "lineno": 65, "node_id": 146, "src": "2518:7:2"}, {"ast_type": "Name", "col_offset": 38, "end_col_offset": 45, "end_lineno": 65, "id": "uint256", "lineno": 65, "node_id": 148, "src": "2527:7:2"}], "end_col_offset": 45, "end_lineno": 65, "lineno": 65, "node_id": 145, "src": "2518:16:2"}}, "src": "2510:25:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 28, "end_lineno": 65, "id": "HashMap", "lineno": 65, "node_id": 143, "src": "2510:7:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 46, "end_lineno": 65, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 65, "node_id": 139, "src": "2489:46:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 19, "end_lineno": 65, "id": "ownerToNFTokenCount", "lineno": 65, "node_id": 140, "src": "2489:19:2"}, "value": null}, {"annotation": {"ast_type": "Subscript", "col_offset": 18, "end_col_offset": 58, "end_lineno": 68, "lineno": 68, "node_id": 156, "slice": {"ast_type": "Index", "col_offset": 18, "end_col_offset": 58, "end_lineno": 68, "lineno": 68, "node_id": 175, "src": "2623:40:2", "value": {"ast_type": "Tuple", "col_offset": 26, "elements": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 33, "end_lineno": 68, "id": "address", "lineno": 68, "node_id": 160, "src": "2631:7:2"}, {"ast_type": "Subscript", "col_offset": 35, "end_col_offset": 57, "end_lineno": 68, "lineno": 68, "node_id": 162, "slice": {"ast_type": "Index", "col_offset": 35, "end_col_offset": 57, "end_lineno": 68, "lineno": 68, "node_id": 172, "src": "2640:22:2", "value": {"ast_type": "Tuple", "col_offset": 43, "elements": [{"ast_type": "Name", "col_offset": 43, "end_col_offset": 50, "end_lineno": 68, "id": "address", "lineno": 68, "node_id": 166, "src": "2648:7:2"}, {"ast_type": "Name", "col_offset": 52, "end_col_offset": 56, "end_lineno": 68, "id": "bool", "lineno": 68, "node_id": 168, "src": "2657:4:2"}], "end_col_offset": 56, "end_lineno": 68, "lineno": 68, "node_id": 165, "src": "2648:13:2"}}, "src": "2640:22:2", "value": {"ast_type": "Name", "col_offset": 35, "end_col_offset": 42, "end_lineno": 68, "id": "HashMap", "lineno": 68, "node_id": 163, "src": "2640:7:2"}}], "end_col_offset": 57, "end_lineno": 68, "lineno": 68, "node_id": 159, "src": "2631:31:2"}}, "src": "2623:40:2", "value": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 25, "end_lineno": 68, "id": "HashMap", "lineno": 68, "node_id": 157, "src": "2623:7:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 58, "end_lineno": 68, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 68, "node_id": 153, "src": "2605:58:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 16, "end_lineno": 68, "id": "ownerToOperators", "lineno": 68, "node_id": 154, "src": "2605:16:2"}, "value": null}, {"annotation": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 15, "end_lineno": 71, "id": "address", "lineno": 71, "node_id": 179, "src": "2720:7:2"}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 15, "end_lineno": 71, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 71, "node_id": 176, "src": "2712:15:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 6, "end_lineno": 71, "id": "minter", "lineno": 71, "node_id": 177, "src": "2712:6:2"}, "value": null}, {"annotation": {"ast_type": "Subscript", "col_offset": 9, "end_col_offset": 19, "end_lineno": 73, "lineno": 73, "node_id": 184, "slice": {"ast_type": "Index", "col_offset": 9, "end_col_offset": 19, "end_lineno": 73, "lineno": 73, "node_id": 189, "src": "2738:10:2", "value": {"ast_type": "Int", "col_offset": 16, "end_col_offset": 18, "end_lineno": 73, "lineno": 73, "node_id": 187, "src": "2745:2:2", "value": 53}}, "src": "2738:10:2", "value": {"ast_type": "Name", "col_offset": 9, "end_col_offset": 15, "end_lineno": 73, "id": "String", "lineno": 73, "node_id": 185, "src": "2738:6:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 19, "end_lineno": 73, "is_constant": false, "is_immutable": false, "is_public": false, "lineno": 73, "node_id": 181, "src": "2729:19:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 7, "end_lineno": 73, "id": "baseURL", "lineno": 73, "node_id": 182, "src": "2729:7:2"}, "value": null}, {"annotation": {"ast_type": "Subscript", "col_offset": 31, "end_col_offset": 40, "end_lineno": 76, "lineno": 76, "node_id": 196, "slice": {"ast_type": "Index", "col_offset": 31, "end_col_offset": 40, "end_lineno": 76, "lineno": 76, "node_id": 201, "src": "2834:9:2", "value": {"ast_type": "Int", "col_offset": 38, "end_col_offset": 39, "end_lineno": 76, "lineno": 76, "node_id": 199, "src": "2841:1:2", "value": 2}}, "src": "2834:9:2", "value": {"ast_type": "Name", "col_offset": 31, "end_col_offset": 37, "end_lineno": 76, "id": "bytes4", "lineno": 76, "node_id": 197, "src": "2834:6:2"}}, "ast_type": "VariableDecl", "col_offset": 0, "end_col_offset": 1, "end_lineno": 81, "is_constant": true, "is_immutable": false, "is_public": false, "lineno": 76, "node_id": 190, "src": "2803:151:2", "target": {"ast_type": "Name", "col_offset": 0, "end_col_offset": 20, "end_lineno": 76, "id": "SUPPORTED_INTERFACES", "lineno": 76, "node_id": 191, "src": "2803:20:2"}, "value": {"ast_type": "List", "col_offset": 44, "elements": [{"ast_type": "Hex", "col_offset": 4, "end_col_offset": 14, "end_lineno": 78, "lineno": 78, "node_id": 203, "src": "2889:10:2", "value": "0x01ffc9a7"}, {"ast_type": "Hex", "col_offset": 4, "end_col_offset": 14, "end_lineno": 80, "lineno": 80, "node_id": 204, "src": "2941:10:2", "value": "0x80ac58cd"}], "end_col_offset": 1, "end_lineno": 81, "lineno": 76, "node_id": 202, "src": "2847:107:2"}}, {"args": {"args": [], "ast_type": "arguments", "col_offset": 0, "default": null, "defaults": [], "end_col_offset": 3, "end_lineno": 84, "lineno": 84, "node_id": 207, "src": "2966:3:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assign", "col_offset": 4, "end_col_offset": 28, "end_lineno": 88, "lineno": 88, "node_id": 210, "src": "3033:24:2", "target": {"ast_type": "Attribute", "attr": "minter", "col_offset": 4, "end_col_offset": 15, "end_lineno": 88, "lineno": 88, "node_id": 211, "src": "3033:11:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 88, "id": "self", "lineno": 88, "node_id": 212, "src": "3033:4:2"}}, "value": {"ast_type": "Attribute", "attr": "sender", "col_offset": 18, "end_col_offset": 28, "end_lineno": 88, "lineno": 88, "node_id": 215, "src": "3047:10:2", "value": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 21, "end_lineno": 88, "id": "msg", "lineno": 88, "node_id": 216, "src": "3047:3:2"}}}, {"ast_type": "Assign", "col_offset": 4, "end_col_offset": 52, "end_lineno": 89, "lineno": 89, "node_id": 219, "src": "3062:48:2", "target": {"ast_type": "Attribute", "attr": "baseURL", "col_offset": 4, "end_col_offset": 16, "end_lineno": 89, "lineno": 89, "node_id": 220, "src": "3062:12:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 89, "id": "self", "lineno": 89, "node_id": 221, "src": "3062:4:2"}}, "value": {"ast_type": "Str", "col_offset": 19, "end_col_offset": 52, "end_lineno": 89, "lineno": 89, "node_id": 224, "src": "3077:33:2", "value": "https://api.babby.xyz/metadata/"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 83, "id": "external", "lineno": 83, "node_id": 225, "src": "2957:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 87, "lineno": 85, "node_id": 227, "src": "2986:42:2", "value": "\n    @dev Contract constructor.\n    "}, "end_col_offset": 52, "end_lineno": 89, "lineno": 84, "name": "__init__", "node_id": 206, "pos": null, "returns": null, "src": "2966:144:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 42, "end_lineno": 94, "id": "bytes4", "lineno": 94, "node_id": 231, "src": "3165:6:2"}, "arg": "interface_id", "ast_type": "arg", "col_offset": 22, "end_col_offset": 42, "end_lineno": 94, "lineno": 94, "node_id": 230, "src": "3151:20:2"}], "ast_type": "arguments", "col_offset": 22, "default": null, "defaults": [], "end_col_offset": 42, "end_lineno": 94, "lineno": 94, "node_id": 229, "src": "3151:20:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Return", "col_offset": 4, "end_col_offset": 47, "end_lineno": 99, "lineno": 99, "node_id": 235, "src": "3305:43:2", "value": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 47, "end_lineno": 99, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 23, "end_lineno": 99, "id": "interface_id", "lineno": 99, "node_id": 237, "src": "3312:12:2"}, "lineno": 99, "node_id": 236, "op": {"ast_type": "In", "col_offset": 11, "end_col_offset": 47, "end_lineno": 99, "lineno": 99, "node_id": 239, "src": "3312:36:2"}, "right": {"ast_type": "Name", "col_offset": 27, "end_col_offset": 47, "end_lineno": 99, "id": "SUPPORTED_INTERFACES", "lineno": 99, "node_id": 240, "src": "3328:20:2"}, "src": "3312:36:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 92, "id": "pure", "lineno": 92, "node_id": 242, "src": "3114:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 93, "id": "external", "lineno": 93, "node_id": 244, "src": "3120:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 98, "lineno": 95, "node_id": 248, "src": "3186:114:2", "value": "\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Id of the interface\n    "}, "end_col_offset": 47, "end_lineno": 99, "lineno": 94, "name": "supportsInterface", "node_id": 228, "pos": null, "returns": {"ast_type": "Name", "col_offset": 47, "end_col_offset": 51, "end_lineno": 94, "id": "bool", "lineno": 94, "node_id": 246, "src": "3176:4:2"}, "src": "3129:219:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 106, "id": "address", "lineno": 106, "node_id": 252, "src": "3413:7:2"}, "arg": "_owner", "ast_type": "arg", "col_offset": 14, "end_col_offset": 29, "end_lineno": 106, "lineno": 106, "node_id": 251, "src": "3405:15:2"}], "ast_type": "arguments", "col_offset": 14, "default": null, "defaults": [], "end_col_offset": 29, "end_lineno": 106, "lineno": 106, "node_id": 250, "src": "3405:15:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 35, "end_lineno": 112, "lineno": 112, "msg": null, "node_id": 256, "src": "3673:31:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 35, "end_lineno": 112, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 17, "end_lineno": 112, "id": "_owner", "lineno": 112, "node_id": 258, "src": "3680:6:2"}, "lineno": 112, "node_id": 257, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 35, "end_lineno": 112, "lineno": 112, "node_id": 1120, "src": "3680:24:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 27, "end_col_offset": 34, "end_lineno": 112, "id": "address", "lineno": 112, "node_id": 264, "src": "3696:7:2"}], "ast_type": "Call", "col_offset": 21, "end_col_offset": 35, "end_lineno": 112, "func": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 26, "end_lineno": 112, "id": "empty", "lineno": 112, "node_id": 262, "src": "3690:5:2"}, "keyword": null, "keywords": [], "lineno": 112, "node_id": 261, "src": "3690:14:2"}, "src": "3680:24:2"}}, {"ast_type": "Return", "col_offset": 4, "end_col_offset": 43, "end_lineno": 113, "lineno": 113, "node_id": 266, "src": "3709:39:2", "value": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 43, "end_lineno": 113, "lineno": 113, "node_id": 267, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 43, "end_lineno": 113, "lineno": 113, "node_id": 275, "src": "3716:32:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 42, "end_lineno": 113, "id": "_owner", "lineno": 113, "node_id": 272, "src": "3741:6:2"}}, "src": "3716:32:2", "value": {"ast_type": "Attribute", "attr": "ownerToNFTokenCount", "col_offset": 11, "end_col_offset": 35, "end_lineno": 113, "lineno": 113, "node_id": 268, "src": "3716:24:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 113, "id": "self", "lineno": 113, "node_id": 269, "src": "3716:4:2"}}}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 104, "id": "view", "lineno": 104, "node_id": 276, "src": "3376:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 105, "id": "external", "lineno": 105, "node_id": 278, "src": "3382:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 111, "lineno": 107, "node_id": 282, "src": "3438:230:2", "value": "\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    "}, "end_col_offset": 43, "end_lineno": 113, "lineno": 106, "name": "balanceOf", "node_id": 249, "pos": null, "returns": {"ast_type": "Name", "col_offset": 34, "end_col_offset": 41, "end_lineno": 106, "id": "uint256", "lineno": 106, "node_id": 280, "src": "3425:7:2"}, "src": "3391:357:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 118, "id": "uint256", "lineno": 118, "node_id": 286, "src": "3789:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 12, "end_col_offset": 29, "end_lineno": 118, "lineno": 118, "node_id": 285, "src": "3779:17:2"}], "ast_type": "arguments", "col_offset": 12, "default": null, "defaults": [], "end_col_offset": 29, "end_lineno": 118, "lineno": 118, "node_id": 284, "src": "3779:17:2"}, "ast_type": "FunctionDef", "body": [{"annotation": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 124, "id": "address", "lineno": 124, "node_id": 293, "src": "3988:7:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 45, "end_lineno": 124, "lineno": 124, "node_id": 290, "simple": 1, "src": "3981:41:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 124, "id": "owner", "lineno": 124, "node_id": 291, "src": "3981:5:2"}, "value": {"ast_type": "Subscript", "col_offset": 21, "end_col_offset": 45, "end_lineno": 124, "lineno": 124, "node_id": 295, "slice": {"ast_type": "Index", "col_offset": 21, "end_col_offset": 45, "end_lineno": 124, "lineno": 124, "node_id": 303, "src": "3998:24:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 44, "end_lineno": 124, "id": "_tokenId", "lineno": 124, "node_id": 300, "src": "4013:8:2"}}, "src": "3998:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 21, "end_col_offset": 35, "end_lineno": 124, "lineno": 124, "node_id": 296, "src": "3998:14:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 25, "end_lineno": 124, "id": "self", "lineno": 124, "node_id": 297, "src": "3998:4:2"}}}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 34, "end_lineno": 126, "lineno": 126, "msg": null, "node_id": 304, "src": "4073:30:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 34, "end_lineno": 126, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 16, "end_lineno": 126, "id": "owner", "lineno": 126, "node_id": 306, "src": "4080:5:2"}, "lineno": 126, "node_id": 305, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 34, "end_lineno": 126, "lineno": 126, "node_id": 1120, "src": "4080:23:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 33, "end_lineno": 126, "id": "address", "lineno": 126, "node_id": 312, "src": "4095:7:2"}], "ast_type": "Call", "col_offset": 20, "end_col_offset": 34, "end_lineno": 126, "func": {"ast_type": "Name", "col_offset": 20, "end_col_offset": 25, "end_lineno": 126, "id": "empty", "lineno": 126, "node_id": 310, "src": "4089:5:2"}, "keyword": null, "keywords": [], "lineno": 126, "node_id": 309, "src": "4089:14:2"}, "src": "4080:23:2"}}, {"ast_type": "Return", "col_offset": 4, "end_col_offset": 16, "end_lineno": 127, "lineno": 127, "node_id": 314, "src": "4108:12:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 16, "end_lineno": 127, "id": "owner", "lineno": 127, "node_id": 315, "src": "4115:5:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 116, "id": "view", "lineno": 116, "node_id": 317, "src": "3752:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 117, "id": "external", "lineno": 117, "node_id": 319, "src": "3758:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 123, "lineno": 119, "node_id": 323, "src": "3814:162:2", "value": "\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    "}, "end_col_offset": 16, "end_lineno": 127, "lineno": 118, "name": "ownerOf", "node_id": 283, "pos": null, "returns": {"ast_type": "Name", "col_offset": 34, "end_col_offset": 41, "end_lineno": 118, "id": "address", "lineno": 118, "node_id": 321, "src": "3801:7:2"}, "src": "3767:353:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 33, "end_lineno": 132, "id": "uint256", "lineno": 132, "node_id": 327, "src": "4165:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 16, "end_col_offset": 33, "end_lineno": 132, "lineno": 132, "node_id": 326, "src": "4155:17:2"}], "ast_type": "arguments", "col_offset": 16, "default": null, "defaults": [], "end_col_offset": 33, "end_lineno": 132, "lineno": 132, "node_id": 325, "src": "4155:17:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 53, "end_lineno": 139, "lineno": 139, "msg": null, "node_id": 331, "src": "4414:49:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 53, "end_lineno": 139, "left": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 35, "end_lineno": 139, "lineno": 139, "node_id": 333, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 35, "end_lineno": 139, "lineno": 139, "node_id": 341, "src": "4421:24:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 139, "id": "_tokenId", "lineno": 139, "node_id": 338, "src": "4436:8:2"}}, "src": "4421:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 11, "end_col_offset": 25, "end_lineno": 139, "lineno": 139, "node_id": 334, "src": "4421:14:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 139, "id": "self", "lineno": 139, "node_id": 335, "src": "4421:4:2"}}}, "lineno": 139, "node_id": 332, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 53, "end_lineno": 139, "lineno": 139, "node_id": 1120, "src": "4421:42:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 45, "end_col_offset": 52, "end_lineno": 139, "id": "address", "lineno": 139, "node_id": 346, "src": "4455:7:2"}], "ast_type": "Call", "col_offset": 39, "end_col_offset": 53, "end_lineno": 139, "func": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 44, "end_lineno": 139, "id": "empty", "lineno": 139, "node_id": 344, "src": "4449:5:2"}, "keyword": null, "keywords": [], "lineno": 139, "node_id": 343, "src": "4449:14:2"}, "src": "4421:42:2"}}, {"ast_type": "Return", "col_offset": 4, "end_col_offset": 39, "end_lineno": 140, "lineno": 140, "node_id": 348, "src": "4468:35:2", "value": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 39, "end_lineno": 140, "lineno": 140, "node_id": 349, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 39, "end_lineno": 140, "lineno": 140, "node_id": 357, "src": "4475:28:2", "value": {"ast_type": "Name", "col_offset": 30, "end_col_offset": 38, "end_lineno": 140, "id": "_tokenId", "lineno": 140, "node_id": 354, "src": "4494:8:2"}}, "src": "4475:28:2", "value": {"ast_type": "Attribute", "attr": "idToApprovals", "col_offset": 11, "end_col_offset": 29, "end_lineno": 140, "lineno": 140, "node_id": 350, "src": "4475:18:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 140, "id": "self", "lineno": 140, "node_id": 351, "src": "4475:4:2"}}}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 130, "id": "view", "lineno": 130, "node_id": 358, "src": "4124:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 131, "id": "external", "lineno": 131, "node_id": 360, "src": "4130:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 137, "lineno": 133, "node_id": 364, "src": "4190:173:2", "value": "\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    "}, "end_col_offset": 39, "end_lineno": 140, "lineno": 132, "name": "getApproved", "node_id": 324, "pos": null, "returns": {"ast_type": "Name", "col_offset": 38, "end_col_offset": 45, "end_lineno": 132, "id": "address", "lineno": 132, "node_id": 362, "src": "4177:7:2"}, "src": "4139:364:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 29, "end_col_offset": 36, "end_lineno": 145, "id": "address", "lineno": 145, "node_id": 368, "src": "4551:7:2"}, "arg": "_owner", "ast_type": "arg", "col_offset": 21, "end_col_offset": 36, "end_lineno": 145, "lineno": 145, "node_id": 367, "src": "4543:15:2"}, {"annotation": {"ast_type": "Name", "col_offset": 49, "end_col_offset": 56, "end_lineno": 145, "id": "address", "lineno": 145, "node_id": 371, "src": "4571:7:2"}, "arg": "_operator", "ast_type": "arg", "col_offset": 38, "end_col_offset": 56, "end_lineno": 145, "lineno": 145, "node_id": 370, "src": "4560:18:2"}], "ast_type": "arguments", "col_offset": 21, "default": null, "defaults": [], "end_col_offset": 56, "end_lineno": 145, "lineno": 145, "node_id": 366, "src": "4543:35:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Return", "col_offset": 4, "end_col_offset": 53, "end_lineno": 151, "lineno": 151, "node_id": 375, "src": "4795:49:2", "value": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 53, "end_lineno": 151, "lineno": 151, "node_id": 376, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 53, "end_lineno": 151, "lineno": 151, "node_id": 389, "src": "4802:42:2", "value": {"ast_type": "Name", "col_offset": 43, "end_col_offset": 52, "end_lineno": 151, "id": "_operator", "lineno": 151, "node_id": 386, "src": "4834:9:2"}}, "src": "4802:42:2", "value": {"ast_type": "Subscript", "col_offset": 12, "end_col_offset": 41, "end_lineno": 151, "lineno": 151, "node_id": 377, "slice": {"ast_type": "Index", "col_offset": 12, "end_col_offset": 41, "end_lineno": 151, "lineno": 151, "node_id": 385, "src": "4803:29:2", "value": {"ast_type": "Name", "col_offset": 34, "end_col_offset": 40, "end_lineno": 151, "id": "_owner", "lineno": 151, "node_id": 382, "src": "4825:6:2"}}, "src": "4803:29:2", "value": {"ast_type": "Attribute", "attr": "ownerToOperators", "col_offset": 12, "end_col_offset": 33, "end_lineno": 151, "lineno": 151, "node_id": 378, "src": "4803:21:2", "value": {"ast_type": "Name", "col_offset": 12, "end_col_offset": 16, "end_lineno": 151, "id": "self", "lineno": 151, "node_id": 379, "src": "4803:4:2"}}}}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 143, "id": "view", "lineno": 143, "node_id": 390, "src": "4507:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 144, "id": "external", "lineno": 144, "node_id": 392, "src": "4513:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 150, "lineno": 146, "node_id": 396, "src": "4593:197:2", "value": "\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    "}, "end_col_offset": 53, "end_lineno": 151, "lineno": 145, "name": "isApprovedForAll", "node_id": 365, "pos": null, "returns": {"ast_type": "Name", "col_offset": 61, "end_col_offset": 65, "end_lineno": 145, "id": "bool", "lineno": 145, "node_id": 394, "src": "4583:4:2"}, "src": "4522:322:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 33, "end_col_offset": 40, "end_lineno": 158, "id": "address", "lineno": 158, "node_id": 400, "src": "4931:7:2"}, "arg": "_spender", "ast_type": "arg", "col_offset": 23, "end_col_offset": 40, "end_lineno": 158, "lineno": 158, "node_id": 399, "src": "4921:17:2"}, {"annotation": {"ast_type": "Name", "col_offset": 52, "end_col_offset": 59, "end_lineno": 158, "id": "uint256", "lineno": 158, "node_id": 403, "src": "4950:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 42, "end_col_offset": 59, "end_lineno": 158, "lineno": 158, "node_id": 402, "src": "4940:17:2"}], "ast_type": "arguments", "col_offset": 23, "default": null, "defaults": [], "end_col_offset": 59, "end_lineno": 158, "lineno": 158, "node_id": 398, "src": "4921:36:2"}, "ast_type": "FunctionDef", "body": [{"annotation": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 166, "id": "address", "lineno": 166, "node_id": 410, "src": "5322:7:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 45, "end_lineno": 166, "lineno": 166, "node_id": 407, "simple": 1, "src": "5315:41:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 166, "id": "owner", "lineno": 166, "node_id": 408, "src": "5315:5:2"}, "value": {"ast_type": "Subscript", "col_offset": 21, "end_col_offset": 45, "end_lineno": 166, "lineno": 166, "node_id": 412, "slice": {"ast_type": "Index", "col_offset": 21, "end_col_offset": 45, "end_lineno": 166, "lineno": 166, "node_id": 420, "src": "5332:24:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 44, "end_lineno": 166, "id": "_tokenId", "lineno": 166, "node_id": 417, "src": "5347:8:2"}}, "src": "5332:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 21, "end_col_offset": 35, "end_lineno": 166, "lineno": 166, "node_id": 413, "src": "5332:14:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 25, "end_lineno": 166, "id": "self", "lineno": 166, "node_id": 414, "src": "5332:4:2"}}}}, {"annotation": {"ast_type": "Name", "col_offset": 20, "end_col_offset": 24, "end_lineno": 167, "id": "bool", "lineno": 167, "node_id": 424, "src": "5377:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 44, "end_lineno": 167, "lineno": 167, "node_id": 421, "simple": 1, "src": "5361:40:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 18, "end_lineno": 167, "id": "spenderIsOwner", "lineno": 167, "node_id": 422, "src": "5361:14:2"}, "value": {"ast_type": "Compare", "col_offset": 27, "end_col_offset": 44, "end_lineno": 167, "left": {"ast_type": "Name", "col_offset": 27, "end_col_offset": 32, "end_lineno": 167, "id": "owner", "lineno": 167, "node_id": 427, "src": "5384:5:2"}, "lineno": 167, "node_id": 426, "op": {"ast_type": "Eq", "col_offset": 27, "end_col_offset": 44, "end_lineno": 167, "lineno": 167, "node_id": 1037, "src": "5384:17:2"}, "right": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 44, "end_lineno": 167, "id": "_spender", "lineno": 167, "node_id": 430, "src": "5393:8:2"}, "src": "5384:17:2"}}, {"annotation": {"ast_type": "Name", "col_offset": 23, "end_col_offset": 27, "end_lineno": 168, "id": "bool", "lineno": 168, "node_id": 435, "src": "5425:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 70, "end_lineno": 168, "lineno": 168, "node_id": 432, "simple": 1, "src": "5406:66:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 21, "end_lineno": 168, "id": "spenderIsApproved", "lineno": 168, "node_id": 433, "src": "5406:17:2"}, "value": {"ast_type": "Compare", "col_offset": 30, "end_col_offset": 70, "end_lineno": 168, "left": {"ast_type": "Name", "col_offset": 30, "end_col_offset": 38, "end_lineno": 168, "id": "_spender", "lineno": 168, "node_id": 438, "src": "5432:8:2"}, "lineno": 168, "node_id": 437, "op": {"ast_type": "Eq", "col_offset": 30, "end_col_offset": 70, "end_lineno": 168, "lineno": 168, "node_id": 1037, "src": "5432:40:2"}, "right": {"ast_type": "Subscript", "col_offset": 42, "end_col_offset": 70, "end_lineno": 168, "lineno": 168, "node_id": 441, "slice": {"ast_type": "Index", "col_offset": 42, "end_col_offset": 70, "end_lineno": 168, "lineno": 168, "node_id": 449, "src": "5444:28:2", "value": {"ast_type": "Name", "col_offset": 61, "end_col_offset": 69, "end_lineno": 168, "id": "_tokenId", "lineno": 168, "node_id": 446, "src": "5463:8:2"}}, "src": "5444:28:2", "value": {"ast_type": "Attribute", "attr": "idToApprovals", "col_offset": 42, "end_col_offset": 60, "end_lineno": 168, "lineno": 168, "node_id": 442, "src": "5444:18:2", "value": {"ast_type": "Name", "col_offset": 42, "end_col_offset": 46, "end_lineno": 168, "id": "self", "lineno": 168, "node_id": 443, "src": "5444:4:2"}}}, "src": "5432:40:2"}}, {"annotation": {"ast_type": "Name", "col_offset": 29, "end_col_offset": 33, "end_lineno": 169, "id": "bool", "lineno": 169, "node_id": 453, "src": "5502:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 76, "end_lineno": 169, "lineno": 169, "node_id": 450, "simple": 1, "src": "5477:72:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 27, "end_lineno": 169, "id": "spenderIsApprovedForAll", "lineno": 169, "node_id": 451, "src": "5477:23:2"}, "value": {"ast_type": "Subscript", "col_offset": 36, "end_col_offset": 76, "end_lineno": 169, "lineno": 169, "node_id": 455, "slice": {"ast_type": "Index", "col_offset": 36, "end_col_offset": 76, "end_lineno": 169, "lineno": 169, "node_id": 468, "src": "5509:40:2", "value": {"ast_type": "Name", "col_offset": 67, "end_col_offset": 75, "end_lineno": 169, "id": "_spender", "lineno": 169, "node_id": 465, "src": "5540:8:2"}}, "src": "5509:40:2", "value": {"ast_type": "Subscript", "col_offset": 37, "end_col_offset": 65, "end_lineno": 169, "lineno": 169, "node_id": 456, "slice": {"ast_type": "Index", "col_offset": 37, "end_col_offset": 65, "end_lineno": 169, "lineno": 169, "node_id": 464, "src": "5510:28:2", "value": {"ast_type": "Name", "col_offset": 59, "end_col_offset": 64, "end_lineno": 169, "id": "owner", "lineno": 169, "node_id": 461, "src": "5532:5:2"}}, "src": "5510:28:2", "value": {"ast_type": "Attribute", "attr": "ownerToOperators", "col_offset": 37, "end_col_offset": 58, "end_lineno": 169, "lineno": 169, "node_id": 457, "src": "5510:21:2", "value": {"ast_type": "Name", "col_offset": 37, "end_col_offset": 41, "end_lineno": 169, "id": "self", "lineno": 169, "node_id": 458, "src": "5510:4:2"}}}}}, {"ast_type": "Return", "col_offset": 4, "end_col_offset": 75, "end_lineno": 170, "lineno": 170, "node_id": 469, "src": "5554:71:2", "value": {"ast_type": "BoolOp", "col_offset": 11, "end_col_offset": 75, "end_lineno": 170, "lineno": 170, "node_id": 470, "op": {"ast_type": "Or", "col_offset": 11, "end_col_offset": 75, "end_lineno": 170, "lineno": 170, "node_id": 934, "src": "5561:64:2"}, "src": "5561:64:2", "values": [{"ast_type": "BoolOp", "col_offset": 12, "end_col_offset": 47, "end_lineno": 170, "lineno": 170, "node_id": 472, "op": {"ast_type": "Or", "col_offset": 12, "end_col_offset": 47, "end_lineno": 170, "lineno": 170, "node_id": 934, "src": "5562:35:2"}, "src": "5562:35:2", "values": [{"ast_type": "Name", "col_offset": 12, "end_col_offset": 26, "end_lineno": 170, "id": "spenderIsOwner", "lineno": 170, "node_id": 474, "src": "5562:14:2"}, {"ast_type": "Name", "col_offset": 30, "end_col_offset": 47, "end_lineno": 170, "id": "spenderIsApproved", "lineno": 170, "node_id": 476, "src": "5580:17:2"}]}, {"ast_type": "Name", "col_offset": 52, "end_col_offset": 75, "end_lineno": 170, "id": "spenderIsApprovedForAll", "lineno": 170, "node_id": 478, "src": "5602:23:2"}]}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 156, "id": "view", "lineno": 156, "node_id": 480, "src": "4883:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 157, "id": "internal", "lineno": 157, "node_id": 482, "src": "4889:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 165, "lineno": 159, "node_id": 486, "src": "4972:338:2", "value": "\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    "}, "end_col_offset": 75, "end_lineno": 170, "lineno": 158, "name": "_isApprovedOrOwner", "node_id": 397, "pos": null, "returns": {"ast_type": "Name", "col_offset": 64, "end_col_offset": 68, "end_lineno": 158, "id": "bool", "lineno": 158, "node_id": 484, "src": "4962:4:2"}, "src": "4898:727:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 28, "end_lineno": 174, "id": "address", "lineno": 174, "node_id": 490, "src": "5659:7:2"}, "arg": "_to", "ast_type": "arg", "col_offset": 16, "end_col_offset": 28, "end_lineno": 174, "lineno": 174, "node_id": 489, "src": "5654:12:2"}, {"annotation": {"ast_type": "Name", "col_offset": 40, "end_col_offset": 47, "end_lineno": 174, "id": "uint256", "lineno": 174, "node_id": 493, "src": "5678:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 30, "end_col_offset": 47, "end_lineno": 174, "lineno": 174, "node_id": 492, "src": "5668:17:2"}], "ast_type": "arguments", "col_offset": 16, "default": null, "defaults": [], "end_col_offset": 47, "end_lineno": 174, "lineno": 174, "node_id": 488, "src": "5654:31:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 53, "end_lineno": 180, "lineno": 180, "msg": null, "node_id": 497, "src": "5844:49:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 53, "end_lineno": 180, "left": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 35, "end_lineno": 180, "lineno": 180, "node_id": 499, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 35, "end_lineno": 180, "lineno": 180, "node_id": 507, "src": "5851:24:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 180, "id": "_tokenId", "lineno": 180, "node_id": 504, "src": "5866:8:2"}}, "src": "5851:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 11, "end_col_offset": 25, "end_lineno": 180, "lineno": 180, "node_id": 500, "src": "5851:14:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 180, "id": "self", "lineno": 180, "node_id": 501, "src": "5851:4:2"}}}, "lineno": 180, "node_id": 498, "op": {"ast_type": "Eq", "col_offset": 11, "end_col_offset": 53, "end_lineno": 180, "lineno": 180, "node_id": 1037, "src": "5851:42:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 45, "end_col_offset": 52, "end_lineno": 180, "id": "address", "lineno": 180, "node_id": 512, "src": "5885:7:2"}], "ast_type": "Call", "col_offset": 39, "end_col_offset": 53, "end_lineno": 180, "func": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 44, "end_lineno": 180, "id": "empty", "lineno": 180, "node_id": 510, "src": "5879:5:2"}, "keyword": null, "keywords": [], "lineno": 180, "node_id": 509, "src": "5879:14:2"}, "src": "5851:42:2"}}, {"ast_type": "Assign", "col_offset": 4, "end_col_offset": 34, "end_lineno": 182, "lineno": 182, "node_id": 514, "src": "5921:30:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 28, "end_lineno": 182, "lineno": 182, "node_id": 515, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 28, "end_lineno": 182, "lineno": 182, "node_id": 523, "src": "5921:24:2", "value": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 27, "end_lineno": 182, "id": "_tokenId", "lineno": 182, "node_id": 520, "src": "5936:8:2"}}, "src": "5921:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 4, "end_col_offset": 18, "end_lineno": 182, "lineno": 182, "node_id": 516, "src": "5921:14:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 182, "id": "self", "lineno": 182, "node_id": 517, "src": "5921:4:2"}}}, "value": {"ast_type": "Name", "col_offset": 31, "end_col_offset": 34, "end_lineno": 182, "id": "_to", "lineno": 182, "node_id": 524, "src": "5948:3:2"}}, {"ast_type": "AugAssign", "col_offset": 4, "end_col_offset": 38, "end_lineno": 184, "lineno": 184, "node_id": 526, "op": {"ast_type": "Add", "col_offset": 4, "end_col_offset": 38, "end_lineno": 184, "lineno": 184, "node_id": 536, "src": "5984:34:2"}, "src": "5984:34:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 33, "end_lineno": 184, "lineno": 184, "node_id": 527, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 33, "end_lineno": 184, "lineno": 184, "node_id": 535, "src": "5984:29:2", "value": {"ast_type": "Name", "col_offset": 29, "end_col_offset": 32, "end_lineno": 184, "id": "_to", "lineno": 184, "node_id": 532, "src": "6009:3:2"}}, "src": "5984:29:2", "value": {"ast_type": "Attribute", "attr": "ownerToNFTokenCount", "col_offset": 4, "end_col_offset": 28, "end_lineno": 184, "lineno": 184, "node_id": 528, "src": "5984:24:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 184, "id": "self", "lineno": 184, "node_id": 529, "src": "5984:4:2"}}}, "value": {"ast_type": "Int", "col_offset": 37, "end_col_offset": 38, "end_lineno": 184, "lineno": 184, "node_id": 537, "src": "6017:1:2", "value": 1}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 173, "id": "internal", "lineno": 173, "node_id": 538, "src": "5629:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 178, "lineno": 175, "node_id": 540, "src": "5692:100:2", "value": "\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    "}, "end_col_offset": 38, "end_lineno": 184, "lineno": 174, "name": "_addTokenTo", "node_id": 487, "pos": null, "returns": null, "src": "5638:380:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 28, "end_col_offset": 35, "end_lineno": 188, "id": "address", "lineno": 188, "node_id": 544, "src": "6059:7:2"}, "arg": "_from", "ast_type": "arg", "col_offset": 21, "end_col_offset": 35, "end_lineno": 188, "lineno": 188, "node_id": 543, "src": "6052:14:2"}, {"annotation": {"ast_type": "Name", "col_offset": 47, "end_col_offset": 54, "end_lineno": 188, "id": "uint256", "lineno": 188, "node_id": 547, "src": "6078:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 37, "end_col_offset": 54, "end_lineno": 188, "lineno": 188, "node_id": 546, "src": "6068:17:2"}], "ast_type": "arguments", "col_offset": 21, "default": null, "defaults": [], "end_col_offset": 54, "end_lineno": 188, "lineno": 188, "node_id": 542, "src": "6052:33:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 44, "end_lineno": 194, "lineno": 194, "msg": null, "node_id": 551, "src": "6253:40:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 44, "end_lineno": 194, "left": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 35, "end_lineno": 194, "lineno": 194, "node_id": 553, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 35, "end_lineno": 194, "lineno": 194, "node_id": 561, "src": "6260:24:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 194, "id": "_tokenId", "lineno": 194, "node_id": 558, "src": "6275:8:2"}}, "src": "6260:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 11, "end_col_offset": 25, "end_lineno": 194, "lineno": 194, "node_id": 554, "src": "6260:14:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 194, "id": "self", "lineno": 194, "node_id": 555, "src": "6260:4:2"}}}, "lineno": 194, "node_id": 552, "op": {"ast_type": "Eq", "col_offset": 11, "end_col_offset": 44, "end_lineno": 194, "lineno": 194, "node_id": 1037, "src": "6260:33:2"}, "right": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 44, "end_lineno": 194, "id": "_from", "lineno": 194, "node_id": 563, "src": "6288:5:2"}, "src": "6260:33:2"}}, {"ast_type": "Assign", "col_offset": 4, "end_col_offset": 45, "end_lineno": 196, "lineno": 196, "node_id": 565, "src": "6321:41:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 28, "end_lineno": 196, "lineno": 196, "node_id": 566, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 28, "end_lineno": 196, "lineno": 196, "node_id": 574, "src": "6321:24:2", "value": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 27, "end_lineno": 196, "id": "_tokenId", "lineno": 196, "node_id": 571, "src": "6336:8:2"}}, "src": "6321:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 4, "end_col_offset": 18, "end_lineno": 196, "lineno": 196, "node_id": 567, "src": "6321:14:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 196, "id": "self", "lineno": 196, "node_id": 568, "src": "6321:4:2"}}}, "value": {"args": [{"ast_type": "Name", "col_offset": 37, "end_col_offset": 44, "end_lineno": 196, "id": "address", "lineno": 196, "node_id": 578, "src": "6354:7:2"}], "ast_type": "Call", "col_offset": 31, "end_col_offset": 45, "end_lineno": 196, "func": {"ast_type": "Name", "col_offset": 31, "end_col_offset": 36, "end_lineno": 196, "id": "empty", "lineno": 196, "node_id": 576, "src": "6348:5:2"}, "keyword": null, "keywords": [], "lineno": 196, "node_id": 575, "src": "6348:14:2"}}, {"ast_type": "AugAssign", "col_offset": 4, "end_col_offset": 40, "end_lineno": 198, "lineno": 198, "node_id": 580, "op": {"ast_type": "Sub", "col_offset": 4, "end_col_offset": 40, "end_lineno": 198, "lineno": 198, "node_id": 590, "src": "6395:36:2"}, "src": "6395:36:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 35, "end_lineno": 198, "lineno": 198, "node_id": 581, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 35, "end_lineno": 198, "lineno": 198, "node_id": 589, "src": "6395:31:2", "value": {"ast_type": "Name", "col_offset": 29, "end_col_offset": 34, "end_lineno": 198, "id": "_from", "lineno": 198, "node_id": 586, "src": "6420:5:2"}}, "src": "6395:31:2", "value": {"ast_type": "Attribute", "attr": "ownerToNFTokenCount", "col_offset": 4, "end_col_offset": 28, "end_lineno": 198, "lineno": 198, "node_id": 582, "src": "6395:24:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 198, "id": "self", "lineno": 198, "node_id": 583, "src": "6395:4:2"}}}, "value": {"ast_type": "Int", "col_offset": 39, "end_col_offset": 40, "end_lineno": 198, "lineno": 198, "node_id": 591, "src": "6430:1:2", "value": 1}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 187, "id": "internal", "lineno": 187, "node_id": 592, "src": "6022:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 192, "lineno": 189, "node_id": 594, "src": "6092:107:2", "value": "\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    "}, "end_col_offset": 40, "end_lineno": 198, "lineno": 188, "name": "_removeTokenFrom", "node_id": 541, "pos": null, "returns": null, "src": "6031:400:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 27, "end_col_offset": 34, "end_lineno": 202, "id": "address", "lineno": 202, "node_id": 598, "src": "6471:7:2"}, "arg": "_owner", "ast_type": "arg", "col_offset": 19, "end_col_offset": 34, "end_lineno": 202, "lineno": 202, "node_id": 597, "src": "6463:15:2"}, {"annotation": {"ast_type": "Name", "col_offset": 46, "end_col_offset": 53, "end_lineno": 202, "id": "uint256", "lineno": 202, "node_id": 601, "src": "6490:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 36, "end_col_offset": 53, "end_lineno": 202, "lineno": 202, "node_id": 600, "src": "6480:17:2"}], "ast_type": "arguments", "col_offset": 19, "default": null, "defaults": [], "end_col_offset": 53, "end_lineno": 202, "lineno": 202, "node_id": 596, "src": "6463:34:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 45, "end_lineno": 208, "lineno": 208, "msg": null, "node_id": 605, "src": "6670:41:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 45, "end_lineno": 208, "left": {"ast_type": "Subscript", "col_offset": 11, "end_col_offset": 35, "end_lineno": 208, "lineno": 208, "node_id": 607, "slice": {"ast_type": "Index", "col_offset": 11, "end_col_offset": 35, "end_lineno": 208, "lineno": 208, "node_id": 615, "src": "6677:24:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 208, "id": "_tokenId", "lineno": 208, "node_id": 612, "src": "6692:8:2"}}, "src": "6677:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 11, "end_col_offset": 25, "end_lineno": 208, "lineno": 208, "node_id": 608, "src": "6677:14:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 208, "id": "self", "lineno": 208, "node_id": 609, "src": "6677:4:2"}}}, "lineno": 208, "node_id": 606, "op": {"ast_type": "Eq", "col_offset": 11, "end_col_offset": 45, "end_lineno": 208, "lineno": 208, "node_id": 1037, "src": "6677:34:2"}, "right": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 45, "end_lineno": 208, "id": "_owner", "lineno": 208, "node_id": 617, "src": "6705:6:2"}, "src": "6677:34:2"}}, {"ast_type": "If", "body": [{"ast_type": "Assign", "col_offset": 8, "end_col_offset": 53, "end_lineno": 211, "lineno": 211, "node_id": 636, "src": "6801:45:2", "target": {"ast_type": "Subscript", "col_offset": 8, "end_col_offset": 36, "end_lineno": 211, "lineno": 211, "node_id": 637, "slice": {"ast_type": "Index", "col_offset": 8, "end_col_offset": 36, "end_lineno": 211, "lineno": 211, "node_id": 645, "src": "6801:28:2", "value": {"ast_type": "Name", "col_offset": 27, "end_col_offset": 35, "end_lineno": 211, "id": "_tokenId", "lineno": 211, "node_id": 642, "src": "6820:8:2"}}, "src": "6801:28:2", "value": {"ast_type": "Attribute", "attr": "idToApprovals", "col_offset": 8, "end_col_offset": 26, "end_lineno": 211, "lineno": 211, "node_id": 638, "src": "6801:18:2", "value": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 12, "end_lineno": 211, "id": "self", "lineno": 211, "node_id": 639, "src": "6801:4:2"}}}, "value": {"args": [{"ast_type": "Name", "col_offset": 45, "end_col_offset": 52, "end_lineno": 211, "id": "address", "lineno": 211, "node_id": 649, "src": "6838:7:2"}], "ast_type": "Call", "col_offset": 39, "end_col_offset": 53, "end_lineno": 211, "func": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 44, "end_lineno": 211, "id": "empty", "lineno": 211, "node_id": 647, "src": "6832:5:2"}, "keyword": null, "keywords": [], "lineno": 211, "node_id": 646, "src": "6832:14:2"}}], "col_offset": 4, "end_col_offset": 53, "end_lineno": 211, "lineno": 209, "node_id": 619, "orelse": [], "src": "6716:130:2", "test": {"ast_type": "Compare", "col_offset": 7, "end_col_offset": 53, "end_lineno": 209, "left": {"ast_type": "Subscript", "col_offset": 7, "end_col_offset": 35, "end_lineno": 209, "lineno": 209, "node_id": 621, "slice": {"ast_type": "Index", "col_offset": 7, "end_col_offset": 35, "end_lineno": 209, "lineno": 209, "node_id": 629, "src": "6719:28:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 209, "id": "_tokenId", "lineno": 209, "node_id": 626, "src": "6738:8:2"}}, "src": "6719:28:2", "value": {"ast_type": "Attribute", "attr": "idToApprovals", "col_offset": 7, "end_col_offset": 25, "end_lineno": 209, "lineno": 209, "node_id": 622, "src": "6719:18:2", "value": {"ast_type": "Name", "col_offset": 7, "end_col_offset": 11, "end_lineno": 209, "id": "self", "lineno": 209, "node_id": 623, "src": "6719:4:2"}}}, "lineno": 209, "node_id": 620, "op": {"ast_type": "NotEq", "col_offset": 7, "end_col_offset": 53, "end_lineno": 209, "lineno": 209, "node_id": 1120, "src": "6719:46:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 45, "end_col_offset": 52, "end_lineno": 209, "id": "address", "lineno": 209, "node_id": 634, "src": "6757:7:2"}], "ast_type": "Call", "col_offset": 39, "end_col_offset": 53, "end_lineno": 209, "func": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 44, "end_lineno": 209, "id": "empty", "lineno": 209, "node_id": 632, "src": "6751:5:2"}, "keyword": null, "keywords": [], "lineno": 209, "node_id": 631, "src": "6751:14:2"}, "src": "6719:46:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 201, "id": "internal", "lineno": 201, "node_id": 651, "src": "6435:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 206, "lineno": 203, "node_id": 653, "src": "6504:111:2", "value": "\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    "}, "end_col_offset": 53, "end_lineno": 211, "lineno": 202, "name": "_clearApproval", "node_id": 595, "pos": null, "returns": null, "src": "6444:402:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 25, "end_col_offset": 32, "end_lineno": 215, "id": "address", "lineno": 215, "node_id": 657, "src": "6884:7:2"}, "arg": "_from", "ast_type": "arg", "col_offset": 18, "end_col_offset": 32, "end_lineno": 215, "lineno": 215, "node_id": 656, "src": "6877:14:2"}, {"annotation": {"ast_type": "Name", "col_offset": 39, "end_col_offset": 46, "end_lineno": 215, "id": "address", "lineno": 215, "node_id": 660, "src": "6898:7:2"}, "arg": "_to", "ast_type": "arg", "col_offset": 34, "end_col_offset": 46, "end_lineno": 215, "lineno": 215, "node_id": 659, "src": "6893:12:2"}, {"annotation": {"ast_type": "Name", "col_offset": 58, "end_col_offset": 65, "end_lineno": 215, "id": "uint256", "lineno": 215, "node_id": 663, "src": "6917:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 48, "end_col_offset": 65, "end_lineno": 215, "lineno": 215, "node_id": 662, "src": "6907:17:2"}, {"annotation": {"ast_type": "Name", "col_offset": 76, "end_col_offset": 83, "end_lineno": 215, "id": "address", "lineno": 215, "node_id": 666, "src": "6935:7:2"}, "arg": "_sender", "ast_type": "arg", "col_offset": 67, "end_col_offset": 83, "end_lineno": 215, "lineno": 215, "node_id": 665, "src": "6926:16:2"}], "ast_type": "arguments", "col_offset": 18, "default": null, "defaults": [], "end_col_offset": 83, "end_lineno": 215, "lineno": 215, "node_id": 655, "src": "6877:65:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 53, "end_lineno": 225, "lineno": 225, "msg": null, "node_id": 670, "src": "7375:49:2", "test": {"args": [{"ast_type": "Name", "col_offset": 35, "end_col_offset": 42, "end_lineno": 225, "id": "_sender", "lineno": 225, "node_id": 676, "src": "7406:7:2"}, {"ast_type": "Name", "col_offset": 44, "end_col_offset": 52, "end_lineno": 225, "id": "_tokenId", "lineno": 225, "node_id": 678, "src": "7415:8:2"}], "ast_type": "Call", "col_offset": 11, "end_col_offset": 53, "end_lineno": 225, "func": {"ast_type": "Attribute", "attr": "_isApprovedOrOwner", "col_offset": 11, "end_col_offset": 34, "end_lineno": 225, "lineno": 225, "node_id": 672, "src": "7382:23:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 225, "id": "self", "lineno": 225, "node_id": 673, "src": "7382:4:2"}}, "keyword": null, "keywords": [], "lineno": 225, "node_id": 671, "src": "7382:42:2"}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 32, "end_lineno": 227, "lineno": 227, "msg": null, "node_id": 680, "src": "7471:28:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 32, "end_lineno": 227, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 14, "end_lineno": 227, "id": "_to", "lineno": 227, "node_id": 682, "src": "7478:3:2"}, "lineno": 227, "node_id": 681, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 32, "end_lineno": 227, "lineno": 227, "node_id": 1120, "src": "7478:21:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 24, "end_col_offset": 31, "end_lineno": 227, "id": "address", "lineno": 227, "node_id": 688, "src": "7491:7:2"}], "ast_type": "Call", "col_offset": 18, "end_col_offset": 32, "end_lineno": 227, "func": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 23, "end_lineno": 227, "id": "empty", "lineno": 227, "node_id": 686, "src": "7485:5:2"}, "keyword": null, "keywords": [], "lineno": 227, "node_id": 685, "src": "7485:14:2"}, "src": "7478:21:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 40, "end_lineno": 229, "lineno": 229, "node_id": 690, "src": "7569:36:2", "value": {"args": [{"ast_type": "Name", "col_offset": 24, "end_col_offset": 29, "end_lineno": 229, "id": "_from", "lineno": 229, "node_id": 696, "src": "7589:5:2"}, {"ast_type": "Name", "col_offset": 31, "end_col_offset": 39, "end_lineno": 229, "id": "_tokenId", "lineno": 229, "node_id": 698, "src": "7596:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 40, "end_lineno": 229, "func": {"ast_type": "Attribute", "attr": "_clearApproval", "col_offset": 4, "end_col_offset": 23, "end_lineno": 229, "lineno": 229, "node_id": 692, "src": "7569:19:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 229, "id": "self", "lineno": 229, "node_id": 693, "src": "7569:4:2"}}, "keyword": null, "keywords": [], "lineno": 229, "node_id": 691, "src": "7569:36:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 42, "end_lineno": 231, "lineno": 231, "node_id": 700, "src": "7668:38:2", "value": {"args": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 31, "end_lineno": 231, "id": "_from", "lineno": 231, "node_id": 706, "src": "7690:5:2"}, {"ast_type": "Name", "col_offset": 33, "end_col_offset": 41, "end_lineno": 231, "id": "_tokenId", "lineno": 231, "node_id": 708, "src": "7697:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 42, "end_lineno": 231, "func": {"ast_type": "Attribute", "attr": "_removeTokenFrom", "col_offset": 4, "end_col_offset": 25, "end_lineno": 231, "lineno": 231, "node_id": 702, "src": "7668:21:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 231, "id": "self", "lineno": 231, "node_id": 703, "src": "7668:4:2"}}, "keyword": null, "keywords": [], "lineno": 231, "node_id": 701, "src": "7668:38:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 35, "end_lineno": 233, "lineno": 233, "node_id": 710, "src": "7725:31:2", "value": {"args": [{"ast_type": "Name", "col_offset": 21, "end_col_offset": 24, "end_lineno": 233, "id": "_to", "lineno": 233, "node_id": 716, "src": "7742:3:2"}, {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 233, "id": "_tokenId", "lineno": 233, "node_id": 718, "src": "7747:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 35, "end_lineno": 233, "func": {"ast_type": "Attribute", "attr": "_addTokenTo", "col_offset": 4, "end_col_offset": 20, "end_lineno": 233, "lineno": 233, "node_id": 712, "src": "7725:16:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 233, "id": "self", "lineno": 233, "node_id": 713, "src": "7725:4:2"}}, "keyword": null, "keywords": [], "lineno": 233, "node_id": 711, "src": "7725:31:2"}}, {"ast_type": "Log", "col_offset": 4, "end_col_offset": 38, "end_lineno": 235, "lineno": 235, "node_id": 721, "src": "7784:34:2", "value": {"args": [{"ast_type": "Name", "col_offset": 17, "end_col_offset": 22, "end_lineno": 235, "id": "_from", "lineno": 235, "node_id": 725, "src": "7797:5:2"}, {"ast_type": "Name", "col_offset": 24, "end_col_offset": 27, "end_lineno": 235, "id": "_to", "lineno": 235, "node_id": 727, "src": "7804:3:2"}, {"ast_type": "Name", "col_offset": 29, "end_col_offset": 37, "end_lineno": 235, "id": "_tokenId", "lineno": 235, "node_id": 729, "src": "7809:8:2"}], "ast_type": "Call", "col_offset": 8, "end_col_offset": 38, "end_lineno": 235, "func": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 16, "end_lineno": 235, "id": "Transfer", "lineno": 235, "node_id": 723, "src": "7788:8:2"}, "keyword": null, "keywords": [], "lineno": 235, "node_id": 722, "src": "7788:30:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 214, "id": "internal", "lineno": 214, "node_id": 731, "src": "6850:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 223, "lineno": 216, "node_id": 733, "src": "6949:396:2", "value": "\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    "}, "end_col_offset": 38, "end_lineno": 235, "lineno": 215, "name": "_transferFrom", "node_id": 654, "pos": null, "returns": null, "src": "6859:959:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 24, "end_col_offset": 31, "end_lineno": 242, "id": "address", "lineno": 242, "node_id": 737, "src": "7892:7:2"}, "arg": "_from", "ast_type": "arg", "col_offset": 17, "end_col_offset": 31, "end_lineno": 242, "lineno": 242, "node_id": 736, "src": "7885:14:2"}, {"annotation": {"ast_type": "Name", "col_offset": 38, "end_col_offset": 45, "end_lineno": 242, "id": "address", "lineno": 242, "node_id": 740, "src": "7906:7:2"}, "arg": "_to", "ast_type": "arg", "col_offset": 33, "end_col_offset": 45, "end_lineno": 242, "lineno": 242, "node_id": 739, "src": "7901:12:2"}, {"annotation": {"ast_type": "Name", "col_offset": 57, "end_col_offset": 64, "end_lineno": 242, "id": "uint256", "lineno": 242, "node_id": 743, "src": "7925:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 47, "end_col_offset": 64, "end_lineno": 242, "lineno": 242, "node_id": 742, "src": "7915:17:2"}], "ast_type": "arguments", "col_offset": 17, "default": null, "defaults": [], "end_col_offset": 64, "end_lineno": 242, "lineno": 242, "node_id": 735, "src": "7885:47:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Expr", "col_offset": 4, "end_col_offset": 56, "end_lineno": 255, "lineno": 255, "node_id": 747, "src": "8492:52:2", "value": {"args": [{"ast_type": "Name", "col_offset": 23, "end_col_offset": 28, "end_lineno": 255, "id": "_from", "lineno": 255, "node_id": 753, "src": "8511:5:2"}, {"ast_type": "Name", "col_offset": 30, "end_col_offset": 33, "end_lineno": 255, "id": "_to", "lineno": 255, "node_id": 755, "src": "8518:3:2"}, {"ast_type": "Name", "col_offset": 35, "end_col_offset": 43, "end_lineno": 255, "id": "_tokenId", "lineno": 255, "node_id": 757, "src": "8523:8:2"}, {"ast_type": "Attribute", "attr": "sender", "col_offset": 45, "end_col_offset": 55, "end_lineno": 255, "lineno": 255, "node_id": 759, "src": "8533:10:2", "value": {"ast_type": "Name", "col_offset": 45, "end_col_offset": 48, "end_lineno": 255, "id": "msg", "lineno": 255, "node_id": 760, "src": "8533:3:2"}}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 56, "end_lineno": 255, "func": {"ast_type": "Attribute", "attr": "_transferFrom", "col_offset": 4, "end_col_offset": 22, "end_lineno": 255, "lineno": 255, "node_id": 749, "src": "8492:18:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 255, "id": "self", "lineno": 255, "node_id": 750, "src": "8492:4:2"}}, "keyword": null, "keywords": [], "lineno": 255, "node_id": 748, "src": "8492:52:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 240, "id": "external", "lineno": 240, "node_id": 763, "src": "7850:8:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 8, "end_lineno": 241, "id": "payable", "lineno": 241, "node_id": 765, "src": "7860:7:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 254, "lineno": 243, "node_id": 767, "src": "7939:548:2", "value": "\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    "}, "end_col_offset": 56, "end_lineno": 255, "lineno": 242, "name": "transferFrom", "node_id": 734, "pos": null, "returns": null, "src": "7868:676:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 15, "end_col_offset": 22, "end_lineno": 261, "id": "address", "lineno": 261, "node_id": 771, "src": "8603:7:2"}, "arg": "_from", "ast_type": "arg", "col_offset": 8, "end_col_offset": 22, "end_lineno": 261, "lineno": 261, "node_id": 770, "src": "8596:14:2"}, {"annotation": {"ast_type": "Name", "col_offset": 13, "end_col_offset": 20, "end_lineno": 262, "id": "address", "lineno": 262, "node_id": 774, "src": "8625:7:2"}, "arg": "_to", "ast_type": "arg", "col_offset": 8, "end_col_offset": 20, "end_lineno": 262, "lineno": 262, "node_id": 773, "src": "8620:12:2"}, {"annotation": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 25, "end_lineno": 263, "id": "uint256", "lineno": 263, "node_id": 777, "src": "8652:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 8, "end_col_offset": 25, "end_lineno": 263, "lineno": 263, "node_id": 776, "src": "8642:17:2"}, {"annotation": {"ast_type": "Subscript", "col_offset": 15, "end_col_offset": 26, "end_lineno": 264, "lineno": 264, "node_id": 780, "slice": {"ast_type": "Index", "col_offset": 15, "end_col_offset": 26, "end_lineno": 264, "lineno": 264, "node_id": 785, "src": "8676:11:2", "value": {"ast_type": "Int", "col_offset": 21, "end_col_offset": 25, "end_lineno": 264, "lineno": 264, "node_id": 783, "src": "8682:4:2", "value": 1024}}, "src": "8676:11:2", "value": {"ast_type": "Name", "col_offset": 15, "end_col_offset": 20, "end_lineno": 264, "id": "Bytes", "lineno": 264, "node_id": 781, "src": "8676:5:2"}}, "arg": "_data", "ast_type": "arg", "col_offset": 8, "end_col_offset": 26, "end_lineno": 264, "lineno": 264, "node_id": 779, "src": "8669:18:2"}], "ast_type": "arguments", "col_offset": 8, "default": null, "defaults": [{"ast_type": "Bytes", "col_offset": 27, "end_col_offset": 30, "end_lineno": 264, "lineno": 264, "node_id": 786, "src": "8688:3:2", "value": "0x"}], "end_col_offset": 30, "end_lineno": 264, "lineno": 261, "node_id": 769, "src": "8596:95:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Expr", "col_offset": 4, "end_col_offset": 56, "end_lineno": 280, "lineno": 280, "node_id": 789, "src": "9472:52:2", "value": {"args": [{"ast_type": "Name", "col_offset": 23, "end_col_offset": 28, "end_lineno": 280, "id": "_from", "lineno": 280, "node_id": 795, "src": "9491:5:2"}, {"ast_type": "Name", "col_offset": 30, "end_col_offset": 33, "end_lineno": 280, "id": "_to", "lineno": 280, "node_id": 797, "src": "9498:3:2"}, {"ast_type": "Name", "col_offset": 35, "end_col_offset": 43, "end_lineno": 280, "id": "_tokenId", "lineno": 280, "node_id": 799, "src": "9503:8:2"}, {"ast_type": "Attribute", "attr": "sender", "col_offset": 45, "end_col_offset": 55, "end_lineno": 280, "lineno": 280, "node_id": 801, "src": "9513:10:2", "value": {"ast_type": "Name", "col_offset": 45, "end_col_offset": 48, "end_lineno": 280, "id": "msg", "lineno": 280, "node_id": 802, "src": "9513:3:2"}}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 56, "end_lineno": 280, "func": {"ast_type": "Attribute", "attr": "_transferFrom", "col_offset": 4, "end_col_offset": 22, "end_lineno": 280, "lineno": 280, "node_id": 791, "src": "9472:18:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 280, "id": "self", "lineno": 280, "node_id": 792, "src": "9472:4:2"}}, "keyword": null, "keywords": [], "lineno": 280, "node_id": 790, "src": "9472:52:2"}}, {"ast_type": "If", "body": [{"annotation": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 27, "end_lineno": 282, "id": "bytes4", "lineno": 282, "node_id": 813, "src": "9609:6:2"}, "ast_type": "AnnAssign", "col_offset": 8, "end_col_offset": 102, "end_lineno": 282, "lineno": 282, "node_id": 810, "simple": 1, "src": "9596:94:2", "target": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 19, "end_lineno": 282, "id": "returnValue", "lineno": 282, "node_id": 811, "src": "9596:11:2"}, "value": {"args": [{"ast_type": "Attribute", "attr": "sender", "col_offset": 67, "end_col_offset": 77, "end_lineno": 282, "lineno": 282, "node_id": 823, "src": "9655:10:2", "value": {"ast_type": "Name", "col_offset": 67, "end_col_offset": 70, "end_lineno": 282, "id": "msg", "lineno": 282, "node_id": 824, "src": "9655:3:2"}}, {"ast_type": "Name", "col_offset": 79, "end_col_offset": 84, "end_lineno": 282, "id": "_from", "lineno": 282, "node_id": 827, "src": "9667:5:2"}, {"ast_type": "Name", "col_offset": 86, "end_col_offset": 94, "end_lineno": 282, "id": "_tokenId", "lineno": 282, "node_id": 829, "src": "9674:8:2"}, {"ast_type": "Name", "col_offset": 96, "end_col_offset": 101, "end_lineno": 282, "id": "_data", "lineno": 282, "node_id": 831, "src": "9684:5:2"}], "ast_type": "Call", "col_offset": 30, "end_col_offset": 102, "end_lineno": 282, "func": {"ast_type": "Attribute", "attr": "onERC721Received", "col_offset": 30, "end_col_offset": 66, "end_lineno": 282, "lineno": 282, "node_id": 816, "src": "9618:36:2", "value": {"args": [{"ast_type": "Name", "col_offset": 45, "end_col_offset": 48, "end_lineno": 282, "id": "_to", "lineno": 282, "node_id": 820, "src": "9633:3:2"}], "ast_type": "Call", "col_offset": 30, "end_col_offset": 49, "end_lineno": 282, "func": {"ast_type": "Name", "col_offset": 30, "end_col_offset": 44, "end_lineno": 282, "id": "ERC721Receiver", "lineno": 282, "node_id": 818, "src": "9618:14:2"}, "keyword": null, "keywords": [], "lineno": 282, "node_id": 817, "src": "9618:19:2"}}, "keyword": null, "keywords": [], "lineno": 282, "node_id": 815, "src": "9618:72:2"}}, {"ast_type": "Assert", "col_offset": 8, "end_col_offset": 110, "end_lineno": 284, "lineno": 284, "msg": null, "node_id": 833, "src": "9798:102:2", "test": {"ast_type": "Compare", "col_offset": 15, "end_col_offset": 110, "end_lineno": 284, "left": {"ast_type": "Name", "col_offset": 15, "end_col_offset": 26, "end_lineno": 284, "id": "returnValue", "lineno": 284, "node_id": 835, "src": "9805:11:2"}, "lineno": 284, "node_id": 834, "op": {"ast_type": "Eq", "col_offset": 15, "end_col_offset": 110, "end_lineno": 284, "lineno": 284, "node_id": 1037, "src": "9805:95:2"}, "right": {"args": [{"ast_type": "Str", "col_offset": 40, "end_col_offset": 89, "end_lineno": 284, "lineno": 284, "node_id": 841, "src": "9830:49:2", "value": "onERC721Received(address,address,uint256,bytes)"}], "ast_type": "Call", "col_offset": 30, "end_col_offset": 110, "end_lineno": 284, "func": {"ast_type": "Name", "col_offset": 30, "end_col_offset": 39, "end_lineno": 284, "id": "method_id", "lineno": 284, "node_id": 839, "src": "9820:9:2"}, "keyword": null, "keywords": [{"arg": "output_type", "ast_type": "keyword", "col_offset": 91, "end_col_offset": 109, "end_lineno": 284, "lineno": 284, "node_id": 842, "src": "9881:18:2", "value": {"ast_type": "Name", "col_offset": 103, "end_col_offset": 109, "end_lineno": 284, "id": "bytes4", "lineno": 284, "node_id": 843, "src": "9893:6:2"}}], "lineno": 284, "node_id": 838, "src": "9820:80:2"}, "src": "9805:95:2"}}], "col_offset": 4, "end_col_offset": 110, "end_lineno": 284, "lineno": 281, "node_id": 805, "orelse": [], "src": "9529:371:2", "test": {"ast_type": "Attribute", "attr": "is_contract", "col_offset": 7, "end_col_offset": 22, "end_lineno": 281, "lineno": 281, "node_id": 806, "src": "9532:15:2", "value": {"ast_type": "Name", "col_offset": 7, "end_col_offset": 10, "end_lineno": 281, "id": "_to", "lineno": 281, "node_id": 807, "src": "9532:3:2"}}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 258, "id": "external", "lineno": 258, "node_id": 845, "src": "8548:8:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 8, "end_lineno": 259, "id": "payable", "lineno": 259, "node_id": 847, "src": "8558:7:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 279, "lineno": 266, "node_id": 849, "src": "8703:764:2", "value": "\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    "}, "end_col_offset": 110, "end_lineno": 284, "lineno": 260, "name": "safeTransferFrom", "node_id": 768, "pos": null, "returns": null, "src": "8566:1334:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 23, "end_col_offset": 30, "end_lineno": 289, "id": "address", "lineno": 289, "node_id": 853, "src": "9945:7:2"}, "arg": "_approved", "ast_type": "arg", "col_offset": 12, "end_col_offset": 30, "end_lineno": 289, "lineno": 289, "node_id": 852, "src": "9934:18:2"}, {"annotation": {"ast_type": "Name", "col_offset": 42, "end_col_offset": 49, "end_lineno": 289, "id": "uint256", "lineno": 289, "node_id": 856, "src": "9964:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 32, "end_col_offset": 49, "end_lineno": 289, "lineno": 289, "node_id": 855, "src": "9954:17:2"}], "ast_type": "arguments", "col_offset": 12, "default": null, "defaults": [], "end_col_offset": 49, "end_lineno": 289, "lineno": 289, "node_id": 851, "src": "9934:37:2"}, "ast_type": "FunctionDef", "body": [{"annotation": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 298, "id": "address", "lineno": 298, "node_id": 863, "src": "10519:7:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 45, "end_lineno": 298, "lineno": 298, "node_id": 860, "simple": 1, "src": "10512:41:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 298, "id": "owner", "lineno": 298, "node_id": 861, "src": "10512:5:2"}, "value": {"ast_type": "Subscript", "col_offset": 21, "end_col_offset": 45, "end_lineno": 298, "lineno": 298, "node_id": 865, "slice": {"ast_type": "Index", "col_offset": 21, "end_col_offset": 45, "end_lineno": 298, "lineno": 298, "node_id": 873, "src": "10529:24:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 44, "end_lineno": 298, "id": "_tokenId", "lineno": 298, "node_id": 870, "src": "10544:8:2"}}, "src": "10529:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 21, "end_col_offset": 35, "end_lineno": 298, "lineno": 298, "node_id": 866, "src": "10529:14:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 25, "end_lineno": 298, "id": "self", "lineno": 298, "node_id": 867, "src": "10529:4:2"}}}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 34, "end_lineno": 300, "lineno": 300, "msg": null, "node_id": 874, "src": "10604:30:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 34, "end_lineno": 300, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 16, "end_lineno": 300, "id": "owner", "lineno": 300, "node_id": 876, "src": "10611:5:2"}, "lineno": 300, "node_id": 875, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 34, "end_lineno": 300, "lineno": 300, "node_id": 1120, "src": "10611:23:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 33, "end_lineno": 300, "id": "address", "lineno": 300, "node_id": 882, "src": "10626:7:2"}], "ast_type": "Call", "col_offset": 20, "end_col_offset": 34, "end_lineno": 300, "func": {"ast_type": "Name", "col_offset": 20, "end_col_offset": 25, "end_lineno": 300, "id": "empty", "lineno": 300, "node_id": 880, "src": "10620:5:2"}, "keyword": null, "keywords": [], "lineno": 300, "node_id": 879, "src": "10620:14:2"}, "src": "10611:23:2"}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 29, "end_lineno": 302, "lineno": 302, "msg": null, "node_id": 884, "src": "10688:25:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 29, "end_lineno": 302, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 20, "end_lineno": 302, "id": "_approved", "lineno": 302, "node_id": 886, "src": "10695:9:2"}, "lineno": 302, "node_id": 885, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 29, "end_lineno": 302, "lineno": 302, "node_id": 1120, "src": "10695:18:2"}, "right": {"ast_type": "Name", "col_offset": 24, "end_col_offset": 29, "end_lineno": 302, "id": "owner", "lineno": 302, "node_id": 889, "src": "10708:5:2"}, "src": "10695:18:2"}}, {"annotation": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 23, "end_lineno": 304, "id": "bool", "lineno": 304, "node_id": 894, "src": "10758:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 64, "end_lineno": 304, "lineno": 304, "node_id": 891, "simple": 1, "src": "10743:60:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 17, "end_lineno": 304, "id": "senderIsOwner", "lineno": 304, "node_id": 892, "src": "10743:13:2"}, "value": {"ast_type": "Compare", "col_offset": 26, "end_col_offset": 64, "end_lineno": 304, "left": {"ast_type": "Subscript", "col_offset": 26, "end_col_offset": 50, "end_lineno": 304, "lineno": 304, "node_id": 897, "slice": {"ast_type": "Index", "col_offset": 26, "end_col_offset": 50, "end_lineno": 304, "lineno": 304, "node_id": 905, "src": "10765:24:2", "value": {"ast_type": "Name", "col_offset": 41, "end_col_offset": 49, "end_lineno": 304, "id": "_tokenId", "lineno": 304, "node_id": 902, "src": "10780:8:2"}}, "src": "10765:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 26, "end_col_offset": 40, "end_lineno": 304, "lineno": 304, "node_id": 898, "src": "10765:14:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 30, "end_lineno": 304, "id": "self", "lineno": 304, "node_id": 899, "src": "10765:4:2"}}}, "lineno": 304, "node_id": 896, "op": {"ast_type": "Eq", "col_offset": 26, "end_col_offset": 64, "end_lineno": 304, "lineno": 304, "node_id": 1037, "src": "10765:38:2"}, "right": {"ast_type": "Attribute", "attr": "sender", "col_offset": 54, "end_col_offset": 64, "end_lineno": 304, "lineno": 304, "node_id": 907, "src": "10793:10:2", "value": {"ast_type": "Name", "col_offset": 54, "end_col_offset": 57, "end_lineno": 304, "id": "msg", "lineno": 304, "node_id": 908, "src": "10793:3:2"}}, "src": "10765:38:2"}}, {"annotation": {"ast_type": "Name", "col_offset": 28, "end_col_offset": 32, "end_lineno": 305, "id": "bool", "lineno": 305, "node_id": 914, "src": "10832:4:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 77, "end_lineno": 305, "lineno": 305, "node_id": 911, "simple": 1, "src": "10808:73:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 26, "end_lineno": 305, "id": "senderIsApprovedForAll", "lineno": 305, "node_id": 912, "src": "10808:22:2"}, "value": {"ast_type": "Subscript", "col_offset": 35, "end_col_offset": 77, "end_lineno": 305, "lineno": 305, "node_id": 916, "slice": {"ast_type": "Index", "col_offset": 35, "end_col_offset": 77, "end_lineno": 305, "lineno": 305, "node_id": 931, "src": "10839:42:2", "value": {"ast_type": "Attribute", "attr": "sender", "col_offset": 66, "end_col_offset": 76, "end_lineno": 305, "lineno": 305, "node_id": 926, "src": "10870:10:2", "value": {"ast_type": "Name", "col_offset": 66, "end_col_offset": 69, "end_lineno": 305, "id": "msg", "lineno": 305, "node_id": 927, "src": "10870:3:2"}}}, "src": "10839:42:2", "value": {"ast_type": "Subscript", "col_offset": 36, "end_col_offset": 64, "end_lineno": 305, "lineno": 305, "node_id": 917, "slice": {"ast_type": "Index", "col_offset": 36, "end_col_offset": 64, "end_lineno": 305, "lineno": 305, "node_id": 925, "src": "10840:28:2", "value": {"ast_type": "Name", "col_offset": 58, "end_col_offset": 63, "end_lineno": 305, "id": "owner", "lineno": 305, "node_id": 922, "src": "10862:5:2"}}, "src": "10840:28:2", "value": {"ast_type": "Attribute", "attr": "ownerToOperators", "col_offset": 36, "end_col_offset": 57, "end_lineno": 305, "lineno": 305, "node_id": 918, "src": "10840:21:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 40, "end_lineno": 305, "id": "self", "lineno": 305, "node_id": 919, "src": "10840:4:2"}}}}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 52, "end_lineno": 306, "lineno": 306, "msg": null, "node_id": 932, "src": "10886:48:2", "test": {"ast_type": "BoolOp", "col_offset": 12, "end_col_offset": 51, "end_lineno": 306, "lineno": 306, "node_id": 933, "op": {"ast_type": "Or", "col_offset": 12, "end_col_offset": 51, "end_lineno": 306, "lineno": 306, "node_id": 934, "src": "10894:39:2"}, "src": "10894:39:2", "values": [{"ast_type": "Name", "col_offset": 12, "end_col_offset": 25, "end_lineno": 306, "id": "senderIsOwner", "lineno": 306, "node_id": 935, "src": "10894:13:2"}, {"ast_type": "Name", "col_offset": 29, "end_col_offset": 51, "end_lineno": 306, "id": "senderIsApprovedForAll", "lineno": 306, "node_id": 937, "src": "10911:22:2"}]}}, {"ast_type": "Assign", "col_offset": 4, "end_col_offset": 44, "end_lineno": 308, "lineno": 308, "node_id": 939, "src": "10962:40:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 32, "end_lineno": 308, "lineno": 308, "node_id": 940, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 32, "end_lineno": 308, "lineno": 308, "node_id": 948, "src": "10962:28:2", "value": {"ast_type": "Name", "col_offset": 23, "end_col_offset": 31, "end_lineno": 308, "id": "_tokenId", "lineno": 308, "node_id": 945, "src": "10981:8:2"}}, "src": "10962:28:2", "value": {"ast_type": "Attribute", "attr": "idToApprovals", "col_offset": 4, "end_col_offset": 22, "end_lineno": 308, "lineno": 308, "node_id": 941, "src": "10962:18:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 308, "id": "self", "lineno": 308, "node_id": 942, "src": "10962:4:2"}}}, "value": {"ast_type": "Name", "col_offset": 35, "end_col_offset": 44, "end_lineno": 308, "id": "_approved", "lineno": 308, "node_id": 949, "src": "10993:9:2"}}, {"ast_type": "Log", "col_offset": 4, "end_col_offset": 44, "end_lineno": 309, "lineno": 309, "node_id": 952, "src": "11007:40:2", "value": {"args": [{"ast_type": "Name", "col_offset": 17, "end_col_offset": 22, "end_lineno": 309, "id": "owner", "lineno": 309, "node_id": 956, "src": "11020:5:2"}, {"ast_type": "Name", "col_offset": 24, "end_col_offset": 33, "end_lineno": 309, "id": "_approved", "lineno": 309, "node_id": 958, "src": "11027:9:2"}, {"ast_type": "Name", "col_offset": 35, "end_col_offset": 43, "end_lineno": 309, "id": "_tokenId", "lineno": 309, "node_id": 960, "src": "11038:8:2"}], "ast_type": "Call", "col_offset": 8, "end_col_offset": 44, "end_lineno": 309, "func": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 16, "end_lineno": 309, "id": "Approval", "lineno": 309, "node_id": 954, "src": "11011:8:2"}, "keyword": null, "keywords": [], "lineno": 309, "node_id": 953, "src": "11011:36:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 287, "id": "external", "lineno": 287, "node_id": 962, "src": "9904:8:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 8, "end_lineno": 288, "id": "payable", "lineno": 288, "node_id": 964, "src": "9914:7:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 297, "lineno": 290, "node_id": 966, "src": "9978:529:2", "value": "\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    "}, "end_col_offset": 44, "end_lineno": 309, "lineno": 289, "name": "approve", "node_id": 850, "pos": null, "returns": null, "src": "9922:1125:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 33, "end_col_offset": 40, "end_lineno": 313, "id": "address", "lineno": 313, "node_id": 970, "src": "11093:7:2"}, "arg": "_operator", "ast_type": "arg", "col_offset": 22, "end_col_offset": 40, "end_lineno": 313, "lineno": 313, "node_id": 969, "src": "11082:18:2"}, {"annotation": {"ast_type": "Name", "col_offset": 53, "end_col_offset": 57, "end_lineno": 313, "id": "bool", "lineno": 313, "node_id": 973, "src": "11113:4:2"}, "arg": "_approved", "ast_type": "arg", "col_offset": 42, "end_col_offset": 57, "end_lineno": 313, "lineno": 313, "node_id": 972, "src": "11102:15:2"}], "ast_type": "arguments", "col_offset": 22, "default": null, "defaults": [], "end_col_offset": 57, "end_lineno": 313, "lineno": 313, "node_id": 968, "src": "11082:35:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 34, "end_lineno": 323, "lineno": 323, "msg": null, "node_id": 977, "src": "11662:30:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 34, "end_lineno": 323, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 20, "end_lineno": 323, "id": "_operator", "lineno": 323, "node_id": 979, "src": "11669:9:2"}, "lineno": 323, "node_id": 978, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 34, "end_lineno": 323, "lineno": 323, "node_id": 1120, "src": "11669:23:2"}, "right": {"ast_type": "Attribute", "attr": "sender", "col_offset": 24, "end_col_offset": 34, "end_lineno": 323, "lineno": 323, "node_id": 982, "src": "11682:10:2", "value": {"ast_type": "Name", "col_offset": 24, "end_col_offset": 27, "end_lineno": 323, "id": "msg", "lineno": 323, "node_id": 983, "src": "11682:3:2"}}, "src": "11669:23:2"}}, {"ast_type": "Assign", "col_offset": 4, "end_col_offset": 60, "end_lineno": 324, "lineno": 324, "node_id": 986, "src": "11697:56:2", "target": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 48, "end_lineno": 324, "lineno": 324, "node_id": 987, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 48, "end_lineno": 324, "lineno": 324, "node_id": 1002, "src": "11697:44:2", "value": {"ast_type": "Name", "col_offset": 38, "end_col_offset": 47, "end_lineno": 324, "id": "_operator", "lineno": 324, "node_id": 999, "src": "11731:9:2"}}, "src": "11697:44:2", "value": {"ast_type": "Subscript", "col_offset": 4, "end_col_offset": 37, "end_lineno": 324, "lineno": 324, "node_id": 988, "slice": {"ast_type": "Index", "col_offset": 4, "end_col_offset": 37, "end_lineno": 324, "lineno": 324, "node_id": 998, "src": "11697:33:2", "value": {"ast_type": "Attribute", "attr": "sender", "col_offset": 26, "end_col_offset": 36, "end_lineno": 324, "lineno": 324, "node_id": 993, "src": "11719:10:2", "value": {"ast_type": "Name", "col_offset": 26, "end_col_offset": 29, "end_lineno": 324, "id": "msg", "lineno": 324, "node_id": 994, "src": "11719:3:2"}}}, "src": "11697:33:2", "value": {"ast_type": "Attribute", "attr": "ownerToOperators", "col_offset": 4, "end_col_offset": 25, "end_lineno": 324, "lineno": 324, "node_id": 989, "src": "11697:21:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 324, "id": "self", "lineno": 324, "node_id": 990, "src": "11697:4:2"}}}}, "value": {"ast_type": "Name", "col_offset": 51, "end_col_offset": 60, "end_lineno": 324, "id": "_approved", "lineno": 324, "node_id": 1003, "src": "11744:9:2"}}, {"ast_type": "Log", "col_offset": 4, "end_col_offset": 56, "end_lineno": 325, "lineno": 325, "node_id": 1006, "src": "11758:52:2", "value": {"args": [{"ast_type": "Attribute", "attr": "sender", "col_offset": 23, "end_col_offset": 33, "end_lineno": 325, "lineno": 325, "node_id": 1010, "src": "11777:10:2", "value": {"ast_type": "Name", "col_offset": 23, "end_col_offset": 26, "end_lineno": 325, "id": "msg", "lineno": 325, "node_id": 1011, "src": "11777:3:2"}}, {"ast_type": "Name", "col_offset": 35, "end_col_offset": 44, "end_lineno": 325, "id": "_operator", "lineno": 325, "node_id": 1014, "src": "11789:9:2"}, {"ast_type": "Name", "col_offset": 46, "end_col_offset": 55, "end_lineno": 325, "id": "_approved", "lineno": 325, "node_id": 1016, "src": "11800:9:2"}], "ast_type": "Call", "col_offset": 8, "end_col_offset": 56, "end_lineno": 325, "func": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 22, "end_lineno": 325, "id": "ApprovalForAll", "lineno": 325, "node_id": 1008, "src": "11762:14:2"}, "keyword": null, "keywords": [], "lineno": 325, "node_id": 1007, "src": "11762:48:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 312, "id": "external", "lineno": 312, "node_id": 1018, "src": "11051:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 321, "lineno": 314, "node_id": 1020, "src": "11124:485:2", "value": "\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    "}, "end_col_offset": 56, "end_lineno": 325, "lineno": 313, "name": "setApprovalForAll", "node_id": 967, "pos": null, "returns": null, "src": "11060:750:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 14, "end_col_offset": 21, "end_lineno": 331, "id": "address", "lineno": 331, "node_id": 1024, "src": "11868:7:2"}, "arg": "_to", "ast_type": "arg", "col_offset": 9, "end_col_offset": 21, "end_lineno": 331, "lineno": 331, "node_id": 1023, "src": "11863:12:2"}, {"annotation": {"ast_type": "Name", "col_offset": 33, "end_col_offset": 40, "end_lineno": 331, "id": "uint256", "lineno": 331, "node_id": 1027, "src": "11887:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 23, "end_col_offset": 40, "end_lineno": 331, "lineno": 331, "node_id": 1026, "src": "11877:17:2"}], "ast_type": "arguments", "col_offset": 9, "default": null, "defaults": [], "end_col_offset": 40, "end_lineno": 331, "lineno": 331, "node_id": 1022, "src": "11863:31:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 36, "end_lineno": 342, "lineno": 342, "msg": null, "node_id": 1031, "src": "12325:32:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 36, "end_lineno": 342, "left": {"ast_type": "Attribute", "attr": "sender", "col_offset": 11, "end_col_offset": 21, "end_lineno": 342, "lineno": 342, "node_id": 1033, "src": "12332:10:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 14, "end_lineno": 342, "id": "msg", "lineno": 342, "node_id": 1034, "src": "12332:3:2"}}, "lineno": 342, "node_id": 1032, "op": {"ast_type": "Eq", "col_offset": 11, "end_col_offset": 36, "end_lineno": 342, "lineno": 342, "node_id": 1037, "src": "12332:25:2"}, "right": {"ast_type": "Attribute", "attr": "minter", "col_offset": 25, "end_col_offset": 36, "end_lineno": 342, "lineno": 342, "node_id": 1038, "src": "12346:11:2", "value": {"ast_type": "Name", "col_offset": 25, "end_col_offset": 29, "end_lineno": 342, "id": "self", "lineno": 342, "node_id": 1039, "src": "12346:4:2"}}, "src": "12332:25:2"}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 32, "end_lineno": 344, "lineno": 344, "msg": null, "node_id": 1042, "src": "12400:28:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 32, "end_lineno": 344, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 14, "end_lineno": 344, "id": "_to", "lineno": 344, "node_id": 1044, "src": "12407:3:2"}, "lineno": 344, "node_id": 1043, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 32, "end_lineno": 344, "lineno": 344, "node_id": 1120, "src": "12407:21:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 24, "end_col_offset": 31, "end_lineno": 344, "id": "address", "lineno": 344, "node_id": 1050, "src": "12420:7:2"}], "ast_type": "Call", "col_offset": 18, "end_col_offset": 32, "end_lineno": 344, "func": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 23, "end_lineno": 344, "id": "empty", "lineno": 344, "node_id": 1048, "src": "12414:5:2"}, "keyword": null, "keywords": [], "lineno": 344, "node_id": 1047, "src": "12414:14:2"}, "src": "12407:21:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 35, "end_lineno": 346, "lineno": 346, "node_id": 1052, "src": "12489:31:2", "value": {"args": [{"ast_type": "Name", "col_offset": 21, "end_col_offset": 24, "end_lineno": 346, "id": "_to", "lineno": 346, "node_id": 1058, "src": "12506:3:2"}, {"ast_type": "Name", "col_offset": 26, "end_col_offset": 34, "end_lineno": 346, "id": "_tokenId", "lineno": 346, "node_id": 1060, "src": "12511:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 35, "end_lineno": 346, "func": {"ast_type": "Attribute", "attr": "_addTokenTo", "col_offset": 4, "end_col_offset": 20, "end_lineno": 346, "lineno": 346, "node_id": 1054, "src": "12489:16:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 346, "id": "self", "lineno": 346, "node_id": 1055, "src": "12489:4:2"}}, "keyword": null, "keywords": [], "lineno": 346, "node_id": 1053, "src": "12489:31:2"}}, {"ast_type": "Log", "col_offset": 4, "end_col_offset": 47, "end_lineno": 347, "lineno": 347, "node_id": 1063, "src": "12525:43:2", "value": {"args": [{"args": [{"ast_type": "Name", "col_offset": 23, "end_col_offset": 30, "end_lineno": 347, "id": "address", "lineno": 347, "node_id": 1070, "src": "12544:7:2"}], "ast_type": "Call", "col_offset": 17, "end_col_offset": 31, "end_lineno": 347, "func": {"ast_type": "Name", "col_offset": 17, "end_col_offset": 22, "end_lineno": 347, "id": "empty", "lineno": 347, "node_id": 1068, "src": "12538:5:2"}, "keyword": null, "keywords": [], "lineno": 347, "node_id": 1067, "src": "12538:14:2"}, {"ast_type": "Name", "col_offset": 33, "end_col_offset": 36, "end_lineno": 347, "id": "_to", "lineno": 347, "node_id": 1072, "src": "12554:3:2"}, {"ast_type": "Name", "col_offset": 38, "end_col_offset": 46, "end_lineno": 347, "id": "_tokenId", "lineno": 347, "node_id": 1074, "src": "12559:8:2"}], "ast_type": "Call", "col_offset": 8, "end_col_offset": 47, "end_lineno": 347, "func": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 16, "end_lineno": 347, "id": "Transfer", "lineno": 347, "node_id": 1065, "src": "12529:8:2"}, "keyword": null, "keywords": [], "lineno": 347, "node_id": 1064, "src": "12529:39:2"}}, {"ast_type": "Return", "col_offset": 4, "end_col_offset": 15, "end_lineno": 348, "lineno": 348, "node_id": 1076, "src": "12573:11:2", "value": {"ast_type": "NameConstant", "col_offset": 11, "end_col_offset": 15, "end_lineno": 348, "lineno": 348, "node_id": 1077, "src": "12580:4:2", "value": true}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 330, "id": "external", "lineno": 330, "node_id": 1078, "src": "11845:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 340, "lineno": 332, "node_id": 1082, "src": "11909:364:2", "value": "\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @param _tokenId The token id to mint.\n    @return A boolean that indicates if the operation was successful.\n    "}, "end_col_offset": 15, "end_lineno": 348, "lineno": 331, "name": "mint", "node_id": 1021, "pos": null, "returns": {"ast_type": "Name", "col_offset": 45, "end_col_offset": 49, "end_lineno": 331, "id": "bool", "lineno": 331, "node_id": 1080, "src": "11899:4:2"}, "src": "11854:730:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 19, "end_col_offset": 26, "end_lineno": 352, "id": "uint256", "lineno": 352, "node_id": 1086, "src": "12616:7:2"}, "arg": "_tokenId", "ast_type": "arg", "col_offset": 9, "end_col_offset": 26, "end_lineno": 352, "lineno": 352, "node_id": 1085, "src": "12606:17:2"}], "ast_type": "arguments", "col_offset": 9, "default": null, "defaults": [], "end_col_offset": 26, "end_lineno": 352, "lineno": 352, "node_id": 1084, "src": "12606:17:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Assert", "col_offset": 4, "end_col_offset": 56, "end_lineno": 361, "lineno": 361, "msg": null, "node_id": 1090, "src": "12955:52:2", "test": {"args": [{"ast_type": "Attribute", "attr": "sender", "col_offset": 35, "end_col_offset": 45, "end_lineno": 361, "lineno": 361, "node_id": 1096, "src": "12986:10:2", "value": {"ast_type": "Name", "col_offset": 35, "end_col_offset": 38, "end_lineno": 361, "id": "msg", "lineno": 361, "node_id": 1097, "src": "12986:3:2"}}, {"ast_type": "Name", "col_offset": 47, "end_col_offset": 55, "end_lineno": 361, "id": "_tokenId", "lineno": 361, "node_id": 1100, "src": "12998:8:2"}], "ast_type": "Call", "col_offset": 11, "end_col_offset": 56, "end_lineno": 361, "func": {"ast_type": "Attribute", "attr": "_isApprovedOrOwner", "col_offset": 11, "end_col_offset": 34, "end_lineno": 361, "lineno": 361, "node_id": 1092, "src": "12962:23:2", "value": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 15, "end_lineno": 361, "id": "self", "lineno": 361, "node_id": 1093, "src": "12962:4:2"}}, "keyword": null, "keywords": [], "lineno": 361, "node_id": 1091, "src": "12962:45:2"}}, {"annotation": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 18, "end_lineno": 362, "id": "address", "lineno": 362, "node_id": 1105, "src": "13019:7:2"}, "ast_type": "AnnAssign", "col_offset": 4, "end_col_offset": 45, "end_lineno": 362, "lineno": 362, "node_id": 1102, "simple": 1, "src": "13012:41:2", "target": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 9, "end_lineno": 362, "id": "owner", "lineno": 362, "node_id": 1103, "src": "13012:5:2"}, "value": {"ast_type": "Subscript", "col_offset": 21, "end_col_offset": 45, "end_lineno": 362, "lineno": 362, "node_id": 1107, "slice": {"ast_type": "Index", "col_offset": 21, "end_col_offset": 45, "end_lineno": 362, "lineno": 362, "node_id": 1115, "src": "13029:24:2", "value": {"ast_type": "Name", "col_offset": 36, "end_col_offset": 44, "end_lineno": 362, "id": "_tokenId", "lineno": 362, "node_id": 1112, "src": "13044:8:2"}}, "src": "13029:24:2", "value": {"ast_type": "Attribute", "attr": "idToOwner", "col_offset": 21, "end_col_offset": 35, "end_lineno": 362, "lineno": 362, "node_id": 1108, "src": "13029:14:2", "value": {"ast_type": "Name", "col_offset": 21, "end_col_offset": 25, "end_lineno": 362, "id": "self", "lineno": 362, "node_id": 1109, "src": "13029:4:2"}}}}, {"ast_type": "Assert", "col_offset": 4, "end_col_offset": 34, "end_lineno": 364, "lineno": 364, "msg": null, "node_id": 1116, "src": "13104:30:2", "test": {"ast_type": "Compare", "col_offset": 11, "end_col_offset": 34, "end_lineno": 364, "left": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 16, "end_lineno": 364, "id": "owner", "lineno": 364, "node_id": 1118, "src": "13111:5:2"}, "lineno": 364, "node_id": 1117, "op": {"ast_type": "NotEq", "col_offset": 11, "end_col_offset": 34, "end_lineno": 364, "lineno": 364, "node_id": 1120, "src": "13111:23:2"}, "right": {"args": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 33, "end_lineno": 364, "id": "address", "lineno": 364, "node_id": 1124, "src": "13126:7:2"}], "ast_type": "Call", "col_offset": 20, "end_col_offset": 34, "end_lineno": 364, "func": {"ast_type": "Name", "col_offset": 20, "end_col_offset": 25, "end_lineno": 364, "id": "empty", "lineno": 364, "node_id": 1122, "src": "13120:5:2"}, "keyword": null, "keywords": [], "lineno": 364, "node_id": 1121, "src": "13120:14:2"}, "src": "13111:23:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 40, "end_lineno": 365, "lineno": 365, "node_id": 1126, "src": "13139:36:2", "value": {"args": [{"ast_type": "Name", "col_offset": 24, "end_col_offset": 29, "end_lineno": 365, "id": "owner", "lineno": 365, "node_id": 1132, "src": "13159:5:2"}, {"ast_type": "Name", "col_offset": 31, "end_col_offset": 39, "end_lineno": 365, "id": "_tokenId", "lineno": 365, "node_id": 1134, "src": "13166:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 40, "end_lineno": 365, "func": {"ast_type": "Attribute", "attr": "_clearApproval", "col_offset": 4, "end_col_offset": 23, "end_lineno": 365, "lineno": 365, "node_id": 1128, "src": "13139:19:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 365, "id": "self", "lineno": 365, "node_id": 1129, "src": "13139:4:2"}}, "keyword": null, "keywords": [], "lineno": 365, "node_id": 1127, "src": "13139:36:2"}}, {"ast_type": "Expr", "col_offset": 4, "end_col_offset": 42, "end_lineno": 366, "lineno": 366, "node_id": 1136, "src": "13180:38:2", "value": {"args": [{"ast_type": "Name", "col_offset": 26, "end_col_offset": 31, "end_lineno": 366, "id": "owner", "lineno": 366, "node_id": 1142, "src": "13202:5:2"}, {"ast_type": "Name", "col_offset": 33, "end_col_offset": 41, "end_lineno": 366, "id": "_tokenId", "lineno": 366, "node_id": 1144, "src": "13209:8:2"}], "ast_type": "Call", "col_offset": 4, "end_col_offset": 42, "end_lineno": 366, "func": {"ast_type": "Attribute", "attr": "_removeTokenFrom", "col_offset": 4, "end_col_offset": 25, "end_lineno": 366, "lineno": 366, "node_id": 1138, "src": "13180:21:2", "value": {"ast_type": "Name", "col_offset": 4, "end_col_offset": 8, "end_lineno": 366, "id": "self", "lineno": 366, "node_id": 1139, "src": "13180:4:2"}}, "keyword": null, "keywords": [], "lineno": 366, "node_id": 1137, "src": "13180:38:2"}}, {"ast_type": "Log", "col_offset": 4, "end_col_offset": 49, "end_lineno": 367, "lineno": 367, "node_id": 1147, "src": "13223:45:2", "value": {"args": [{"ast_type": "Name", "col_offset": 17, "end_col_offset": 22, "end_lineno": 367, "id": "owner", "lineno": 367, "node_id": 1151, "src": "13236:5:2"}, {"args": [{"ast_type": "Name", "col_offset": 30, "end_col_offset": 37, "end_lineno": 367, "id": "address", "lineno": 367, "node_id": 1156, "src": "13249:7:2"}], "ast_type": "Call", "col_offset": 24, "end_col_offset": 38, "end_lineno": 367, "func": {"ast_type": "Name", "col_offset": 24, "end_col_offset": 29, "end_lineno": 367, "id": "empty", "lineno": 367, "node_id": 1154, "src": "13243:5:2"}, "keyword": null, "keywords": [], "lineno": 367, "node_id": 1153, "src": "13243:14:2"}, {"ast_type": "Name", "col_offset": 40, "end_col_offset": 48, "end_lineno": 367, "id": "_tokenId", "lineno": 367, "node_id": 1158, "src": "13259:8:2"}], "ast_type": "Call", "col_offset": 8, "end_col_offset": 49, "end_lineno": 367, "func": {"ast_type": "Name", "col_offset": 8, "end_col_offset": 16, "end_lineno": 367, "id": "Transfer", "lineno": 367, "node_id": 1149, "src": "13227:8:2"}, "keyword": null, "keywords": [], "lineno": 367, "node_id": 1148, "src": "13227:41:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 351, "id": "external", "lineno": 351, "node_id": 1160, "src": "12588:8:2"}], "doc_string": {"ast_type": "DocStr", "col_offset": 4, "end_col_offset": 7, "end_lineno": 359, "lineno": 353, "node_id": 1162, "src": "12630:295:2", "value": "\n    @dev Burns a specific ERC721 token.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId uint256 id of the ERC721 token to be burned.\n    "}, "end_col_offset": 49, "end_lineno": 367, "lineno": 352, "name": "burn", "node_id": 1083, "pos": null, "returns": null, "src": "12597:671:2"}, {"args": {"args": [{"annotation": {"ast_type": "Name", "col_offset": 22, "end_col_offset": 29, "end_lineno": 372, "id": "uint256", "lineno": 372, "node_id": 1166, "src": "13309:7:2"}, "arg": "tokenId", "ast_type": "arg", "col_offset": 13, "end_col_offset": 29, "end_lineno": 372, "lineno": 372, "node_id": 1165, "src": "13300:16:2"}], "ast_type": "arguments", "col_offset": 13, "default": null, "defaults": [], "end_col_offset": 29, "end_lineno": 372, "lineno": 372, "node_id": 1164, "src": "13300:16:2"}, "ast_type": "FunctionDef", "body": [{"ast_type": "Return", "col_offset": 4, "end_col_offset": 50, "end_lineno": 373, "lineno": 373, "node_id": 1168, "src": "13338:46:2", "value": {"args": [{"ast_type": "Attribute", "attr": "baseURL", "col_offset": 18, "end_col_offset": 30, "end_lineno": 373, "lineno": 373, "node_id": 1172, "src": "13352:12:2", "value": {"ast_type": "Name", "col_offset": 18, "end_col_offset": 22, "end_lineno": 373, "id": "self", "lineno": 373, "node_id": 1173, "src": "13352:4:2"}}, {"args": [{"ast_type": "Name", "col_offset": 41, "end_col_offset": 48, "end_lineno": 373, "id": "tokenId", "lineno": 373, "node_id": 1179, "src": "13375:7:2"}], "ast_type": "Call", "col_offset": 32, "end_col_offset": 49, "end_lineno": 373, "func": {"ast_type": "Name", "col_offset": 32, "end_col_offset": 40, "end_lineno": 373, "id": "uint2str", "lineno": 373, "node_id": 1177, "src": "13366:8:2"}, "keyword": null, "keywords": [], "lineno": 373, "node_id": 1176, "src": "13366:17:2"}], "ast_type": "Call", "col_offset": 11, "end_col_offset": 50, "end_lineno": 373, "func": {"ast_type": "Name", "col_offset": 11, "end_col_offset": 17, "end_lineno": 373, "id": "concat", "lineno": 373, "node_id": 1170, "src": "13345:6:2"}, "keyword": null, "keywords": [], "lineno": 373, "node_id": 1169, "src": "13345:39:2"}}], "col_offset": 0, "decorator_list": [{"ast_type": "Name", "col_offset": 1, "end_col_offset": 5, "end_lineno": 370, "id": "view", "lineno": 370, "node_id": 1181, "src": "13272:4:2"}, {"ast_type": "Name", "col_offset": 1, "end_col_offset": 9, "end_lineno": 371, "id": "external", "lineno": 371, "node_id": 1183, "src": "13278:8:2"}], "doc_string": null, "end_col_offset": 50, "end_lineno": 373, "lineno": 372, "name": "tokenURI", "node_id": 1163, "pos": null, "returns": {"ast_type": "Subscript", "col_offset": 34, "end_col_offset": 45, "end_lineno": 372, "lineno": 372, "node_id": 1185, "slice": {"ast_type": "Index", "col_offset": 34, "end_col_offset": 45, "end_lineno": 372, "lineno": 372, "node_id": 1190, "src": "13321:11:2", "value": {"ast_type": "Int", "col_offset": 41, "end_col_offset": 44, "end_lineno": 372, "lineno": 372, "node_id": 1188, "src": "13328:3:2", "value": 132}}, "src": "13321:11:2", "value": {"ast_type": "Name", "col_offset": 34, "end_col_offset": 40, "end_lineno": 372, "id": "String", "lineno": 372, "node_id": 1186, "src": "13321:6:2"}}, "src": "13287:97:2"}], "col_offset": 0, "doc_string": null, "end_col_offset": 50, "end_lineno": 373, "lineno": 1, "name": "contracts/ERC721.vy", "node_id": 0, "src": "0:13384:2"}, "bytecode": "0x346109bf5733600455601f6040527f68747470733a2f2f6170692e62616262792e78797a2f6d657461646174612f00606052604080518060055560208201805160065550505061096761005761000039610967610000f36003361161000c5761074a565b60003560e01c6323b872dd81186100695760643610610955576004358060a01c610955576101a0526024358060a01c610955576101c0526101a051610100526101c051610120526044356101405233610160526100676108b3565b005b6342842e0e81186100935760643610610955576000610600526106008051806101e05250506100cb565b63b88d4fde81186101f05760a4361061095557606435600401610400813511610955578035806101e052602082018181610200375050505b6004358060a01c610955576101a0526024358060a01c610955576101c0526101a051610100526101c0516101205260443561014052336101605261010d6108b3565b6101c0513b156101ee576101c05163150b7a0261064052608033610660526101a051610680526044356106a052806106c05280610660016101e0518082526020820181818361020060045afa5050508051806020830101601f82600003163682375050601f19601f8251602001011690508101505060206106406104a461065c6000855af16101a1573d600060003e3d6000fd5b60203d1061095557610640518060201b61095557610b0052610b00905051610620527f150b7a02000000000000000000000000000000000000000000000000000000006106205118610955575b005b63095ea7b381186102cd5760443610610955576004358060a01c6109555760405260006024356020526000526040600020546060526060511561095557606051604051146109555733600060243560205260005260406000205414608052600360605160205260005260406000208033602052600052604060002090505460a0526080516102805760a051610283565b60015b156109555760405160016024356020526000526040600020556024356040516060517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600060c0a4005b34610955576301ffc9a781186103545760243610610955576004358060201b610955576040526040517f01ffc9a7000000000000000000000000000000000000000000000000000000008118610324576001610349565b7f80ac58cd000000000000000000000000000000000000000000000000000000008118155b905060805260206080f35b6370a0823181186103975760243610610955576004358060a01c610955576040526040511561095557600260405160205260005260406000205460605260206060f35b636352211e81186103cc5760243610610955576000600435602052600052604060002054604052604051156109555760206040f35b63081812fc811861040f57602436106109555760006004356020526000526040600020541561095557600160043560205260005260406000205460405260206040f35b63e985e9c581186104695760443610610955576004358060a01c610955576040526024358060a01c610955576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63a22cb46581186104f65760443610610955576004358060a01c610955576040526024358060011c610955576060523360405114610955576060516003336020526000526040600020806040516020526000526040600020905055604051337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160605160805260206080a3005b6340c10f1981186105755760443610610955576004358060a01c61095557608052600454331861095557608051156109555760805160405260243560605261053c6107d1565b60243560805160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060a0a4600160a052602060a0f35b6342966c6881186106205760243610610955573360405260043560605261059d610100610750565b610100511561095557600060043560205260005260406000205461010052610100511561095557610100516040526004356060526105d961086e565b610100516040526004356060526105ee61081e565b6004356000610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610120a4005b63c87b56dd81186107485760243610610955576020806101805260006005548160e001600082601f0160051c6002811161095557801561067357905b80600601548160051b84015260010181811861065c575b50505080820191505060043580610695576030604152600160405260406106d7565b6000604f905b826106b5578081608e035280608e0392506106d3566106c8565b600a830660300181608e0352600a830492505b60010181811861069b575b5050805b90508051602082018360e0018281848460045afa505050808301925050508060c05260c090508161018001815180825260208301602083018281848460045afa505050508051806020830101601f82600003163682375050601f19601f825160200101169050905081019050610180f35b505b60006000fd5b60006060516020526000526040600020546080526040516080511460a05260016060516020526000526040600020546040511460c0526003608051602052600052604060002080604051602052600052604060002090505460e05260a0516107ba5760c0516107bd565b60015b6107c95760e0516107cc565b60015b815250565b600060605160205260005260406000205461095557604051600060605160205260005260406000205560026040516020526000526040600020805460018101818110610955579050815550565b604051600060605160205260005260406000205418610955576000600060605160205260005260406000205560026040516020526000526040600020805460018103818111610955579050815550565b604051600060605160205260005260406000205418610955576001606051602052600052604060002054156108b157600060016060516020526000526040600020555b565b61016051604052610140516060526108cc610180610750565b61018051156109555761012051156109555761010051604052610140516060526108f461086e565b610100516040526101405160605261090a61081e565b61012051604052610140516060526109206107d1565b6101405161012051610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610180a4565b600080fda165767970657283000307000b005b600080fd", "bytecodeSha1": "7121eb33ccf99312450cf51a99db5547b8cea723", "compiler": {"evm_version": "istanbul", "version": "0.3.7"}, "contractName": "ERC721", "coverageMap": {"branches": {"0": {"ERC721._addTokenTo": {"55": [5844, 5893, true]}, "ERC721._clearApproval": {"63": [6670, 6711, true], "64": [6719, 6765, false]}, "ERC721._removeTokenFrom": {"59": [6253, 6293, true]}, "ERC721._transferFrom": {"67": [7375, 7424, true], "69": [7471, 7499, true]}, "ERC721.approve": {"9": [10604, 10634, true], "11": [10688, 10713, true], "15": [10886, 10934, true]}, "ERC721.balanceOf": {"19": [3673, 3704, true]}, "ERC721.burn": {"42": [12955, 13007, true], "45": [13104, 13134, true]}, "ERC721.getApproved": {"27": [4414, 4463, true]}, "ERC721.mint": {"34": [12325, 12357, true], "36": [12400, 12428, true]}, "ERC721.ownerOf": {"23": [4073, 4103, true]}, "ERC721.safeTransferFrom": {"3": [9532, 9547, false], "5": [9798, 9900, true]}, "ERC721.setApprovalForAll": {"30": [11662, 11692, true]}}}, "statements": {"0": {"ERC721._addTokenTo": {"54": [5844, 5893], "56": [5921, 5951], "57": [5984, 6018]}, "ERC721._clearApproval": {"62": [6670, 6711], "65": [6801, 6846]}, "ERC721._isApprovedOrOwner": {"49": [5315, 5356], "50": [5361, 5401], "51": [5406, 5472], "52": [5477, 5549], "53": [5554, 5625]}, "ERC721._removeTokenFrom": {"58": [6253, 6293], "60": [6321, 6362], "61": [6395, 6431]}, "ERC721._transferFrom": {"66": [7375, 7424], "68": [7471, 7499], "70": [7569, 7605], "71": [7668, 7706], "72": [7725, 7756], "73": [7784, 7818]}, "ERC721.approve": {"6": [10512, 10553], "7": [11007, 11047], "8": [10604, 10634], "10": [10688, 10713], "12": [10743, 10803], "13": [10808, 10881], "14": [10886, 10934], "16": [10962, 11002]}, "ERC721.balanceOf": {"18": [3673, 3704], "20": [3709, 3748]}, "ERC721.burn": {"40": [12955, 13007], "41": [13223, 13268], "43": [13012, 13053], "44": [13104, 13134], "46": [13139, 13175], "47": [13180, 13218]}, "ERC721.getApproved": {"25": [4414, 4463], "26": [4468, 4503]}, "ERC721.isApprovedForAll": {"28": [4795, 4844]}, "ERC721.mint": {"33": [12325, 12357], "35": [12400, 12428], "37": [12489, 12520], "38": [12525, 12568], "39": [12573, 12584]}, "ERC721.ownerOf": {"21": [3981, 4022], "22": [4073, 4103], "24": [4108, 4120]}, "ERC721.safeTransferFrom": {"1": [9472, 9524], "2": [9596, 9690], "4": [9798, 9900]}, "ERC721.setApprovalForAll": {"29": [11662, 11692], "31": [11697, 11753], "32": [11758, 11810]}, "ERC721.supportsInterface": {"17": [3305, 3348]}, "ERC721.tokenURI": {"48": [13338, 13384]}, "ERC721.transferFrom": {"0": [8492, 8544]}}}}, "dependencies": [], "deployedBytecode": "0x6003361161000c5761074a565b60003560e01c6323b872dd81186100695760643610610955576004358060a01c610955576101a0526024358060a01c610955576101c0526101a051610100526101c051610120526044356101405233610160526100676108b3565b005b6342842e0e81186100935760643610610955576000610600526106008051806101e05250506100cb565b63b88d4fde81186101f05760a4361061095557606435600401610400813511610955578035806101e052602082018181610200375050505b6004358060a01c610955576101a0526024358060a01c610955576101c0526101a051610100526101c0516101205260443561014052336101605261010d6108b3565b6101c0513b156101ee576101c05163150b7a0261064052608033610660526101a051610680526044356106a052806106c05280610660016101e0518082526020820181818361020060045afa5050508051806020830101601f82600003163682375050601f19601f8251602001011690508101505060206106406104a461065c6000855af16101a1573d600060003e3d6000fd5b60203d1061095557610640518060201b61095557610b0052610b00905051610620527f150b7a02000000000000000000000000000000000000000000000000000000006106205118610955575b005b63095ea7b381186102cd5760443610610955576004358060a01c6109555760405260006024356020526000526040600020546060526060511561095557606051604051146109555733600060243560205260005260406000205414608052600360605160205260005260406000208033602052600052604060002090505460a0526080516102805760a051610283565b60015b156109555760405160016024356020526000526040600020556024356040516060517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600060c0a4005b34610955576301ffc9a781186103545760243610610955576004358060201b610955576040526040517f01ffc9a7000000000000000000000000000000000000000000000000000000008118610324576001610349565b7f80ac58cd000000000000000000000000000000000000000000000000000000008118155b905060805260206080f35b6370a0823181186103975760243610610955576004358060a01c610955576040526040511561095557600260405160205260005260406000205460605260206060f35b636352211e81186103cc5760243610610955576000600435602052600052604060002054604052604051156109555760206040f35b63081812fc811861040f57602436106109555760006004356020526000526040600020541561095557600160043560205260005260406000205460405260206040f35b63e985e9c581186104695760443610610955576004358060a01c610955576040526024358060a01c610955576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63a22cb46581186104f65760443610610955576004358060a01c610955576040526024358060011c610955576060523360405114610955576060516003336020526000526040600020806040516020526000526040600020905055604051337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160605160805260206080a3005b6340c10f1981186105755760443610610955576004358060a01c61095557608052600454331861095557608051156109555760805160405260243560605261053c6107d1565b60243560805160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060a0a4600160a052602060a0f35b6342966c6881186106205760243610610955573360405260043560605261059d610100610750565b610100511561095557600060043560205260005260406000205461010052610100511561095557610100516040526004356060526105d961086e565b610100516040526004356060526105ee61081e565b6004356000610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610120a4005b63c87b56dd81186107485760243610610955576020806101805260006005548160e001600082601f0160051c6002811161095557801561067357905b80600601548160051b84015260010181811861065c575b50505080820191505060043580610695576030604152600160405260406106d7565b6000604f905b826106b5578081608e035280608e0392506106d3566106c8565b600a830660300181608e0352600a830492505b60010181811861069b575b5050805b90508051602082018360e0018281848460045afa505050808301925050508060c05260c090508161018001815180825260208301602083018281848460045afa505050508051806020830101601f82600003163682375050601f19601f825160200101169050905081019050610180f35b505b60006000fd5b60006060516020526000526040600020546080526040516080511460a05260016060516020526000526040600020546040511460c0526003608051602052600052604060002080604051602052600052604060002090505460e05260a0516107ba5760c0516107bd565b60015b6107c95760e0516107cc565b60015b815250565b600060605160205260005260406000205461095557604051600060605160205260005260406000205560026040516020526000526040600020805460018101818110610955579050815550565b604051600060605160205260005260406000205418610955576000600060605160205260005260406000205560026040516020526000526040600020805460018103818111610955579050815550565b604051600060605160205260005260406000205418610955576001606051602052600052604060002054156108b157600060016060516020526000526040600020555b565b61016051604052610140516060526108cc610180610750565b61018051156109555761012051156109555761010051604052610140516060526108f461086e565b610100516040526101405160605261090a61081e565b61012051604052610140516060526109206107d1565b6101405161012051610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610180a4565b600080fda165767970657283000307000b", "deployedSourceMap": "-1:-1:2:-;;;;:::-;;:::-;:::-;;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;7885:14;;-1:-1;;;;;;:::-;7901:12;;8511:5;-1:-1;;;8518:3;-1:-1;;;8523:8;-1:-1;;;8533:10;-1:-1;;;8492:52;:::i;-1:-1::-;;:::-;;;;8566:1334;:::-;-1:-1;;;;:::-;;;;;;;;8669:18;-1:-1;;8669:18;-1:-1;:::-;8566:1334::-;-1:-1;;;8566:1334;:::-;-1:-1;;;;:::-;;;;8669:18;-1:-1;8669:18;-1:-1;;;:::-;8669:18;-1:-1;;;;;8669:18;-1:-1;;;;;;;8669:18;-1:-1::-;;;;;;;:::-;8596:14;;-1:-1;;;;;;:::-;8620:12;;9491:5;-1:-1;;;9498:3;-1:-1;;;9674:8;-1:-1;;;9513:10;-1:-1;;;9472:52;:::i;:::-;9532:3;-1:-1;9532:15;;-1:-1;9529:371::-;9618:19;:72;-1:-1;;;;9655:10;-1:-1;;9667:5;-1:-1;;;9674:8;-1:-1;;;;;;;;;9684:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9618:72;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;9618:72;;9596:94;;;9820:80;9805:11;:95;;9798:102;:::-;-1:-1::-;;8566:1334::-;-1:-1;;;;:::-;;;;;:::-;;;;;;;:::-;9934:18;;10529:14;11038:8;10529:24;;;;;;;;10512:41;;;10611:5;:23;;10604:30;:::-;10708:5;-1:-1;10695:9;-1:-1;;10688:25;:::-;10793:10;10765:14;11038:8;10765:24;;;;;;;;:38;;10743:60;;10840:21;10862:5;-1:-1;10840:28;;;;;;;-1:-1;10870:10;-1:-1;;;;;;;10839:42;;-1:-1;;10808:73;10894:13;-1:-1;10894:39;:::-;10911:22;10894:39;;:::-;:::-;;:::-;10886:48;;:::-;10993:9;-1:-1;10962:18;11038:8;10962:28;;;;;;;;:40;11038:8;11007:40;11027:9;11007:40;11020:5;11007:40;;;;;-1:-1;:::-;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3151:20;;3312:12;:36;3328:20;3312:36;-1:-1;3312:36;:::-;-1:-1;3312:36;:::-;:::-;3328:20;3312:36;-1:-1;;3312:36::-;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3405:15;;3680:6;:24;;3673:31;:::-;3716:24;3741:6;-1:-1;3716:32;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;3998:14;4013:8;3998:24;;;;;;;;3981:41;;;4080:5;:23;;4073:30;:::-;-1:-1;4115:5;-1:-1;:::-;;;;;:::-;;;;;:::-;4421:14;4494:8;4421:24;;;;;;;;:42;;4414:49;:::-;4475:18;4494:8;4475:28;;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;4543:15;;-1:-1;;;;;;:::-;4560:18;;4803:21;4825:6;-1:-1;4803:29;;;;;;;-1:-1;4834:9;-1:-1;;;;;;;;4802:42;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;11082:18;;-1:-1;;;;;;:::-;11102:15;;11682:10;11669:9;-1:-1;;11662:30;:::-;11744:9;-1:-1;11697:21;11719:10;11697:33;;;;;;;-1:-1;11731:9;-1:-1;;;;;;;;11697:44;;-1:-1;11789:9;11758:52;11777:10;11758:52;11800:9;-1:-1;;;;11758:52;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;11863:12;;12346:11;12332:25;:10;:25;12325:32;:::-;12407:3;:21;;12400:28;:::-;12506:3;-1:-1;;;12559:8;-1:-1;;;;12489:31;:::i;:::-;12559:8;12525:43;12554:3;12525:43;;;;;;12580:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;12986:10;-1:-1;;13259:8;-1:-1;;;;12962:45;;:::i;:::-;;12955:52;;;:::-;13029:14;13259:8;13029:24;;;;;;;;13012:41;;;13111:5;:23;;13104:30;:::-;13159:5;-1:-1;;;13259:8;-1:-1;;;;13139:36;:::i;:::-;13202:5;-1:-1;;;13259:8;-1:-1;;;;13180:38;:::i;:::-;13259:8;13223:45;;13236:5;13223:45;;;;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;13345:39;13352:12;-1:-1;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;13375:7;13366:17;;;:::-;-1:-1;;;;;;;13366:17;:::-;:::-;-1:-1;;;:::-;13366:17;-1:-1;:::-;;;;;;;;;;;;:::-;;:::-;:::-;;13366:17;-1:-1;;;;;;;;13366:17;-1:-1;;;:::-;;;;;;;:::-;:::-;;;13366:17;:::-;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13345:39;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;4898:727::-;5332:14;5347:8;-1:-1;5332:24;;;;;;;-1:-1;;5315:41;5393:8;-1:-1;5384:5;-1:-1;5384:17;-1:-1;5361:40;5444:18;5463:8;-1:-1;5444:28;;;;;;;-1:-1;5432:8;-1:-1;5432:40;-1:-1;5406:66;5510:21;5532:5;-1:-1;5510:28;;;;;;;-1:-1;5540:8;-1:-1;;;;;;;;5509:40;;-1:-1;;5477:72;5562:14;-1:-1;5562:35;:::-;5580:17;5562:35;;:::-;:::-;;:::-;5561:64;:::-;5602:23;5561:64;;:::-;:::-;;:::-;-1:-1;5554:71;;-1:-1::-;5638:380::-;5851:14;5866:8;-1:-1;5851:24;;;;;;;:42;5844:49;:::-;5948:3;-1:-1;5921:14;5936:8;-1:-1;5921:24;;;;;;;-1:-1;5984:24;6009:3;-1:-1;5984:29;;;;;;;-1:-1;;6017:1;-1:-1;;;;;;:::-;5984:34;;-1:-1;;5984:34;-1:-1::-;6031:400::-;6288:5;6260:33;:14;6275:8;-1:-1;6260:24;;;;;;;:33;;6253:40;:::-;-1:-1;6321:14;6336:8;-1:-1;6321:24;;;;;;;-1:-1;6395:24;6420:5;-1:-1;6395:31;;;;;;;-1:-1;;6430:1;-1:-1;;;;;;:::-;6395:36;;-1:-1;;6395:36;-1:-1::-;6444:402::-;6705:6;6677:34;:14;6692:8;-1:-1;6677:24;;;;;;;:34;;6670:41;:::-;6719:18;6738:8;-1:-1;6719:28;;;;;;;:46;;-1:-1;6716:130::-;-1:-1;6801:18;6820:8;-1:-1;6801:28;;;;;;;-1:-1;6444:402::-;-1:-1::-;6859:959::-;7406:7;-1:-1;;;7415:8;-1:-1;;;;7382:42;;:::i;:::-;;7375:49;;;:::-;7478:3;:21;;7471:28;:::-;7589:5;-1:-1;;;7596:8;-1:-1;;;;7569:36;:::i;:::-;7690:5;-1:-1;;;7697:8;-1:-1;;;;7668:38;:::i;:::-;7742:3;-1:-1;;;7747:8;-1:-1;;;;7725:31;:::i;:::-;7809:8;7784:34;7804:3;7784:34;7797:5;7784:34;;;;;-1:-1::-;:::-;;;", "language": "Vyper", "natspec": {"methods": {"__init__()": {"details": "Contract constructor."}, "approve(address,uint256)": {"details": "Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner. Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP) Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)", "params": {"_approved": "Address to be approved for the given NFT ID.", "_tokenId": "ID of the token to be approved."}}, "balanceOf(address)": {"details": "Returns the number of NFTs owned by `_owner`. Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.", "params": {"_owner": "Address for whom to query the balance."}}, "burn(uint256)": {"details": "Burns a specific ERC721 token. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_tokenId` is not a valid NFT.", "params": {"_tokenId": "uint256 id of the ERC721 token to be burned."}}, "getApproved(uint256)": {"details": "Get the approved address for a single NFT. Throws if `_tokenId` is not a valid NFT.", "params": {"_tokenId": "ID of the NFT to query the approval of."}}, "isApprovedForAll(address,address)": {"details": "Checks if `_operator` is an approved operator for `_owner`.", "params": {"_operator": "The address that acts on behalf of the owner.", "_owner": "The address that owns the NFTs."}}, "mint(address,uint256)": {"details": "Function to mint tokens Throws if `msg.sender` is not the minter. Throws if `_to` is zero address. Throws if `_tokenId` is owned by someone.", "params": {"_to": "The address that will receive the minted tokens.", "_tokenId": "The token id to mint."}, "returns": {"_0": "A boolean that indicates if the operation was successful."}}, "ownerOf(uint256)": {"details": "Returns the address of the owner of the NFT. Throws if `_tokenId` is not a valid NFT.", "params": {"_tokenId": "The identifier for an NFT."}}, "safeTransferFrom(address,address,uint256)": {"details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.", "params": {"_data": "Additional data with no specified format, sent in call to `_to`.", "_from": "The current owner of the NFT.", "_to": "The new owner.", "_tokenId": "The NFT to transfer."}}, "safeTransferFrom(address,address,uint256,bytes)": {"details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.", "params": {"_data": "Additional data with no specified format, sent in call to `_to`.", "_from": "The current owner of the NFT.", "_to": "The new owner.", "_tokenId": "The NFT to transfer."}}, "setApprovalForAll(address,bool)": {"details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event. Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)", "notice": "This works even if sender doesn't own any tokens at the time.", "params": {"_approved": "True if the operators is approved, false to revoke approval.", "_operator": "Address to add to the set of authorized operators."}}, "supportsInterface(bytes4)": {"details": "Interface identification is specified in ERC-165.", "params": {"interface_id": "Id of the interface"}}, "transferFrom(address,address,uint256)": {"details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.", "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.", "params": {"_from": "The current owner of the NFT.", "_to": "The new owner.", "_tokenId": "The NFT to transfer."}}}}, "offset": [0, 13385], "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x23B872DD DUP2 XOR PUSH2 0x069 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x10 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x120 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x067 PUSH2 0x8B3 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x42842EE DUP2 XOR PUSH2 0x093 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x0 PUSH2 0x60 MSTORE PUSH2 0x60 DUP1 MLOAD DUP1 PUSH2 0x1E0 MSTORE POP POP PUSH2 0x0CB JUMP JUMPDEST PUSH4 0xB88D4FDE DUP2 XOR PUSH2 0x1F0 JUMPI PUSH1 0xA4 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x40 DUP2 CALLDATALOAD GT PUSH2 0x955 JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x1E0 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x20 CALLDATACOPY POP POP POP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x10 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x120 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x1D PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x1C0 MLOAD EXTCODESIZE ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1C0 MLOAD PUSH4 0x15B7A2 PUSH2 0x640 MSTORE PUSH1 0x80 CALLER PUSH2 0x660 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x680 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x6A0 MSTORE DUP1 PUSH2 0x6C0 MSTORE DUP1 PUSH2 0x660 ADD PUSH2 0x1E0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH2 0x20 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD POP POP PUSH1 0x20 PUSH2 0x640 PUSH2 0x4A4 PUSH2 0x65C PUSH1 0x0 DUP6 GAS CALL PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x955 JUMPI PUSH2 0x640 MLOAD DUP1 PUSH1 0x20 SHL PUSH2 0x955 JUMPI PUSH2 0xB0 MSTORE PUSH2 0xB0 SWAP1 POP MLOAD PUSH2 0x620 MSTORE PUSH32 0x15B7A20000000000000000000000000000 PUSH2 0x620 MLOAD XOR PUSH2 0x955 JUMPI JUMPDEST STOP JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x2CD JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x60 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD EQ PUSH2 0x955 JUMPI CALLER PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD EQ PUSH1 0x80 MSTORE PUSH1 0x3 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH2 0x280 JUMPI PUSH1 0xA0 MLOAD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x60 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x0 PUSH1 0xC0 LOG4 STOP JUMPDEST CALLVALUE PUSH2 0x955 JUMPI PUSH4 0x1FFC9A7 DUP2 XOR PUSH2 0x354 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x20 SHL PUSH2 0x955 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x1FFC9A70000000000000000000000000000 DUP2 XOR PUSH2 0x324 JUMPI PUSH1 0x1 PUSH2 0x349 JUMP JUMPDEST PUSH32 0x80AC58CD0000000000000000000000000000 DUP2 XOR ISZERO JUMPDEST SWAP1 POP PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 XOR PUSH2 0x397 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x6352211E DUP2 XOR PUSH2 0x3CC JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x81812FC DUP2 XOR PUSH2 0x4F JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0xE985E9C5 DUP2 XOR PUSH2 0x469 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x60 MSTORE PUSH1 0x3 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0xA22CB465 DUP2 XOR PUSH2 0x4F6 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0x1 SHR PUSH2 0x955 JUMPI PUSH1 0x60 MSTORE CALLER PUSH1 0x40 MLOAD EQ PUSH2 0x955 JUMPI PUSH1 0x60 MLOAD PUSH1 0x3 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31 PUSH1 0x60 MLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 STOP JUMPDEST PUSH4 0x40C1F19 DUP2 XOR PUSH2 0x575 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x955 JUMPI PUSH1 0x80 MSTORE PUSH1 0x4 SLOAD CALLER XOR PUSH2 0x955 JUMPI PUSH1 0x80 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x80 MLOAD PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x53C PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x80 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH1 0xA0 LOG4 PUSH1 0x1 PUSH1 0xA0 MSTORE PUSH1 0x20 PUSH1 0xA0 RETURN JUMPDEST PUSH4 0x42966C68 DUP2 XOR PUSH2 0x620 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI CALLER PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x59D PUSH2 0x10 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x10 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH2 0x10 MSTORE PUSH2 0x10 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x5D9 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x5EE PUSH2 0x81E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x10 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x120 LOG4 STOP JUMPDEST PUSH4 0xC87B56DD DUP2 XOR PUSH2 0x748 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x955 JUMPI PUSH1 0x20 DUP1 PUSH2 0x180 MSTORE PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 PUSH1 0xE0 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x955 JUMPI DUP1 ISZERO PUSH2 0x673 JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x65C JUMPI JUMPDEST POP POP POP DUP1 DUP3 ADD SWAP2 POP POP PUSH1 0x4 CALLDATALOAD DUP1 PUSH2 0x695 JUMPI PUSH1 0x30 PUSH1 0x41 MSTORE PUSH1 0x1 PUSH1 0x40 MSTORE PUSH1 0x40 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4F SWAP1 JUMPDEST DUP3 PUSH2 0x6B5 JUMPI DUP1 DUP2 PUSH1 0x8E SUB MSTORE DUP1 PUSH1 0x8E SUB SWAP3 POP PUSH2 0x6D3 JUMP PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0xA DUP4 MOD PUSH1 0x30 ADD DUP2 PUSH1 0x8E SUB MSTORE PUSH1 0xA DUP4 DIV SWAP3 POP JUMPDEST PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x69B JUMPI JUMPDEST POP POP DUP1 JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD DUP4 PUSH1 0xE0 ADD DUP3 DUP2 DUP5 DUP5 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP1 PUSH1 0xC0 MSTORE PUSH1 0xC0 SWAP1 POP DUP2 PUSH2 0x180 ADD DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP3 DUP2 DUP5 DUP5 PUSH1 0x4 GAS STATICCALL POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP PUSH2 0x180 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD EQ PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MLOAD EQ PUSH1 0xC0 MSTORE PUSH1 0x3 PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xE0 MSTORE PUSH1 0xA0 MLOAD PUSH2 0x7BA JUMPI PUSH1 0xC0 MLOAD PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x7C9 JUMPI PUSH1 0xE0 MLOAD PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP2 DUP2 LT PUSH2 0x955 JUMPI SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x955 JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP2 SUB DUP2 DUP2 GT PUSH2 0x955 JUMPI SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x955 JUMPI PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE JUMPDEST JUMP JUMPDEST PUSH2 0x160 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x8CC PUSH2 0x180 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x180 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH2 0x120 MLOAD ISZERO PUSH2 0x955 JUMPI PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x8F4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x9A PUSH2 0x81E JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x920 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x120 MLOAD PUSH2 0x10 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x180 LOG4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND", "pcMap": {"0": {"offset": [0, 13384], "op": "PUSH1", "path": "0", "value": "0x3"}, "2": {"op": "CALLDATASIZE"}, "3": {"op": "GT"}, "4": {"op": "PUSH2", "value": "0x0C"}, "7": {"op": "JUMPI"}, "8": {"op": "PUSH2", "value": "0x74A"}, "11": {"op": "JUMP"}, "12": {"op": "JUMPDEST"}, "13": {"op": "PUSH1", "value": "0x0"}, "15": {"op": "CALLDATALOAD"}, "16": {"op": "PUSH1", "value": "0xE0"}, "18": {"op": "SHR"}, "19": {"op": "PUSH4", "value": "0x23B872DD"}, "24": {"op": "DUP2"}, "25": {"op": "XOR"}, "26": {"op": "PUSH2", "value": "0x069"}, "29": {"op": "JUMPI"}, "30": {"op": "PUSH1", "value": "0x64"}, "32": {"op": "CALLDATASIZE"}, "33": {"op": "LT"}, "34": {"op": "PUSH2", "value": "0x955"}, "37": {"op": "JUMPI"}, "38": {"op": "PUSH1", "value": "0x4"}, "40": {"op": "CALLDATALOAD"}, "41": {"op": "DUP1"}, "42": {"op": "PUSH1", "value": "0xA0"}, "44": {"op": "SHR"}, "45": {"op": "PUSH2", "value": "0x955"}, "48": {"op": "JUMPI"}, "49": {"fn": "ERC721.transferFrom", "offset": [7885, 7899], "op": "PUSH2", "path": "0", "value": "0x1A0"}, "52": {"fn": "ERC721.transferFrom", "offset": [7885, 7899], "op": "MSTORE", "path": "0"}, "53": {"op": "PUSH1", "value": "0x24"}, "55": {"op": "CALLDATALOAD"}, "56": {"op": "DUP1"}, "57": {"op": "PUSH1", "value": "0xA0"}, "59": {"op": "SHR"}, "60": {"op": "PUSH2", "value": "0x955"}, "63": {"op": "JUMPI"}, "64": {"fn": "ERC721.transferFrom", "offset": [7901, 7913], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "67": {"fn": "ERC721.transferFrom", "offset": [7901, 7913], "op": "MSTORE", "path": "0"}, "68": {"fn": "ERC721.transferFrom", "offset": [8511, 8516], "op": "PUSH2", "path": "0", "statement": 0, "value": "0x1A0"}, "71": {"op": "MLOAD"}, "72": {"op": "PUSH2", "value": "0x10"}, "75": {"op": "MSTORE"}, "76": {"fn": "ERC721.transferFrom", "offset": [8518, 8521], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "79": {"op": "MLOAD"}, "80": {"op": "PUSH2", "value": "0x120"}, "83": {"op": "MSTORE"}, "84": {"fn": "ERC721.transferFrom", "offset": [8523, 8531], "op": "PUSH1", "path": "0", "value": "0x44"}, "86": {"op": "CALLDATALOAD"}, "87": {"op": "PUSH2", "value": "0x140"}, "90": {"op": "MSTORE"}, "91": {"fn": "ERC721.transferFrom", "offset": [8533, 8543], "op": "CALLER", "path": "0"}, "92": {"op": "PUSH2", "value": "0x160"}, "95": {"op": "MSTORE"}, "96": {"op": "PUSH2", "value": "0x067"}, "99": {"fn": "ERC721.transferFrom", "offset": [8492, 8544], "op": "PUSH2", "path": "0", "value": "0x8B3"}, "102": {"fn": "ERC721.transferFrom", "jump": "i", "offset": [8492, 8544], "op": "JUMP", "path": "0"}, "103": {"op": "JUMPDEST"}, "104": {"op": "STOP"}, "105": {"op": "JUMPDEST"}, "106": {"op": "PUSH4", "value": "0x42842EE"}, "111": {"op": "DUP2"}, "112": {"op": "XOR"}, "113": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "PUSH2", "path": "0", "value": "0x093"}, "116": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "JUMPI", "path": "0"}, "117": {"op": "PUSH1", "value": "0x64"}, "119": {"op": "CALLDATASIZE"}, "120": {"op": "LT"}, "121": {"op": "PUSH2", "value": "0x955"}, "124": {"op": "JUMPI"}, "125": {"op": "PUSH1", "value": "0x0"}, "127": {"op": "PUSH2", "value": "0x60"}, "130": {"op": "MSTORE"}, "131": {"op": "PUSH2", "value": "0x60"}, "134": {"op": "DUP1"}, "135": {"op": "MLOAD"}, "136": {"op": "DUP1"}, "137": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "PUSH2", "path": "0", "value": "0x1E0"}, "140": {"op": "MSTORE"}, "141": {"op": "POP"}, "142": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "POP", "path": "0"}, "143": {"op": "PUSH2", "value": "0x0CB"}, "146": {"op": "JUMP"}, "147": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "JUMPDEST", "path": "0"}, "148": {"op": "PUSH4", "value": "0xB88D4FDE"}, "153": {"op": "DUP2"}, "154": {"op": "XOR"}, "155": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "PUSH2", "path": "0", "value": "0x1F0"}, "158": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "JUMPI", "path": "0"}, "159": {"op": "PUSH1", "value": "0xA4"}, "161": {"op": "CALLDATASIZE"}, "162": {"op": "LT"}, "163": {"op": "PUSH2", "value": "0x955"}, "166": {"op": "JUMPI"}, "167": {"op": "PUSH1", "value": "0x64"}, "169": {"op": "CALLDATALOAD"}, "170": {"op": "PUSH1", "value": "0x4"}, "172": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "ADD", "path": "0"}, "173": {"op": "PUSH2", "value": "0x40"}, "176": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "DUP2", "path": "0"}, "177": {"op": "CALLDATALOAD"}, "178": {"op": "GT"}, "179": {"op": "PUSH2", "value": "0x955"}, "182": {"op": "JUMPI"}, "183": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "DUP1", "path": "0"}, "184": {"op": "CALLDATALOAD"}, "185": {"op": "DUP1"}, "186": {"op": "PUSH2", "value": "0x1E0"}, "189": {"op": "MSTORE"}, "190": {"op": "PUSH1", "value": "0x20"}, "192": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "DUP3", "path": "0"}, "193": {"op": "ADD"}, "194": {"op": "DUP2"}, "195": {"op": "DUP2"}, "196": {"op": "PUSH2", "value": "0x20"}, "199": {"op": "CALLDATACOPY"}, "200": {"op": "POP"}, "201": {"op": "POP"}, "202": {"fn": "ERC721.safeTransferFrom", "offset": [8669, 8687], "op": "POP", "path": "0"}, "203": {"op": "JUMPDEST"}, "204": {"op": "PUSH1", "value": "0x4"}, "206": {"op": "CALLDATALOAD"}, "207": {"op": "DUP1"}, "208": {"op": "PUSH1", "value": "0xA0"}, "210": {"op": "SHR"}, "211": {"op": "PUSH2", "value": "0x955"}, "214": {"op": "JUMPI"}, "215": {"fn": "ERC721.safeTransferFrom", "offset": [8596, 8610], "op": "PUSH2", "path": "0", "value": "0x1A0"}, "218": {"fn": "ERC721.safeTransferFrom", "offset": [8596, 8610], "op": "MSTORE", "path": "0"}, "219": {"op": "PUSH1", "value": "0x24"}, "221": {"op": "CALLDATALOAD"}, "222": {"op": "DUP1"}, "223": {"op": "PUSH1", "value": "0xA0"}, "225": {"op": "SHR"}, "226": {"op": "PUSH2", "value": "0x955"}, "229": {"op": "JUMPI"}, "230": {"fn": "ERC721.safeTransferFrom", "offset": [8620, 8632], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "233": {"fn": "ERC721.safeTransferFrom", "offset": [8620, 8632], "op": "MSTORE", "path": "0"}, "234": {"fn": "ERC721.safeTransferFrom", "offset": [9491, 9496], "op": "PUSH2", "path": "0", "statement": 1, "value": "0x1A0"}, "237": {"op": "MLOAD"}, "238": {"op": "PUSH2", "value": "0x10"}, "241": {"op": "MSTORE"}, "242": {"fn": "ERC721.safeTransferFrom", "offset": [9498, 9501], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "245": {"op": "MLOAD"}, "246": {"op": "PUSH2", "value": "0x120"}, "249": {"op": "MSTORE"}, "250": {"fn": "ERC721.safeTransferFrom", "offset": [9674, 9682], "op": "PUSH1", "path": "0", "statement": 2, "value": "0x44"}, "252": {"op": "CALLDATALOAD"}, "253": {"op": "PUSH2", "value": "0x140"}, "256": {"op": "MSTORE"}, "257": {"fn": "ERC721.safeTransferFrom", "offset": [9513, 9523], "op": "CALLER", "path": "0"}, "258": {"op": "PUSH2", "value": "0x160"}, "261": {"op": "MSTORE"}, "262": {"op": "PUSH2", "value": "0x1D"}, "265": {"fn": "ERC721.safeTransferFrom", "offset": [9472, 9524], "op": "PUSH2", "path": "0", "value": "0x8B3"}, "268": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [9472, 9524], "op": "JUMP", "path": "0"}, "269": {"fn": "ERC721.safeTransferFrom", "offset": [9472, 9524], "op": "JUMPDEST", "path": "0"}, "270": {"fn": "ERC721.safeTransferFrom", "offset": [9532, 9535], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "273": {"op": "MLOAD"}, "274": {"fn": "ERC721.safeTransferFrom", "offset": [9532, 9547], "op": "EXTCODESIZE", "path": "0"}, "275": {"fn": "ERC721.safeTransferFrom", "offset": [9532, 9547], "op": "ISZERO", "path": "0"}, "276": {"op": "PUSH2", "value": "0x1EE"}, "279": {"branch": 3, "fn": "ERC721.safeTransferFrom", "offset": [9529, 9900], "op": "JUMPI", "path": "0"}, "280": {"fn": "ERC721.safeTransferFrom", "offset": [9618, 9637], "op": "PUSH2", "path": "0", "value": "0x1C0"}, "283": {"fn": "ERC721.safeTransferFrom", "offset": [9618, 9690], "op": "MLOAD", "path": "0"}, "284": {"op": "PUSH4", "value": "0x15B7A2"}, "289": {"op": "PUSH2", "value": "0x640"}, "292": {"op": "MSTORE"}, "293": {"op": "PUSH1", "value": "0x80"}, "295": {"fn": "ERC721.safeTransferFrom", "offset": [9655, 9665], "op": "CALLER", "path": "0"}, "296": {"op": "PUSH2", "value": "0x660"}, "299": {"op": "MSTORE"}, "300": {"fn": "ERC721.safeTransferFrom", "offset": [9667, 9672], "op": "PUSH2", "path": "0", "value": "0x1A0"}, "303": {"op": "MLOAD"}, "304": {"op": "PUSH2", "value": "0x680"}, "307": {"op": "MSTORE"}, "308": {"fn": "ERC721.safeTransferFrom", "offset": [9674, 9682], "op": "PUSH1", "path": "0", "value": "0x44"}, "310": {"op": "CALLDATALOAD"}, "311": {"op": "PUSH2", "value": "0x6A0"}, "314": {"op": "MSTORE"}, "315": {"op": "DUP1"}, "316": {"op": "PUSH2", "value": "0x6C0"}, "319": {"op": "MSTORE"}, "320": {"op": "DUP1"}, "321": {"op": "PUSH2", "value": "0x660"}, "324": {"op": "ADD"}, "325": {"fn": "ERC721.safeTransferFrom", "offset": [9684, 9689], "op": "PUSH2", "path": "0", "value": "0x1E0"}, "328": {"op": "MLOAD"}, "329": {"op": "DUP1"}, "330": {"op": "DUP3"}, "331": {"op": "MSTORE"}, "332": {"op": "PUSH1", "value": "0x20"}, "334": {"op": "DUP3"}, "335": {"op": "ADD"}, "336": {"op": "DUP2"}, "337": {"op": "DUP2"}, "338": {"op": "DUP4"}, "339": {"op": "PUSH2", "value": "0x20"}, "342": {"op": "PUSH1", "value": "0x4"}, "344": {"op": "GAS"}, "345": {"op": "STATICCALL"}, "346": {"op": "POP"}, "347": {"op": "POP"}, "348": {"op": "POP"}, "349": {"op": "DUP1"}, "350": {"op": "MLOAD"}, "351": {"op": "DUP1"}, "352": {"op": "PUSH1", "value": "0x20"}, "354": {"op": "DUP4"}, "355": {"op": "ADD"}, "356": {"op": "ADD"}, "357": {"op": "PUSH1", "value": "0x1F"}, "359": {"op": "DUP3"}, "360": {"op": "PUSH1", "value": "0x0"}, "362": {"op": "SUB"}, "363": {"op": "AND"}, "364": {"op": "CALLDATASIZE"}, "365": {"op": "DUP3"}, "366": {"op": "CALLDATACOPY"}, "367": {"op": "POP"}, "368": {"op": "POP"}, "369": {"op": "PUSH1", "value": "0x1F"}, "371": {"op": "NOT"}, "372": {"op": "PUSH1", "value": "0x1F"}, "374": {"op": "DUP3"}, "375": {"op": "MLOAD"}, "376": {"op": "PUSH1", "value": "0x20"}, "378": {"op": "ADD"}, "379": {"op": "ADD"}, "380": {"op": "AND"}, "381": {"op": "SWAP1"}, "382": {"op": "POP"}, "383": {"op": "DUP2"}, "384": {"op": "ADD"}, "385": {"op": "POP"}, "386": {"op": "POP"}, "387": {"op": "PUSH1", "value": "0x20"}, "389": {"op": "PUSH2", "value": "0x640"}, "392": {"op": "PUSH2", "value": "0x4A4"}, "395": {"op": "PUSH2", "value": "0x65C"}, "398": {"op": "PUSH1", "value": "0x0"}, "400": {"fn": "ERC721.safeTransferFrom", "offset": [9618, 9690], "op": "DUP6", "path": "0"}, "401": {"op": "GAS"}, "402": {"op": "CALL"}, "403": {"op": "PUSH2", "value": "0x1A1"}, "406": {"op": "JUMPI"}, "407": {"op": "RETURNDATASIZE"}, "408": {"op": "PUSH1", "value": "0x0"}, "410": {"op": "PUSH1", "value": "0x0"}, "412": {"op": "RETURNDATACOPY"}, "413": {"op": "RETURNDATASIZE"}, "414": {"op": "PUSH1", "value": "0x0"}, "416": {"op": "REVERT"}, "417": {"op": "JUMPDEST"}, "418": {"op": "PUSH1", "value": "0x20"}, "420": {"op": "RETURNDATASIZE"}, "421": {"op": "LT"}, "422": {"op": "PUSH2", "value": "0x955"}, "425": {"op": "JUMPI"}, "426": {"op": "PUSH2", "value": "0x640"}, "429": {"op": "MLOAD"}, "430": {"op": "DUP1"}, "431": {"op": "PUSH1", "value": "0x20"}, "433": {"op": "SHL"}, "434": {"op": "PUSH2", "value": "0x955"}, "437": {"op": "JUMPI"}, "438": {"op": "PUSH2", "value": "0xB0"}, "441": {"op": "MSTORE"}, "442": {"op": "PUSH2", "value": "0xB0"}, "445": {"fn": "ERC721.safeTransferFrom", "offset": [9618, 9690], "op": "SWAP1", "path": "0"}, "446": {"fn": "ERC721.safeTransferFrom", "offset": [9618, 9690], "op": "POP", "path": "0"}, "447": {"fn": "ERC721.safeTransferFrom", "offset": [9596, 9690], "op": "MLOAD", "path": "0"}, "448": {"fn": "ERC721.safeTransferFrom", "offset": [9596, 9690], "op": "PUSH2", "path": "0", "value": "0x620"}, "451": {"fn": "ERC721.safeTransferFrom", "offset": [9596, 9690], "op": "MSTORE", "path": "0"}, "452": {"fn": "ERC721.safeTransferFrom", "offset": [9820, 9900], "op": "PUSH32", "path": "0", "statement": 4, "value": "0x15B7A20000000000000000000000000000"}, "485": {"fn": "ERC721.safeTransferFrom", "offset": [9805, 9816], "op": "PUSH2", "path": "0", "value": "0x620"}, "488": {"fn": "ERC721.safeTransferFrom", "offset": [9805, 9900], "op": "MLOAD", "path": "0"}, "489": {"fn": "ERC721.safeTransferFrom", "offset": [9805, 9900], "op": "XOR", "path": "0"}, "490": {"fn": "ERC721.safeTransferFrom", "offset": [9798, 9900], "op": "PUSH2", "path": "0", "value": "0x955"}, "493": {"branch": 5, "fn": "ERC721.safeTransferFrom", "offset": [9798, 9900], "op": "JUMPI", "path": "0"}, "494": {"op": "JUMPDEST"}, "495": {"op": "STOP"}, "496": {"fn": "ERC721.safeTransferFrom", "offset": [8566, 9900], "op": "JUMPDEST", "path": "0"}, "497": {"op": "PUSH4", "value": "0x95EA7B3"}, "502": {"op": "DUP2"}, "503": {"op": "XOR"}, "504": {"op": "PUSH2", "value": "0x2CD"}, "507": {"op": "JUMPI"}, "508": {"op": "PUSH1", "value": "0x44"}, "510": {"op": "CALLDATASIZE"}, "511": {"op": "LT"}, "512": {"op": "PUSH2", "value": "0x955"}, "515": {"op": "JUMPI"}, "516": {"op": "PUSH1", "value": "0x4"}, "518": {"op": "CALLDATALOAD"}, "519": {"op": "DUP1"}, "520": {"op": "PUSH1", "value": "0xA0"}, "522": {"op": "SHR"}, "523": {"op": "PUSH2", "value": "0x955"}, "526": {"op": "JUMPI"}, "527": {"fn": "ERC721.approve", "offset": [9934, 9952], "op": "PUSH1", "path": "0", "value": "0x40"}, "529": {"fn": "ERC721.approve", "offset": [9934, 9952], "op": "MSTORE", "path": "0"}, "530": {"fn": "ERC721.approve", "offset": [10529, 10543], "op": "PUSH1", "path": "0", "statement": 6, "value": "0x0"}, "532": {"fn": "ERC721.approve", "offset": [11038, 11046], "op": "PUSH1", "path": "0", "statement": 7, "value": "0x24"}, "534": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "CALLDATALOAD", "path": "0"}, "535": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "PUSH1", "path": "0", "value": "0x20"}, "537": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "MSTORE", "path": "0"}, "538": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "PUSH1", "path": "0", "value": "0x0"}, "540": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "MSTORE", "path": "0"}, "541": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "PUSH1", "path": "0", "value": "0x40"}, "543": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "PUSH1", "path": "0", "value": "0x0"}, "545": {"fn": "ERC721.approve", "offset": [10529, 10553], "op": "SHA3", "path": "0"}, "546": {"fn": "ERC721.approve", "offset": [10512, 10553], "op": "SLOAD", "path": "0"}, "547": {"fn": "ERC721.approve", "offset": [10512, 10553], "op": "PUSH1", "path": "0", "value": "0x60"}, "549": {"fn": "ERC721.approve", "offset": [10512, 10553], "op": "MSTORE", "path": "0"}, "550": {"fn": "ERC721.approve", "offset": [10611, 10616], "op": "PUSH1", "path": "0", "statement": 8, "value": "0x60"}, "552": {"fn": "ERC721.approve", "offset": [10611, 10634], "op": "MLOAD", "path": "0"}, "553": {"fn": "ERC721.approve", "offset": [10611, 10634], "op": "ISZERO", "path": "0"}, "554": {"fn": "ERC721.approve", "offset": [10604, 10634], "op": "PUSH2", "path": "0", "value": "0x955"}, "557": {"branch": 9, "fn": "ERC721.approve", "offset": [10604, 10634], "op": "JUMPI", "path": "0"}, "558": {"fn": "ERC721.approve", "offset": [10708, 10713], "op": "PUSH1", "path": "0", "statement": 10, "value": "0x60"}, "560": {"op": "MLOAD"}, "561": {"fn": "ERC721.approve", "offset": [10695, 10704], "op": "PUSH1", "path": "0", "value": "0x40"}, "563": {"op": "MLOAD"}, "564": {"op": "EQ"}, "565": {"fn": "ERC721.approve", "offset": [10688, 10713], "op": "PUSH2", "path": "0", "value": "0x955"}, "568": {"branch": 11, "fn": "ERC721.approve", "offset": [10688, 10713], "op": "JUMPI", "path": "0"}, "569": {"fn": "ERC721.approve", "offset": [10793, 10803], "op": "CALLER", "path": "0", "statement": 12}, "570": {"fn": "ERC721.approve", "offset": [10765, 10779], "op": "PUSH1", "path": "0", "value": "0x0"}, "572": {"fn": "ERC721.approve", "offset": [11038, 11046], "op": "PUSH1", "path": "0", "value": "0x24"}, "574": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "CALLDATALOAD", "path": "0"}, "575": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "PUSH1", "path": "0", "value": "0x20"}, "577": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "MSTORE", "path": "0"}, "578": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "PUSH1", "path": "0", "value": "0x0"}, "580": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "MSTORE", "path": "0"}, "581": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "PUSH1", "path": "0", "value": "0x40"}, "583": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "PUSH1", "path": "0", "value": "0x0"}, "585": {"fn": "ERC721.approve", "offset": [10765, 10789], "op": "SHA3", "path": "0"}, "586": {"fn": "ERC721.approve", "offset": [10765, 10803], "op": "SLOAD", "path": "0"}, "587": {"fn": "ERC721.approve", "offset": [10765, 10803], "op": "EQ", "path": "0"}, "588": {"fn": "ERC721.approve", "offset": [10743, 10803], "op": "PUSH1", "path": "0", "value": "0x80"}, "590": {"fn": "ERC721.approve", "offset": [10743, 10803], "op": "MSTORE", "path": "0"}, "591": {"fn": "ERC721.approve", "offset": [10840, 10861], "op": "PUSH1", "path": "0", "statement": 13, "value": "0x3"}, "593": {"fn": "ERC721.approve", "offset": [10862, 10867], "op": "PUSH1", "path": "0", "value": "0x60"}, "595": {"op": "MLOAD"}, "596": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "PUSH1", "path": "0", "value": "0x20"}, "598": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "MSTORE", "path": "0"}, "599": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "PUSH1", "path": "0", "value": "0x0"}, "601": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "MSTORE", "path": "0"}, "602": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "PUSH1", "path": "0", "value": "0x40"}, "604": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "PUSH1", "path": "0", "value": "0x0"}, "606": {"fn": "ERC721.approve", "offset": [10840, 10868], "op": "SHA3", "path": "0"}, "607": {"op": "DUP1"}, "608": {"fn": "ERC721.approve", "offset": [10870, 10880], "op": "CALLER", "path": "0"}, "609": {"op": "PUSH1", "value": "0x20"}, "611": {"op": "MSTORE"}, "612": {"op": "PUSH1", "value": "0x0"}, "614": {"op": "MSTORE"}, "615": {"op": "PUSH1", "value": "0x40"}, "617": {"op": "PUSH1", "value": "0x0"}, "619": {"op": "SHA3"}, "620": {"fn": "ERC721.approve", "offset": [10839, 10881], "op": "SWAP1", "path": "0"}, "621": {"fn": "ERC721.approve", "offset": [10839, 10881], "op": "POP", "path": "0"}, "622": {"op": "SLOAD"}, "623": {"op": "PUSH1", "value": "0xA0"}, "625": {"fn": "ERC721.approve", "offset": [10808, 10881], "op": "MSTORE", "path": "0"}, "626": {"fn": "ERC721.approve", "offset": [10894, 10907], "op": "PUSH1", "path": "0", "statement": 14, "value": "0x80"}, "628": {"op": "MLOAD"}, "629": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "PUSH2", "path": "0", "value": "0x280"}, "632": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "JUMPI", "path": "0"}, "633": {"fn": "ERC721.approve", "offset": [10911, 10933], "op": "PUSH1", "path": "0", "value": "0xA0"}, "635": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "MLOAD", "path": "0"}, "636": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "PUSH2", "path": "0", "value": "0x283"}, "639": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "JUMP", "path": "0"}, "640": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "JUMPDEST", "path": "0"}, "641": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "PUSH1", "path": "0", "value": "0x1"}, "643": {"fn": "ERC721.approve", "offset": [10894, 10933], "op": "JUMPDEST", "path": "0"}, "644": {"fn": "ERC721.approve", "offset": [10886, 10934], "op": "ISZERO", "path": "0"}, "645": {"fn": "ERC721.approve", "offset": [10886, 10934], "op": "PUSH2", "path": "0", "value": "0x955"}, "648": {"branch": 15, "fn": "ERC721.approve", "offset": [10886, 10934], "op": "JUMPI", "path": "0"}, "649": {"fn": "ERC721.approve", "offset": [10993, 11002], "op": "PUSH1", "path": "0", "statement": 16, "value": "0x40"}, "651": {"op": "MLOAD"}, "652": {"fn": "ERC721.approve", "offset": [10962, 10980], "op": "PUSH1", "path": "0", "value": "0x1"}, "654": {"fn": "ERC721.approve", "offset": [11038, 11046], "op": "PUSH1", "path": "0", "value": "0x24"}, "656": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "CALLDATALOAD", "path": "0"}, "657": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "PUSH1", "path": "0", "value": "0x20"}, "659": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "MSTORE", "path": "0"}, "660": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "PUSH1", "path": "0", "value": "0x0"}, "662": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "MSTORE", "path": "0"}, "663": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "PUSH1", "path": "0", "value": "0x40"}, "665": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "PUSH1", "path": "0", "value": "0x0"}, "667": {"fn": "ERC721.approve", "offset": [10962, 10990], "op": "SHA3", "path": "0"}, "668": {"fn": "ERC721.approve", "offset": [10962, 11002], "op": "SSTORE", "path": "0"}, "669": {"fn": "ERC721.approve", "offset": [11038, 11046], "op": "PUSH1", "path": "0", "value": "0x24"}, "671": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "CALLDATALOAD", "path": "0"}, "672": {"fn": "ERC721.approve", "offset": [11027, 11036], "op": "PUSH1", "path": "0", "value": "0x40"}, "674": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "MLOAD", "path": "0"}, "675": {"fn": "ERC721.approve", "offset": [11020, 11025], "op": "PUSH1", "path": "0", "value": "0x60"}, "677": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "MLOAD", "path": "0"}, "678": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "PUSH32", "path": "0", "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"}, "711": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "PUSH1", "path": "0", "value": "0x0"}, "713": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "PUSH1", "path": "0", "value": "0xC0"}, "715": {"fn": "ERC721.approve", "offset": [11007, 11047], "op": "LOG4", "path": "0"}, "716": {"op": "STOP"}, "717": {"op": "JUMPDEST"}, "718": {"op": "CALLVALUE"}, "719": {"op": "PUSH2", "value": "0x955"}, "722": {"op": "JUMPI"}, "723": {"op": "PUSH4", "value": "0x1FFC9A7"}, "728": {"op": "DUP2"}, "729": {"op": "XOR"}, "730": {"op": "PUSH2", "value": "0x354"}, "733": {"op": "JUMPI"}, "734": {"op": "PUSH1", "value": "0x24"}, "736": {"op": "CALLDATASIZE"}, "737": {"op": "LT"}, "738": {"op": "PUSH2", "value": "0x955"}, "741": {"op": "JUMPI"}, "742": {"op": "PUSH1", "value": "0x4"}, "744": {"op": "CALLDATALOAD"}, "745": {"op": "DUP1"}, "746": {"op": "PUSH1", "value": "0x20"}, "748": {"op": "SHL"}, "749": {"op": "PUSH2", "value": "0x955"}, "752": {"op": "JUMPI"}, "753": {"fn": "ERC721.supportsInterface", "offset": [3151, 3171], "op": "PUSH1", "path": "0", "value": "0x40"}, "755": {"fn": "ERC721.supportsInterface", "offset": [3151, 3171], "op": "MSTORE", "path": "0"}, "756": {"fn": "ERC721.supportsInterface", "offset": [3312, 3324], "op": "PUSH1", "path": "0", "statement": 17, "value": "0x40"}, "758": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "MLOAD", "path": "0"}, "759": {"fn": "ERC721.supportsInterface", "offset": [3328, 3348], "op": "PUSH32", "path": "0", "value": "0x1FFC9A70000000000000000000000000000"}, "792": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "DUP2", "path": "0"}, "793": {"op": "XOR"}, "794": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "PUSH2", "path": "0", "value": "0x324"}, "797": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "JUMPI", "path": "0"}, "798": {"op": "PUSH1", "value": "0x1"}, "800": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "PUSH2", "path": "0", "value": "0x349"}, "803": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "JUMP", "path": "0"}, "804": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "JUMPDEST", "path": "0"}, "805": {"fn": "ERC721.supportsInterface", "offset": [3328, 3348], "op": "PUSH32", "path": "0", "value": "0x80AC58CD0000000000000000000000000000"}, "838": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "DUP2", "path": "0"}, "839": {"op": "XOR"}, "840": {"op": "ISZERO"}, "841": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "JUMPDEST", "path": "0"}, "842": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "SWAP1", "path": "0"}, "843": {"fn": "ERC721.supportsInterface", "offset": [3312, 3348], "op": "POP", "path": "0"}, "844": {"op": "PUSH1", "value": "0x80"}, "846": {"op": "MSTORE"}, "847": {"op": "PUSH1", "value": "0x20"}, "849": {"op": "PUSH1", "value": "0x80"}, "851": {"op": "RETURN"}, "852": {"op": "JUMPDEST"}, "853": {"op": "PUSH4", "value": "0x70A08231"}, "858": {"op": "DUP2"}, "859": {"op": "XOR"}, "860": {"op": "PUSH2", "value": "0x397"}, "863": {"op": "JUMPI"}, "864": {"op": "PUSH1", "value": "0x24"}, "866": {"op": "CALLDATASIZE"}, "867": {"op": "LT"}, "868": {"op": "PUSH2", "value": "0x955"}, "871": {"op": "JUMPI"}, "872": {"op": "PUSH1", "value": "0x4"}, "874": {"op": "CALLDATALOAD"}, "875": {"op": "DUP1"}, "876": {"op": "PUSH1", "value": "0xA0"}, "878": {"op": "SHR"}, "879": {"op": "PUSH2", "value": "0x955"}, "882": {"op": "JUMPI"}, "883": {"fn": "ERC721.balanceOf", "offset": [3405, 3420], "op": "PUSH1", "path": "0", "value": "0x40"}, "885": {"fn": "ERC721.balanceOf", "offset": [3405, 3420], "op": "MSTORE", "path": "0"}, "886": {"fn": "ERC721.balanceOf", "offset": [3680, 3686], "op": "PUSH1", "path": "0", "statement": 18, "value": "0x40"}, "888": {"fn": "ERC721.balanceOf", "offset": [3680, 3704], "op": "MLOAD", "path": "0"}, "889": {"fn": "ERC721.balanceOf", "offset": [3680, 3704], "op": "ISZERO", "path": "0"}, "890": {"fn": "ERC721.balanceOf", "offset": [3673, 3704], "op": "PUSH2", "path": "0", "value": "0x955"}, "893": {"branch": 19, "fn": "ERC721.balanceOf", "offset": [3673, 3704], "op": "JUMPI", "path": "0"}, "894": {"fn": "ERC721.balanceOf", "offset": [3716, 3740], "op": "PUSH1", "path": "0", "statement": 20, "value": "0x2"}, "896": {"fn": "ERC721.balanceOf", "offset": [3741, 3747], "op": "PUSH1", "path": "0", "value": "0x40"}, "898": {"op": "MLOAD"}, "899": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "PUSH1", "path": "0", "value": "0x20"}, "901": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "MSTORE", "path": "0"}, "902": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "PUSH1", "path": "0", "value": "0x0"}, "904": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "MSTORE", "path": "0"}, "905": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "PUSH1", "path": "0", "value": "0x40"}, "907": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "PUSH1", "path": "0", "value": "0x0"}, "909": {"fn": "ERC721.balanceOf", "offset": [3716, 3748], "op": "SHA3", "path": "0"}, "910": {"op": "SLOAD"}, "911": {"op": "PUSH1", "value": "0x60"}, "913": {"op": "MSTORE"}, "914": {"op": "PUSH1", "value": "0x20"}, "916": {"op": "PUSH1", "value": "0x60"}, "918": {"op": "RETURN"}, "919": {"op": "JUMPDEST"}, "920": {"op": "PUSH4", "value": "0x6352211E"}, "925": {"op": "DUP2"}, "926": {"op": "XOR"}, "927": {"op": "PUSH2", "value": "0x3CC"}, "930": {"op": "JUMPI"}, "931": {"op": "PUSH1", "value": "0x24"}, "933": {"op": "CALLDATASIZE"}, "934": {"op": "LT"}, "935": {"op": "PUSH2", "value": "0x955"}, "938": {"op": "JUMPI"}, "939": {"fn": "ERC721.ownerOf", "offset": [3998, 4012], "op": "PUSH1", "path": "0", "statement": 21, "value": "0x0"}, "941": {"fn": "ERC721.ownerOf", "offset": [4013, 4021], "op": "PUSH1", "path": "0", "value": "0x4"}, "943": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "CALLDATALOAD", "path": "0"}, "944": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "PUSH1", "path": "0", "value": "0x20"}, "946": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "MSTORE", "path": "0"}, "947": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "PUSH1", "path": "0", "value": "0x0"}, "949": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "MSTORE", "path": "0"}, "950": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "PUSH1", "path": "0", "value": "0x40"}, "952": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "PUSH1", "path": "0", "value": "0x0"}, "954": {"fn": "ERC721.ownerOf", "offset": [3998, 4022], "op": "SHA3", "path": "0"}, "955": {"fn": "ERC721.ownerOf", "offset": [3981, 4022], "op": "SLOAD", "path": "0"}, "956": {"fn": "ERC721.ownerOf", "offset": [3981, 4022], "op": "PUSH1", "path": "0", "value": "0x40"}, "958": {"fn": "ERC721.ownerOf", "offset": [3981, 4022], "op": "MSTORE", "path": "0"}, "959": {"fn": "ERC721.ownerOf", "offset": [4080, 4085], "op": "PUSH1", "path": "0", "statement": 22, "value": "0x40"}, "961": {"fn": "ERC721.ownerOf", "offset": [4080, 4103], "op": "MLOAD", "path": "0"}, "962": {"fn": "ERC721.ownerOf", "offset": [4080, 4103], "op": "ISZERO", "path": "0"}, "963": {"fn": "ERC721.ownerOf", "offset": [4073, 4103], "op": "PUSH2", "path": "0", "value": "0x955"}, "966": {"branch": 23, "fn": "ERC721.ownerOf", "offset": [4073, 4103], "op": "JUMPI", "path": "0"}, "967": {"op": "PUSH1", "value": "0x20"}, "969": {"fn": "ERC721.ownerOf", "offset": [4115, 4120], "op": "PUSH1", "path": "0", "statement": 24, "value": "0x40"}, "971": {"op": "RETURN"}, "972": {"op": "JUMPDEST"}, "973": {"op": "PUSH4", "value": "0x81812FC"}, "978": {"op": "DUP2"}, "979": {"op": "XOR"}, "980": {"op": "PUSH2", "value": "0x4F"}, "983": {"op": "JUMPI"}, "984": {"op": "PUSH1", "value": "0x24"}, "986": {"op": "CALLDATASIZE"}, "987": {"op": "LT"}, "988": {"op": "PUSH2", "value": "0x955"}, "991": {"op": "JUMPI"}, "992": {"fn": "ERC721.getApproved", "offset": [4421, 4435], "op": "PUSH1", "path": "0", "statement": 25, "value": "0x0"}, "994": {"fn": "ERC721.getApproved", "offset": [4494, 4502], "op": "PUSH1", "path": "0", "statement": 26, "value": "0x4"}, "996": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "CALLDATALOAD", "path": "0"}, "997": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "PUSH1", "path": "0", "value": "0x20"}, "999": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "MSTORE", "path": "0"}, "1000": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "PUSH1", "path": "0", "value": "0x0"}, "1002": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "MSTORE", "path": "0"}, "1003": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "PUSH1", "path": "0", "value": "0x40"}, "1005": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "PUSH1", "path": "0", "value": "0x0"}, "1007": {"fn": "ERC721.getApproved", "offset": [4421, 4445], "op": "SHA3", "path": "0"}, "1008": {"fn": "ERC721.getApproved", "offset": [4421, 4463], "op": "SLOAD", "path": "0"}, "1009": {"fn": "ERC721.getApproved", "offset": [4421, 4463], "op": "ISZERO", "path": "0"}, "1010": {"fn": "ERC721.getApproved", "offset": [4414, 4463], "op": "PUSH2", "path": "0", "value": "0x955"}, "1013": {"branch": 27, "fn": "ERC721.getApproved", "offset": [4414, 4463], "op": "JUMPI", "path": "0"}, "1014": {"fn": "ERC721.getApproved", "offset": [4475, 4493], "op": "PUSH1", "path": "0", "value": "0x1"}, "1016": {"fn": "ERC721.getApproved", "offset": [4494, 4502], "op": "PUSH1", "path": "0", "value": "0x4"}, "1018": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "CALLDATALOAD", "path": "0"}, "1019": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "PUSH1", "path": "0", "value": "0x20"}, "1021": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "MSTORE", "path": "0"}, "1022": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "PUSH1", "path": "0", "value": "0x0"}, "1024": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "MSTORE", "path": "0"}, "1025": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "PUSH1", "path": "0", "value": "0x40"}, "1027": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "PUSH1", "path": "0", "value": "0x0"}, "1029": {"fn": "ERC721.getApproved", "offset": [4475, 4503], "op": "SHA3", "path": "0"}, "1030": {"op": "SLOAD"}, "1031": {"op": "PUSH1", "value": "0x40"}, "1033": {"op": "MSTORE"}, "1034": {"op": "PUSH1", "value": "0x20"}, "1036": {"op": "PUSH1", "value": "0x40"}, "1038": {"op": "RETURN"}, "1039": {"op": "JUMPDEST"}, "1040": {"op": "PUSH4", "value": "0xE985E9C5"}, "1045": {"op": "DUP2"}, "1046": {"op": "XOR"}, "1047": {"op": "PUSH2", "value": "0x469"}, "1050": {"op": "JUMPI"}, "1051": {"op": "PUSH1", "value": "0x44"}, "1053": {"op": "CALLDATASIZE"}, "1054": {"op": "LT"}, "1055": {"op": "PUSH2", "value": "0x955"}, "1058": {"op": "JUMPI"}, "1059": {"op": "PUSH1", "value": "0x4"}, "1061": {"op": "CALLDATALOAD"}, "1062": {"op": "DUP1"}, "1063": {"op": "PUSH1", "value": "0xA0"}, "1065": {"op": "SHR"}, "1066": {"op": "PUSH2", "value": "0x955"}, "1069": {"op": "JUMPI"}, "1070": {"fn": "ERC721.isApprovedForAll", "offset": [4543, 4558], "op": "PUSH1", "path": "0", "value": "0x40"}, "1072": {"fn": "ERC721.isApprovedForAll", "offset": [4543, 4558], "op": "MSTORE", "path": "0"}, "1073": {"op": "PUSH1", "value": "0x24"}, "1075": {"op": "CALLDATALOAD"}, "1076": {"op": "DUP1"}, "1077": {"op": "PUSH1", "value": "0xA0"}, "1079": {"op": "SHR"}, "1080": {"op": "PUSH2", "value": "0x955"}, "1083": {"op": "JUMPI"}, "1084": {"fn": "ERC721.isApprovedForAll", "offset": [4560, 4578], "op": "PUSH1", "path": "0", "value": "0x60"}, "1086": {"fn": "ERC721.isApprovedForAll", "offset": [4560, 4578], "op": "MSTORE", "path": "0"}, "1087": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4824], "op": "PUSH1", "path": "0", "statement": 28, "value": "0x3"}, "1089": {"fn": "ERC721.isApprovedForAll", "offset": [4825, 4831], "op": "PUSH1", "path": "0", "value": "0x40"}, "1091": {"op": "MLOAD"}, "1092": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "PUSH1", "path": "0", "value": "0x20"}, "1094": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "MSTORE", "path": "0"}, "1095": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "PUSH1", "path": "0", "value": "0x0"}, "1097": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "MSTORE", "path": "0"}, "1098": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "PUSH1", "path": "0", "value": "0x40"}, "1100": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "PUSH1", "path": "0", "value": "0x0"}, "1102": {"fn": "ERC721.isApprovedForAll", "offset": [4803, 4832], "op": "SHA3", "path": "0"}, "1103": {"op": "DUP1"}, "1104": {"fn": "ERC721.isApprovedForAll", "offset": [4834, 4843], "op": "PUSH1", "path": "0", "value": "0x60"}, "1106": {"op": "MLOAD"}, "1107": {"op": "PUSH1", "value": "0x20"}, "1109": {"op": "MSTORE"}, "1110": {"op": "PUSH1", "value": "0x0"}, "1112": {"op": "MSTORE"}, "1113": {"op": "PUSH1", "value": "0x40"}, "1115": {"op": "PUSH1", "value": "0x0"}, "1117": {"op": "SHA3"}, "1118": {"fn": "ERC721.isApprovedForAll", "offset": [4802, 4844], "op": "SWAP1", "path": "0"}, "1119": {"fn": "ERC721.isApprovedForAll", "offset": [4802, 4844], "op": "POP", "path": "0"}, "1120": {"op": "SLOAD"}, "1121": {"op": "PUSH1", "value": "0x80"}, "1123": {"op": "MSTORE"}, "1124": {"op": "PUSH1", "value": "0x20"}, "1126": {"op": "PUSH1", "value": "0x80"}, "1128": {"op": "RETURN"}, "1129": {"op": "JUMPDEST"}, "1130": {"op": "PUSH4", "value": "0xA22CB465"}, "1135": {"op": "DUP2"}, "1136": {"op": "XOR"}, "1137": {"op": "PUSH2", "value": "0x4F6"}, "1140": {"op": "JUMPI"}, "1141": {"op": "PUSH1", "value": "0x44"}, "1143": {"op": "CALLDATASIZE"}, "1144": {"op": "LT"}, "1145": {"op": "PUSH2", "value": "0x955"}, "1148": {"op": "JUMPI"}, "1149": {"op": "PUSH1", "value": "0x4"}, "1151": {"op": "CALLDATALOAD"}, "1152": {"op": "DUP1"}, "1153": {"op": "PUSH1", "value": "0xA0"}, "1155": {"op": "SHR"}, "1156": {"op": "PUSH2", "value": "0x955"}, "1159": {"op": "JUMPI"}, "1160": {"fn": "ERC721.setApprovalForAll", "offset": [11082, 11100], "op": "PUSH1", "path": "0", "value": "0x40"}, "1162": {"fn": "ERC721.setApprovalForAll", "offset": [11082, 11100], "op": "MSTORE", "path": "0"}, "1163": {"op": "PUSH1", "value": "0x24"}, "1165": {"op": "CALLDATALOAD"}, "1166": {"op": "DUP1"}, "1167": {"op": "PUSH1", "value": "0x1"}, "1169": {"op": "SHR"}, "1170": {"op": "PUSH2", "value": "0x955"}, "1173": {"op": "JUMPI"}, "1174": {"fn": "ERC721.setApprovalForAll", "offset": [11102, 11117], "op": "PUSH1", "path": "0", "value": "0x60"}, "1176": {"fn": "ERC721.setApprovalForAll", "offset": [11102, 11117], "op": "MSTORE", "path": "0"}, "1177": {"fn": "ERC721.setApprovalForAll", "offset": [11682, 11692], "op": "CALLER", "path": "0", "statement": 29}, "1178": {"fn": "ERC721.setApprovalForAll", "offset": [11669, 11678], "op": "PUSH1", "path": "0", "value": "0x40"}, "1180": {"op": "MLOAD"}, "1181": {"op": "EQ"}, "1182": {"fn": "ERC721.setApprovalForAll", "offset": [11662, 11692], "op": "PUSH2", "path": "0", "value": "0x955"}, "1185": {"branch": 30, "fn": "ERC721.setApprovalForAll", "offset": [11662, 11692], "op": "JUMPI", "path": "0"}, "1186": {"fn": "ERC721.setApprovalForAll", "offset": [11744, 11753], "op": "PUSH1", "path": "0", "statement": 31, "value": "0x60"}, "1188": {"op": "MLOAD"}, "1189": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11718], "op": "PUSH1", "path": "0", "value": "0x3"}, "1191": {"fn": "ERC721.setApprovalForAll", "offset": [11719, 11729], "op": "CALLER", "path": "0"}, "1192": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "PUSH1", "path": "0", "value": "0x20"}, "1194": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "MSTORE", "path": "0"}, "1195": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "PUSH1", "path": "0", "value": "0x0"}, "1197": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "MSTORE", "path": "0"}, "1198": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "PUSH1", "path": "0", "value": "0x40"}, "1200": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "PUSH1", "path": "0", "value": "0x0"}, "1202": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11730], "op": "SHA3", "path": "0"}, "1203": {"op": "DUP1"}, "1204": {"fn": "ERC721.setApprovalForAll", "offset": [11731, 11740], "op": "PUSH1", "path": "0", "value": "0x40"}, "1206": {"op": "MLOAD"}, "1207": {"op": "PUSH1", "value": "0x20"}, "1209": {"op": "MSTORE"}, "1210": {"op": "PUSH1", "value": "0x0"}, "1212": {"op": "MSTORE"}, "1213": {"op": "PUSH1", "value": "0x40"}, "1215": {"op": "PUSH1", "value": "0x0"}, "1217": {"op": "SHA3"}, "1218": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11741], "op": "SWAP1", "path": "0"}, "1219": {"fn": "ERC721.setApprovalForAll", "offset": [11697, 11741], "op": "POP", "path": "0"}, "1220": {"op": "SSTORE"}, "1221": {"fn": "ERC721.setApprovalForAll", "offset": [11789, 11798], "op": "PUSH1", "path": "0", "statement": 32, "value": "0x40"}, "1223": {"fn": "ERC721.setApprovalForAll", "offset": [11758, 11810], "op": "MLOAD", "path": "0"}, "1224": {"fn": "ERC721.setApprovalForAll", "offset": [11777, 11787], "op": "CALLER", "path": "0"}, "1225": {"fn": "ERC721.setApprovalForAll", "offset": [11758, 11810], "op": "PUSH32", "path": "0", "value": "0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31"}, "1258": {"fn": "ERC721.setApprovalForAll", "offset": [11800, 11809], "op": "PUSH1", "path": "0", "value": "0x60"}, "1260": {"op": "MLOAD"}, "1261": {"op": "PUSH1", "value": "0x80"}, "1263": {"op": "MSTORE"}, "1264": {"op": "PUSH1", "value": "0x20"}, "1266": {"fn": "ERC721.setApprovalForAll", "offset": [11758, 11810], "op": "PUSH1", "path": "0", "value": "0x80"}, "1268": {"fn": "ERC721.setApprovalForAll", "offset": [11758, 11810], "op": "LOG3", "path": "0"}, "1269": {"op": "STOP"}, "1270": {"op": "JUMPDEST"}, "1271": {"op": "PUSH4", "value": "0x40C1F19"}, "1276": {"op": "DUP2"}, "1277": {"op": "XOR"}, "1278": {"op": "PUSH2", "value": "0x575"}, "1281": {"op": "JUMPI"}, "1282": {"op": "PUSH1", "value": "0x44"}, "1284": {"op": "CALLDATASIZE"}, "1285": {"op": "LT"}, "1286": {"op": "PUSH2", "value": "0x955"}, "1289": {"op": "JUMPI"}, "1290": {"op": "PUSH1", "value": "0x4"}, "1292": {"op": "CALLDATALOAD"}, "1293": {"op": "DUP1"}, "1294": {"op": "PUSH1", "value": "0xA0"}, "1296": {"op": "SHR"}, "1297": {"op": "PUSH2", "value": "0x955"}, "1300": {"op": "JUMPI"}, "1301": {"fn": "ERC721.mint", "offset": [11863, 11875], "op": "PUSH1", "path": "0", "value": "0x80"}, "1303": {"fn": "ERC721.mint", "offset": [11863, 11875], "op": "MSTORE", "path": "0"}, "1304": {"fn": "ERC721.mint", "offset": [12346, 12357], "op": "PUSH1", "path": "0", "statement": 33, "value": "0x4"}, "1306": {"fn": "ERC721.mint", "offset": [12332, 12357], "op": "SLOAD", "path": "0"}, "1307": {"fn": "ERC721.mint", "offset": [12332, 12342], "op": "CALLER", "path": "0"}, "1308": {"fn": "ERC721.mint", "offset": [12332, 12357], "op": "XOR", "path": "0"}, "1309": {"fn": "ERC721.mint", "offset": [12325, 12357], "op": "PUSH2", "path": "0", "value": "0x955"}, "1312": {"branch": 34, "fn": "ERC721.mint", "offset": [12325, 12357], "op": "JUMPI", "path": "0"}, "1313": {"fn": "ERC721.mint", "offset": [12407, 12410], "op": "PUSH1", "path": "0", "statement": 35, "value": "0x80"}, "1315": {"fn": "ERC721.mint", "offset": [12407, 12428], "op": "MLOAD", "path": "0"}, "1316": {"fn": "ERC721.mint", "offset": [12407, 12428], "op": "ISZERO", "path": "0"}, "1317": {"fn": "ERC721.mint", "offset": [12400, 12428], "op": "PUSH2", "path": "0", "value": "0x955"}, "1320": {"branch": 36, "fn": "ERC721.mint", "offset": [12400, 12428], "op": "JUMPI", "path": "0"}, "1321": {"fn": "ERC721.mint", "offset": [12506, 12509], "op": "PUSH1", "path": "0", "statement": 37, "value": "0x80"}, "1323": {"op": "MLOAD"}, "1324": {"op": "PUSH1", "value": "0x40"}, "1326": {"op": "MSTORE"}, "1327": {"fn": "ERC721.mint", "offset": [12559, 12567], "op": "PUSH1", "path": "0", "statement": 38, "value": "0x24"}, "1329": {"op": "CALLDATALOAD"}, "1330": {"op": "PUSH1", "value": "0x60"}, "1332": {"op": "MSTORE"}, "1333": {"op": "PUSH2", "value": "0x53C"}, "1336": {"fn": "ERC721.mint", "offset": [12489, 12520], "op": "PUSH2", "path": "0", "value": "0x7D1"}, "1339": {"fn": "ERC721.mint", "jump": "i", "offset": [12489, 12520], "op": "JUMP", "path": "0"}, "1340": {"fn": "ERC721.mint", "offset": [12489, 12520], "op": "JUMPDEST", "path": "0"}, "1341": {"fn": "ERC721.mint", "offset": [12559, 12567], "op": "PUSH1", "path": "0", "value": "0x24"}, "1343": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "CALLDATALOAD", "path": "0"}, "1344": {"fn": "ERC721.mint", "offset": [12554, 12557], "op": "PUSH1", "path": "0", "value": "0x80"}, "1346": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "MLOAD", "path": "0"}, "1347": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "PUSH1", "path": "0", "value": "0x0"}, "1349": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "1382": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "PUSH1", "path": "0", "value": "0x0"}, "1384": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "PUSH1", "path": "0", "value": "0xA0"}, "1386": {"fn": "ERC721.mint", "offset": [12525, 12568], "op": "LOG4", "path": "0"}, "1387": {"fn": "ERC721.mint", "offset": [12580, 12584], "op": "PUSH1", "path": "0", "statement": 39, "value": "0x1"}, "1389": {"op": "PUSH1", "value": "0xA0"}, "1391": {"op": "MSTORE"}, "1392": {"op": "PUSH1", "value": "0x20"}, "1394": {"op": "PUSH1", "value": "0xA0"}, "1396": {"op": "RETURN"}, "1397": {"op": "JUMPDEST"}, "1398": {"op": "PUSH4", "value": "0x42966C68"}, "1403": {"op": "DUP2"}, "1404": {"op": "XOR"}, "1405": {"op": "PUSH2", "value": "0x620"}, "1408": {"op": "JUMPI"}, "1409": {"op": "PUSH1", "value": "0x24"}, "1411": {"op": "CALLDATASIZE"}, "1412": {"op": "LT"}, "1413": {"op": "PUSH2", "value": "0x955"}, "1416": {"op": "JUMPI"}, "1417": {"fn": "ERC721.burn", "offset": [12986, 12996], "op": "CALLER", "path": "0", "statement": 40}, "1418": {"op": "PUSH1", "value": "0x40"}, "1420": {"op": "MSTORE"}, "1421": {"fn": "ERC721.burn", "offset": [13259, 13267], "op": "PUSH1", "path": "0", "statement": 41, "value": "0x4"}, "1423": {"op": "CALLDATALOAD"}, "1424": {"op": "PUSH1", "value": "0x60"}, "1426": {"op": "MSTORE"}, "1427": {"op": "PUSH2", "value": "0x59D"}, "1430": {"fn": "ERC721.burn", "offset": [12962, 13007], "op": "PUSH2", "path": "0", "value": "0x10"}, "1433": {"fn": "ERC721.burn", "offset": [12962, 13007], "op": "PUSH2", "path": "0", "value": "0x750"}, "1436": {"fn": "ERC721.burn", "jump": "i", "offset": [12962, 13007], "op": "JUMP", "path": "0"}, "1437": {"fn": "ERC721.burn", "offset": [12962, 13007], "op": "JUMPDEST", "path": "0"}, "1438": {"fn": "ERC721.burn", "offset": [12962, 13007], "op": "PUSH2", "path": "0", "value": "0x10"}, "1441": {"fn": "ERC721.burn", "offset": [12955, 13007], "op": "MLOAD", "path": "0"}, "1442": {"fn": "ERC721.burn", "offset": [12955, 13007], "op": "ISZERO", "path": "0"}, "1443": {"fn": "ERC721.burn", "offset": [12955, 13007], "op": "PUSH2", "path": "0", "value": "0x955"}, "1446": {"branch": 42, "fn": "ERC721.burn", "offset": [12955, 13007], "op": "JUMPI", "path": "0"}, "1447": {"fn": "ERC721.burn", "offset": [13029, 13043], "op": "PUSH1", "path": "0", "statement": 43, "value": "0x0"}, "1449": {"fn": "ERC721.burn", "offset": [13259, 13267], "op": "PUSH1", "path": "0", "value": "0x4"}, "1451": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "CALLDATALOAD", "path": "0"}, "1452": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "PUSH1", "path": "0", "value": "0x20"}, "1454": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "MSTORE", "path": "0"}, "1455": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "PUSH1", "path": "0", "value": "0x0"}, "1457": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "MSTORE", "path": "0"}, "1458": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "PUSH1", "path": "0", "value": "0x40"}, "1460": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "PUSH1", "path": "0", "value": "0x0"}, "1462": {"fn": "ERC721.burn", "offset": [13029, 13053], "op": "SHA3", "path": "0"}, "1463": {"fn": "ERC721.burn", "offset": [13012, 13053], "op": "SLOAD", "path": "0"}, "1464": {"fn": "ERC721.burn", "offset": [13012, 13053], "op": "PUSH2", "path": "0", "value": "0x10"}, "1467": {"fn": "ERC721.burn", "offset": [13012, 13053], "op": "MSTORE", "path": "0"}, "1468": {"fn": "ERC721.burn", "offset": [13111, 13116], "op": "PUSH2", "path": "0", "statement": 44, "value": "0x10"}, "1471": {"fn": "ERC721.burn", "offset": [13111, 13134], "op": "MLOAD", "path": "0"}, "1472": {"fn": "ERC721.burn", "offset": [13111, 13134], "op": "ISZERO", "path": "0"}, "1473": {"fn": "ERC721.burn", "offset": [13104, 13134], "op": "PUSH2", "path": "0", "value": "0x955"}, "1476": {"branch": 45, "fn": "ERC721.burn", "offset": [13104, 13134], "op": "JUMPI", "path": "0"}, "1477": {"fn": "ERC721.burn", "offset": [13159, 13164], "op": "PUSH2", "path": "0", "statement": 46, "value": "0x10"}, "1480": {"op": "MLOAD"}, "1481": {"op": "PUSH1", "value": "0x40"}, "1483": {"op": "MSTORE"}, "1484": {"fn": "ERC721.burn", "offset": [13259, 13267], "op": "PUSH1", "path": "0", "value": "0x4"}, "1486": {"op": "CALLDATALOAD"}, "1487": {"op": "PUSH1", "value": "0x60"}, "1489": {"op": "MSTORE"}, "1490": {"op": "PUSH2", "value": "0x5D9"}, "1493": {"fn": "ERC721.burn", "offset": [13139, 13175], "op": "PUSH2", "path": "0", "value": "0x86E"}, "1496": {"fn": "ERC721.burn", "jump": "i", "offset": [13139, 13175], "op": "JUMP", "path": "0"}, "1497": {"fn": "ERC721.burn", "offset": [13139, 13175], "op": "JUMPDEST", "path": "0"}, "1498": {"fn": "ERC721.burn", "offset": [13202, 13207], "op": "PUSH2", "path": "0", "statement": 47, "value": "0x10"}, "1501": {"op": "MLOAD"}, "1502": {"op": "PUSH1", "value": "0x40"}, "1504": {"op": "MSTORE"}, "1505": {"fn": "ERC721.burn", "offset": [13259, 13267], "op": "PUSH1", "path": "0", "value": "0x4"}, "1507": {"op": "CALLDATALOAD"}, "1508": {"op": "PUSH1", "value": "0x60"}, "1510": {"op": "MSTORE"}, "1511": {"op": "PUSH2", "value": "0x5EE"}, "1514": {"fn": "ERC721.burn", "offset": [13180, 13218], "op": "PUSH2", "path": "0", "value": "0x81E"}, "1517": {"fn": "ERC721.burn", "jump": "i", "offset": [13180, 13218], "op": "JUMP", "path": "0"}, "1518": {"fn": "ERC721.burn", "offset": [13180, 13218], "op": "JUMPDEST", "path": "0"}, "1519": {"fn": "ERC721.burn", "offset": [13259, 13267], "op": "PUSH1", "path": "0", "value": "0x4"}, "1521": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "CALLDATALOAD", "path": "0"}, "1522": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "PUSH1", "path": "0", "value": "0x0"}, "1524": {"fn": "ERC721.burn", "offset": [13236, 13241], "op": "PUSH2", "path": "0", "value": "0x10"}, "1527": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "MLOAD", "path": "0"}, "1528": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "1561": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "PUSH1", "path": "0", "value": "0x0"}, "1563": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "PUSH2", "path": "0", "value": "0x120"}, "1566": {"fn": "ERC721.burn", "offset": [13223, 13268], "op": "LOG4", "path": "0"}, "1567": {"op": "STOP"}, "1568": {"op": "JUMPDEST"}, "1569": {"op": "PUSH4", "value": "0xC87B56DD"}, "1574": {"op": "DUP2"}, "1575": {"op": "XOR"}, "1576": {"op": "PUSH2", "value": "0x748"}, "1579": {"op": "JUMPI"}, "1580": {"op": "PUSH1", "value": "0x24"}, "1582": {"op": "CALLDATASIZE"}, "1583": {"op": "LT"}, "1584": {"op": "PUSH2", "value": "0x955"}, "1587": {"op": "JUMPI"}, "1588": {"op": "PUSH1", "value": "0x20"}, "1590": {"op": "DUP1"}, "1591": {"op": "PUSH2", "value": "0x180"}, "1594": {"op": "MSTORE"}, "1595": {"fn": "ERC721.tokenURI", "offset": [13345, 13384], "op": "PUSH1", "path": "0", "statement": 48, "value": "0x0"}, "1597": {"fn": "ERC721.tokenURI", "offset": [13352, 13364], "op": "PUSH1", "path": "0", "value": "0x5"}, "1599": {"op": "SLOAD"}, "1600": {"op": "DUP2"}, "1601": {"op": "PUSH1", "value": "0xE0"}, "1603": {"op": "ADD"}, "1604": {"op": "PUSH1", "value": "0x0"}, "1606": {"op": "DUP3"}, "1607": {"op": "PUSH1", "value": "0x1F"}, "1609": {"op": "ADD"}, "1610": {"op": "PUSH1", "value": "0x5"}, "1612": {"op": "SHR"}, "1613": {"op": "PUSH1", "value": "0x2"}, "1615": {"op": "DUP2"}, "1616": {"op": "GT"}, "1617": {"op": "PUSH2", "value": "0x955"}, "1620": {"op": "JUMPI"}, "1621": {"op": "DUP1"}, "1622": {"op": "ISZERO"}, "1623": {"op": "PUSH2", "value": "0x673"}, "1626": {"op": "JUMPI"}, "1627": {"op": "SWAP1"}, "1628": {"op": "JUMPDEST"}, "1629": {"op": "DUP1"}, "1630": {"op": "PUSH1", "value": "0x6"}, "1632": {"op": "ADD"}, "1633": {"op": "SLOAD"}, "1634": {"op": "DUP2"}, "1635": {"op": "PUSH1", "value": "0x5"}, "1637": {"op": "SHL"}, "1638": {"op": "DUP5"}, "1639": {"op": "ADD"}, "1640": {"op": "MSTORE"}, "1641": {"op": "PUSH1", "value": "0x1"}, "1643": {"op": "ADD"}, "1644": {"op": "DUP2"}, "1645": {"op": "DUP2"}, "1646": {"op": "XOR"}, "1647": {"op": "PUSH2", "value": "0x65C"}, "1650": {"op": "JUMPI"}, "1651": {"op": "JUMPDEST"}, "1652": {"op": "POP"}, "1653": {"op": "POP"}, "1654": {"op": "POP"}, "1655": {"op": "DUP1"}, "1656": {"op": "DUP3"}, "1657": {"op": "ADD"}, "1658": {"op": "SWAP2"}, "1659": {"op": "POP"}, "1660": {"op": "POP"}, "1661": {"fn": "ERC721.tokenURI", "offset": [13375, 13382], "op": "PUSH1", "path": "0", "value": "0x4"}, "1663": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "CALLDATALOAD", "path": "0"}, "1664": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "DUP1", "path": "0"}, "1665": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "PUSH2", "path": "0", "value": "0x695"}, "1668": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "JUMPI", "path": "0"}, "1669": {"op": "PUSH1", "value": "0x30"}, "1671": {"op": "PUSH1", "value": "0x41"}, "1673": {"op": "MSTORE"}, "1674": {"op": "PUSH1", "value": "0x1"}, "1676": {"op": "PUSH1", "value": "0x40"}, "1678": {"op": "MSTORE"}, "1679": {"op": "PUSH1", "value": "0x40"}, "1681": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "PUSH2", "path": "0", "value": "0x6D7"}, "1684": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "JUMP", "path": "0"}, "1685": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "JUMPDEST", "path": "0"}, "1686": {"op": "PUSH1", "value": "0x0"}, "1688": {"op": "PUSH1", "value": "0x4F"}, "1690": {"op": "SWAP1"}, "1691": {"op": "JUMPDEST"}, "1692": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "DUP3", "path": "0"}, "1693": {"op": "PUSH2", "value": "0x6B5"}, "1696": {"op": "JUMPI"}, "1697": {"op": "DUP1"}, "1698": {"op": "DUP2"}, "1699": {"op": "PUSH1", "value": "0x8E"}, "1701": {"op": "SUB"}, "1702": {"op": "MSTORE"}, "1703": {"op": "DUP1"}, "1704": {"op": "PUSH1", "value": "0x8E"}, "1706": {"op": "SUB"}, "1707": {"op": "SWAP3"}, "1708": {"op": "POP"}, "1709": {"op": "PUSH2", "value": "0x6D3"}, "1712": {"op": "JUMP"}, "1713": {"op": "PUSH2", "value": "0x6C8"}, "1716": {"op": "JUMP"}, "1717": {"op": "JUMPDEST"}, "1718": {"op": "PUSH1", "value": "0xA"}, "1720": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "DUP4", "path": "0"}, "1721": {"op": "MOD"}, "1722": {"op": "PUSH1", "value": "0x30"}, "1724": {"op": "ADD"}, "1725": {"op": "DUP2"}, "1726": {"op": "PUSH1", "value": "0x8E"}, "1728": {"op": "SUB"}, "1729": {"op": "MSTORE"}, "1730": {"op": "PUSH1", "value": "0xA"}, "1732": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "DUP4", "path": "0"}, "1733": {"op": "DIV"}, "1734": {"op": "SWAP3"}, "1735": {"op": "POP"}, "1736": {"op": "JUMPDEST"}, "1737": {"op": "PUSH1", "value": "0x1"}, "1739": {"op": "ADD"}, "1740": {"op": "DUP2"}, "1741": {"op": "DUP2"}, "1742": {"op": "XOR"}, "1743": {"op": "PUSH2", "value": "0x69B"}, "1746": {"op": "JUMPI"}, "1747": {"op": "JUMPDEST"}, "1748": {"op": "POP"}, "1749": {"op": "POP"}, "1750": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "DUP1", "path": "0"}, "1751": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "JUMPDEST", "path": "0"}, "1752": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "SWAP1", "path": "0"}, "1753": {"fn": "ERC721.tokenURI", "offset": [13366, 13383], "op": "POP", "path": "0"}, "1754": {"op": "DUP1"}, "1755": {"op": "MLOAD"}, "1756": {"op": "PUSH1", "value": "0x20"}, "1758": {"op": "DUP3"}, "1759": {"op": "ADD"}, "1760": {"op": "DUP4"}, "1761": {"op": "PUSH1", "value": "0xE0"}, "1763": {"op": "ADD"}, "1764": {"op": "DUP3"}, "1765": {"op": "DUP2"}, "1766": {"op": "DUP5"}, "1767": {"op": "DUP5"}, "1768": {"op": "PUSH1", "value": "0x4"}, "1770": {"op": "GAS"}, "1771": {"op": "STATICCALL"}, "1772": {"op": "POP"}, "1773": {"op": "POP"}, "1774": {"op": "POP"}, "1775": {"op": "DUP1"}, "1776": {"op": "DUP4"}, "1777": {"op": "ADD"}, "1778": {"op": "SWAP3"}, "1779": {"op": "POP"}, "1780": {"op": "POP"}, "1781": {"op": "POP"}, "1782": {"op": "DUP1"}, "1783": {"op": "PUSH1", "value": "0xC0"}, "1785": {"op": "MSTORE"}, "1786": {"op": "PUSH1", "value": "0xC0"}, "1788": {"fn": "ERC721.tokenURI", "offset": [13345, 13384], "op": "SWAP1", "path": "0"}, "1789": {"fn": "ERC721.tokenURI", "offset": [13345, 13384], "op": "POP", "path": "0"}, "1790": {"op": "DUP2"}, "1791": {"op": "PUSH2", "value": "0x180"}, "1794": {"op": "ADD"}, "1795": {"op": "DUP2"}, "1796": {"op": "MLOAD"}, "1797": {"op": "DUP1"}, "1798": {"op": "DUP3"}, "1799": {"op": "MSTORE"}, "1800": {"op": "PUSH1", "value": "0x20"}, "1802": {"op": "DUP4"}, "1803": {"op": "ADD"}, "1804": {"op": "PUSH1", "value": "0x20"}, "1806": {"op": "DUP4"}, "1807": {"op": "ADD"}, "1808": {"op": "DUP3"}, "1809": {"op": "DUP2"}, "1810": {"op": "DUP5"}, "1811": {"op": "DUP5"}, "1812": {"op": "PUSH1", "value": "0x4"}, "1814": {"op": "GAS"}, "1815": {"op": "STATICCALL"}, "1816": {"op": "POP"}, "1817": {"op": "POP"}, "1818": {"op": "POP"}, "1819": {"op": "POP"}, "1820": {"op": "DUP1"}, "1821": {"op": "MLOAD"}, "1822": {"op": "DUP1"}, "1823": {"op": "PUSH1", "value": "0x20"}, "1825": {"op": "DUP4"}, "1826": {"op": "ADD"}, "1827": {"op": "ADD"}, "1828": {"op": "PUSH1", "value": "0x1F"}, "1830": {"op": "DUP3"}, "1831": {"op": "PUSH1", "value": "0x0"}, "1833": {"op": "SUB"}, "1834": {"op": "AND"}, "1835": {"op": "CALLDATASIZE"}, "1836": {"op": "DUP3"}, "1837": {"op": "CALLDATACOPY"}, "1838": {"op": "POP"}, "1839": {"op": "POP"}, "1840": {"op": "PUSH1", "value": "0x1F"}, "1842": {"op": "NOT"}, "1843": {"op": "PUSH1", "value": "0x1F"}, "1845": {"op": "DUP3"}, "1846": {"op": "MLOAD"}, "1847": {"op": "PUSH1", "value": "0x20"}, "1849": {"op": "ADD"}, "1850": {"op": "ADD"}, "1851": {"op": "AND"}, "1852": {"op": "SWAP1"}, "1853": {"op": "POP"}, "1854": {"op": "SWAP1"}, "1855": {"op": "POP"}, "1856": {"op": "DUP2"}, "1857": {"op": "ADD"}, "1858": {"op": "SWAP1"}, "1859": {"op": "POP"}, "1860": {"op": "PUSH2", "value": "0x180"}, "1863": {"op": "RETURN"}, "1864": {"op": "JUMPDEST"}, "1865": {"op": "POP"}, "1866": {"op": "JUMPDEST"}, "1867": {"op": "PUSH1", "value": "0x0"}, "1869": {"op": "PUSH1", "value": "0x0"}, "1871": {"op": "REVERT"}, "1872": {"fn": "ERC721._isApprovedOrOwner", "offset": [4898, 5625], "op": "JUMPDEST", "path": "0"}, "1873": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5346], "op": "PUSH1", "path": "0", "statement": 49, "value": "0x0"}, "1875": {"fn": "ERC721._isApprovedOrOwner", "offset": [5347, 5355], "op": "PUSH1", "path": "0", "value": "0x60"}, "1877": {"op": "MLOAD"}, "1878": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "PUSH1", "path": "0", "value": "0x20"}, "1880": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "MSTORE", "path": "0"}, "1881": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "PUSH1", "path": "0", "value": "0x0"}, "1883": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "MSTORE", "path": "0"}, "1884": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "PUSH1", "path": "0", "value": "0x40"}, "1886": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "PUSH1", "path": "0", "value": "0x0"}, "1888": {"fn": "ERC721._isApprovedOrOwner", "offset": [5332, 5356], "op": "SHA3", "path": "0"}, "1889": {"op": "SLOAD"}, "1890": {"op": "PUSH1", "value": "0x80"}, "1892": {"fn": "ERC721._isApprovedOrOwner", "offset": [5315, 5356], "op": "MSTORE", "path": "0"}, "1893": {"fn": "ERC721._isApprovedOrOwner", "offset": [5393, 5401], "op": "PUSH1", "path": "0", "statement": 50, "value": "0x40"}, "1895": {"op": "MLOAD"}, "1896": {"fn": "ERC721._isApprovedOrOwner", "offset": [5384, 5389], "op": "PUSH1", "path": "0", "value": "0x80"}, "1898": {"op": "MLOAD"}, "1899": {"fn": "ERC721._isApprovedOrOwner", "offset": [5384, 5401], "op": "EQ", "path": "0"}, "1900": {"op": "PUSH1", "value": "0xA0"}, "1902": {"fn": "ERC721._isApprovedOrOwner", "offset": [5361, 5401], "op": "MSTORE", "path": "0"}, "1903": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5462], "op": "PUSH1", "path": "0", "statement": 51, "value": "0x1"}, "1905": {"fn": "ERC721._isApprovedOrOwner", "offset": [5463, 5471], "op": "PUSH1", "path": "0", "value": "0x60"}, "1907": {"op": "MLOAD"}, "1908": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "PUSH1", "path": "0", "value": "0x20"}, "1910": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "MSTORE", "path": "0"}, "1911": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "PUSH1", "path": "0", "value": "0x0"}, "1913": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "MSTORE", "path": "0"}, "1914": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "PUSH1", "path": "0", "value": "0x40"}, "1916": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "PUSH1", "path": "0", "value": "0x0"}, "1918": {"fn": "ERC721._isApprovedOrOwner", "offset": [5444, 5472], "op": "SHA3", "path": "0"}, "1919": {"op": "SLOAD"}, "1920": {"fn": "ERC721._isApprovedOrOwner", "offset": [5432, 5440], "op": "PUSH1", "path": "0", "value": "0x40"}, "1922": {"op": "MLOAD"}, "1923": {"fn": "ERC721._isApprovedOrOwner", "offset": [5432, 5472], "op": "EQ", "path": "0"}, "1924": {"op": "PUSH1", "value": "0xC0"}, "1926": {"fn": "ERC721._isApprovedOrOwner", "offset": [5406, 5472], "op": "MSTORE", "path": "0"}, "1927": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5531], "op": "PUSH1", "path": "0", "statement": 52, "value": "0x3"}, "1929": {"fn": "ERC721._isApprovedOrOwner", "offset": [5532, 5537], "op": "PUSH1", "path": "0", "value": "0x80"}, "1931": {"op": "MLOAD"}, "1932": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "PUSH1", "path": "0", "value": "0x20"}, "1934": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "MSTORE", "path": "0"}, "1935": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "PUSH1", "path": "0", "value": "0x0"}, "1937": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "MSTORE", "path": "0"}, "1938": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "PUSH1", "path": "0", "value": "0x40"}, "1940": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "PUSH1", "path": "0", "value": "0x0"}, "1942": {"fn": "ERC721._isApprovedOrOwner", "offset": [5510, 5538], "op": "SHA3", "path": "0"}, "1943": {"op": "DUP1"}, "1944": {"fn": "ERC721._isApprovedOrOwner", "offset": [5540, 5548], "op": "PUSH1", "path": "0", "value": "0x40"}, "1946": {"op": "MLOAD"}, "1947": {"op": "PUSH1", "value": "0x20"}, "1949": {"op": "MSTORE"}, "1950": {"op": "PUSH1", "value": "0x0"}, "1952": {"op": "MSTORE"}, "1953": {"op": "PUSH1", "value": "0x40"}, "1955": {"op": "PUSH1", "value": "0x0"}, "1957": {"op": "SHA3"}, "1958": {"fn": "ERC721._isApprovedOrOwner", "offset": [5509, 5549], "op": "SWAP1", "path": "0"}, "1959": {"fn": "ERC721._isApprovedOrOwner", "offset": [5509, 5549], "op": "POP", "path": "0"}, "1960": {"op": "SLOAD"}, "1961": {"op": "PUSH1", "value": "0xE0"}, "1963": {"fn": "ERC721._isApprovedOrOwner", "offset": [5477, 5549], "op": "MSTORE", "path": "0"}, "1964": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5576], "op": "PUSH1", "path": "0", "statement": 53, "value": "0xA0"}, "1966": {"op": "MLOAD"}, "1967": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "PUSH2", "path": "0", "value": "0x7BA"}, "1970": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "JUMPI", "path": "0"}, "1971": {"fn": "ERC721._isApprovedOrOwner", "offset": [5580, 5597], "op": "PUSH1", "path": "0", "value": "0xC0"}, "1973": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "MLOAD", "path": "0"}, "1974": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "PUSH2", "path": "0", "value": "0x7BD"}, "1977": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "JUMP", "path": "0"}, "1978": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "JUMPDEST", "path": "0"}, "1979": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "PUSH1", "path": "0", "value": "0x1"}, "1981": {"fn": "ERC721._isApprovedOrOwner", "offset": [5562, 5597], "op": "JUMPDEST", "path": "0"}, "1982": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "PUSH2", "path": "0", "value": "0x7C9"}, "1985": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "JUMPI", "path": "0"}, "1986": {"fn": "ERC721._isApprovedOrOwner", "offset": [5602, 5625], "op": "PUSH1", "path": "0", "value": "0xE0"}, "1988": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "MLOAD", "path": "0"}, "1989": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "PUSH2", "path": "0", "value": "0x7CC"}, "1992": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "JUMP", "path": "0"}, "1993": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "JUMPDEST", "path": "0"}, "1994": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "PUSH1", "path": "0", "value": "0x1"}, "1996": {"fn": "ERC721._isApprovedOrOwner", "offset": [5561, 5625], "op": "JUMPDEST", "path": "0"}, "1997": {"op": "DUP2"}, "1998": {"fn": "ERC721._isApprovedOrOwner", "offset": [5554, 5625], "op": "MSTORE", "path": "0"}, "1999": {"fn": "ERC721._isApprovedOrOwner", "offset": [5554, 5625], "op": "POP", "path": "0"}, "2000": {"op": "JUMP"}, "2001": {"fn": "ERC721._addTokenTo", "offset": [5638, 6018], "op": "JUMPDEST", "path": "0"}, "2002": {"fn": "ERC721._addTokenTo", "offset": [5851, 5865], "op": "PUSH1", "path": "0", "statement": 54, "value": "0x0"}, "2004": {"fn": "ERC721._addTokenTo", "offset": [5866, 5874], "op": "PUSH1", "path": "0", "value": "0x60"}, "2006": {"op": "MLOAD"}, "2007": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "PUSH1", "path": "0", "value": "0x20"}, "2009": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "MSTORE", "path": "0"}, "2010": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "PUSH1", "path": "0", "value": "0x0"}, "2012": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "MSTORE", "path": "0"}, "2013": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "PUSH1", "path": "0", "value": "0x40"}, "2015": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "PUSH1", "path": "0", "value": "0x0"}, "2017": {"fn": "ERC721._addTokenTo", "offset": [5851, 5875], "op": "SHA3", "path": "0"}, "2018": {"fn": "ERC721._addTokenTo", "offset": [5851, 5893], "op": "SLOAD", "path": "0"}, "2019": {"fn": "ERC721._addTokenTo", "offset": [5844, 5893], "op": "PUSH2", "path": "0", "value": "0x955"}, "2022": {"branch": 55, "fn": "ERC721._addTokenTo", "offset": [5844, 5893], "op": "JUMPI", "path": "0"}, "2023": {"fn": "ERC721._addTokenTo", "offset": [5948, 5951], "op": "PUSH1", "path": "0", "statement": 56, "value": "0x40"}, "2025": {"op": "MLOAD"}, "2026": {"fn": "ERC721._addTokenTo", "offset": [5921, 5935], "op": "PUSH1", "path": "0", "value": "0x0"}, "2028": {"fn": "ERC721._addTokenTo", "offset": [5936, 5944], "op": "PUSH1", "path": "0", "value": "0x60"}, "2030": {"op": "MLOAD"}, "2031": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "PUSH1", "path": "0", "value": "0x20"}, "2033": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "MSTORE", "path": "0"}, "2034": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "PUSH1", "path": "0", "value": "0x0"}, "2036": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "MSTORE", "path": "0"}, "2037": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "PUSH1", "path": "0", "value": "0x40"}, "2039": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "PUSH1", "path": "0", "value": "0x0"}, "2041": {"fn": "ERC721._addTokenTo", "offset": [5921, 5945], "op": "SHA3", "path": "0"}, "2042": {"op": "SSTORE"}, "2043": {"fn": "ERC721._addTokenTo", "offset": [5984, 6008], "op": "PUSH1", "path": "0", "statement": 57, "value": "0x2"}, "2045": {"fn": "ERC721._addTokenTo", "offset": [6009, 6012], "op": "PUSH1", "path": "0", "value": "0x40"}, "2047": {"op": "MLOAD"}, "2048": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "PUSH1", "path": "0", "value": "0x20"}, "2050": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "MSTORE", "path": "0"}, "2051": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "PUSH1", "path": "0", "value": "0x0"}, "2053": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "MSTORE", "path": "0"}, "2054": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "PUSH1", "path": "0", "value": "0x40"}, "2056": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "PUSH1", "path": "0", "value": "0x0"}, "2058": {"fn": "ERC721._addTokenTo", "offset": [5984, 6013], "op": "SHA3", "path": "0"}, "2059": {"op": "DUP1"}, "2060": {"op": "SLOAD"}, "2061": {"fn": "ERC721._addTokenTo", "offset": [6017, 6018], "op": "PUSH1", "path": "0", "value": "0x1"}, "2063": {"op": "DUP2"}, "2064": {"op": "ADD"}, "2065": {"op": "DUP2"}, "2066": {"op": "DUP2"}, "2067": {"op": "LT"}, "2068": {"op": "PUSH2", "value": "0x955"}, "2071": {"op": "JUMPI"}, "2072": {"fn": "ERC721._addTokenTo", "offset": [5984, 6018], "op": "SWAP1", "path": "0"}, "2073": {"fn": "ERC721._addTokenTo", "offset": [5984, 6018], "op": "POP", "path": "0"}, "2074": {"op": "DUP2"}, "2075": {"op": "SSTORE"}, "2076": {"fn": "ERC721._addTokenTo", "offset": [5984, 6018], "op": "POP", "path": "0"}, "2077": {"op": "JUMP"}, "2078": {"fn": "ERC721._removeTokenFrom", "offset": [6031, 6431], "op": "JUMPDEST", "path": "0"}, "2079": {"fn": "ERC721._removeTokenFrom", "offset": [6288, 6293], "op": "PUSH1", "path": "0", "statement": 58, "value": "0x40"}, "2081": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6293], "op": "MLOAD", "path": "0"}, "2082": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6274], "op": "PUSH1", "path": "0", "value": "0x0"}, "2084": {"fn": "ERC721._removeTokenFrom", "offset": [6275, 6283], "op": "PUSH1", "path": "0", "value": "0x60"}, "2086": {"op": "MLOAD"}, "2087": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "PUSH1", "path": "0", "value": "0x20"}, "2089": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "MSTORE", "path": "0"}, "2090": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "PUSH1", "path": "0", "value": "0x0"}, "2092": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "MSTORE", "path": "0"}, "2093": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "PUSH1", "path": "0", "value": "0x40"}, "2095": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "PUSH1", "path": "0", "value": "0x0"}, "2097": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6284], "op": "SHA3", "path": "0"}, "2098": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6293], "op": "SLOAD", "path": "0"}, "2099": {"fn": "ERC721._removeTokenFrom", "offset": [6260, 6293], "op": "XOR", "path": "0"}, "2100": {"fn": "ERC721._removeTokenFrom", "offset": [6253, 6293], "op": "PUSH2", "path": "0", "value": "0x955"}, "2103": {"branch": 59, "fn": "ERC721._removeTokenFrom", "offset": [6253, 6293], "op": "JUMPI", "path": "0"}, "2104": {"op": "PUSH1", "value": "0x0"}, "2106": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6335], "op": "PUSH1", "path": "0", "statement": 60, "value": "0x0"}, "2108": {"fn": "ERC721._removeTokenFrom", "offset": [6336, 6344], "op": "PUSH1", "path": "0", "value": "0x60"}, "2110": {"op": "MLOAD"}, "2111": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "PUSH1", "path": "0", "value": "0x20"}, "2113": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "MSTORE", "path": "0"}, "2114": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "PUSH1", "path": "0", "value": "0x0"}, "2116": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "MSTORE", "path": "0"}, "2117": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "PUSH1", "path": "0", "value": "0x40"}, "2119": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "PUSH1", "path": "0", "value": "0x0"}, "2121": {"fn": "ERC721._removeTokenFrom", "offset": [6321, 6345], "op": "SHA3", "path": "0"}, "2122": {"op": "SSTORE"}, "2123": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6419], "op": "PUSH1", "path": "0", "statement": 61, "value": "0x2"}, "2125": {"fn": "ERC721._removeTokenFrom", "offset": [6420, 6425], "op": "PUSH1", "path": "0", "value": "0x40"}, "2127": {"op": "MLOAD"}, "2128": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "PUSH1", "path": "0", "value": "0x20"}, "2130": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "MSTORE", "path": "0"}, "2131": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "PUSH1", "path": "0", "value": "0x0"}, "2133": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "MSTORE", "path": "0"}, "2134": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "PUSH1", "path": "0", "value": "0x40"}, "2136": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "PUSH1", "path": "0", "value": "0x0"}, "2138": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6426], "op": "SHA3", "path": "0"}, "2139": {"op": "DUP1"}, "2140": {"op": "SLOAD"}, "2141": {"fn": "ERC721._removeTokenFrom", "offset": [6430, 6431], "op": "PUSH1", "path": "0", "value": "0x1"}, "2143": {"op": "DUP2"}, "2144": {"op": "SUB"}, "2145": {"op": "DUP2"}, "2146": {"op": "DUP2"}, "2147": {"op": "GT"}, "2148": {"op": "PUSH2", "value": "0x955"}, "2151": {"op": "JUMPI"}, "2152": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6431], "op": "SWAP1", "path": "0"}, "2153": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6431], "op": "POP", "path": "0"}, "2154": {"op": "DUP2"}, "2155": {"op": "SSTORE"}, "2156": {"fn": "ERC721._removeTokenFrom", "offset": [6395, 6431], "op": "POP", "path": "0"}, "2157": {"op": "JUMP"}, "2158": {"fn": "ERC721._clearApproval", "offset": [6444, 6846], "op": "JUMPDEST", "path": "0"}, "2159": {"fn": "ERC721._clearApproval", "offset": [6705, 6711], "op": "PUSH1", "path": "0", "statement": 62, "value": "0x40"}, "2161": {"fn": "ERC721._clearApproval", "offset": [6677, 6711], "op": "MLOAD", "path": "0"}, "2162": {"fn": "ERC721._clearApproval", "offset": [6677, 6691], "op": "PUSH1", "path": "0", "value": "0x0"}, "2164": {"fn": "ERC721._clearApproval", "offset": [6692, 6700], "op": "PUSH1", "path": "0", "value": "0x60"}, "2166": {"op": "MLOAD"}, "2167": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "PUSH1", "path": "0", "value": "0x20"}, "2169": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "MSTORE", "path": "0"}, "2170": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "PUSH1", "path": "0", "value": "0x0"}, "2172": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "MSTORE", "path": "0"}, "2173": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "PUSH1", "path": "0", "value": "0x40"}, "2175": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "PUSH1", "path": "0", "value": "0x0"}, "2177": {"fn": "ERC721._clearApproval", "offset": [6677, 6701], "op": "SHA3", "path": "0"}, "2178": {"fn": "ERC721._clearApproval", "offset": [6677, 6711], "op": "SLOAD", "path": "0"}, "2179": {"fn": "ERC721._clearApproval", "offset": [6677, 6711], "op": "XOR", "path": "0"}, "2180": {"fn": "ERC721._clearApproval", "offset": [6670, 6711], "op": "PUSH2", "path": "0", "value": "0x955"}, "2183": {"branch": 63, "fn": "ERC721._clearApproval", "offset": [6670, 6711], "op": "JUMPI", "path": "0"}, "2184": {"fn": "ERC721._clearApproval", "offset": [6719, 6737], "op": "PUSH1", "path": "0", "value": "0x1"}, "2186": {"fn": "ERC721._clearApproval", "offset": [6738, 6746], "op": "PUSH1", "path": "0", "value": "0x60"}, "2188": {"op": "MLOAD"}, "2189": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "PUSH1", "path": "0", "value": "0x20"}, "2191": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "MSTORE", "path": "0"}, "2192": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "PUSH1", "path": "0", "value": "0x0"}, "2194": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "MSTORE", "path": "0"}, "2195": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "PUSH1", "path": "0", "value": "0x40"}, "2197": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "PUSH1", "path": "0", "value": "0x0"}, "2199": {"fn": "ERC721._clearApproval", "offset": [6719, 6747], "op": "SHA3", "path": "0"}, "2200": {"fn": "ERC721._clearApproval", "offset": [6719, 6765], "op": "SLOAD", "path": "0"}, "2201": {"fn": "ERC721._clearApproval", "offset": [6719, 6765], "op": "ISZERO", "path": "0"}, "2202": {"op": "PUSH2", "value": "0x8B1"}, "2205": {"branch": 64, "fn": "ERC721._clearApproval", "offset": [6716, 6846], "op": "JUMPI", "path": "0"}, "2206": {"op": "PUSH1", "value": "0x0"}, "2208": {"fn": "ERC721._clearApproval", "offset": [6801, 6819], "op": "PUSH1", "path": "0", "statement": 65, "value": "0x1"}, "2210": {"fn": "ERC721._clearApproval", "offset": [6820, 6828], "op": "PUSH1", "path": "0", "value": "0x60"}, "2212": {"op": "MLOAD"}, "2213": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "PUSH1", "path": "0", "value": "0x20"}, "2215": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "MSTORE", "path": "0"}, "2216": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "PUSH1", "path": "0", "value": "0x0"}, "2218": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "MSTORE", "path": "0"}, "2219": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "PUSH1", "path": "0", "value": "0x40"}, "2221": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "PUSH1", "path": "0", "value": "0x0"}, "2223": {"fn": "ERC721._clearApproval", "offset": [6801, 6829], "op": "SHA3", "path": "0"}, "2224": {"op": "SSTORE"}, "2225": {"fn": "ERC721._clearApproval", "offset": [6444, 6846], "op": "JUMPDEST", "path": "0"}, "2226": {"op": "JUMP"}, "2227": {"fn": "ERC721._transferFrom", "offset": [6859, 7818], "op": "JUMPDEST", "path": "0"}, "2228": {"fn": "ERC721._transferFrom", "offset": [7406, 7413], "op": "PUSH2", "path": "0", "statement": 66, "value": "0x160"}, "2231": {"op": "MLOAD"}, "2232": {"op": "PUSH1", "value": "0x40"}, "2234": {"op": "MSTORE"}, "2235": {"fn": "ERC721._transferFrom", "offset": [7415, 7423], "op": "PUSH2", "path": "0", "value": "0x140"}, "2238": {"op": "MLOAD"}, "2239": {"op": "PUSH1", "value": "0x60"}, "2241": {"op": "MSTORE"}, "2242": {"op": "PUSH2", "value": "0x8CC"}, "2245": {"fn": "ERC721._transferFrom", "offset": [7382, 7424], "op": "PUSH2", "path": "0", "value": "0x180"}, "2248": {"fn": "ERC721._transferFrom", "offset": [7382, 7424], "op": "PUSH2", "path": "0", "value": "0x750"}, "2251": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [7382, 7424], "op": "JUMP", "path": "0"}, "2252": {"fn": "ERC721._transferFrom", "offset": [7382, 7424], "op": "JUMPDEST", "path": "0"}, "2253": {"fn": "ERC721._transferFrom", "offset": [7382, 7424], "op": "PUSH2", "path": "0", "value": "0x180"}, "2256": {"fn": "ERC721._transferFrom", "offset": [7375, 7424], "op": "MLOAD", "path": "0"}, "2257": {"fn": "ERC721._transferFrom", "offset": [7375, 7424], "op": "ISZERO", "path": "0"}, "2258": {"fn": "ERC721._transferFrom", "offset": [7375, 7424], "op": "PUSH2", "path": "0", "value": "0x955"}, "2261": {"branch": 67, "fn": "ERC721._transferFrom", "offset": [7375, 7424], "op": "JUMPI", "path": "0"}, "2262": {"fn": "ERC721._transferFrom", "offset": [7478, 7481], "op": "PUSH2", "path": "0", "statement": 68, "value": "0x120"}, "2265": {"fn": "ERC721._transferFrom", "offset": [7478, 7499], "op": "MLOAD", "path": "0"}, "2266": {"fn": "ERC721._transferFrom", "offset": [7478, 7499], "op": "ISZERO", "path": "0"}, "2267": {"fn": "ERC721._transferFrom", "offset": [7471, 7499], "op": "PUSH2", "path": "0", "value": "0x955"}, "2270": {"branch": 69, "fn": "ERC721._transferFrom", "offset": [7471, 7499], "op": "JUMPI", "path": "0"}, "2271": {"fn": "ERC721._transferFrom", "offset": [7589, 7594], "op": "PUSH2", "path": "0", "statement": 70, "value": "0x10"}, "2274": {"op": "MLOAD"}, "2275": {"op": "PUSH1", "value": "0x40"}, "2277": {"op": "MSTORE"}, "2278": {"fn": "ERC721._transferFrom", "offset": [7596, 7604], "op": "PUSH2", "path": "0", "value": "0x140"}, "2281": {"op": "MLOAD"}, "2282": {"op": "PUSH1", "value": "0x60"}, "2284": {"op": "MSTORE"}, "2285": {"op": "PUSH2", "value": "0x8F4"}, "2288": {"fn": "ERC721._transferFrom", "offset": [7569, 7605], "op": "PUSH2", "path": "0", "value": "0x86E"}, "2291": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [7569, 7605], "op": "JUMP", "path": "0"}, "2292": {"fn": "ERC721._transferFrom", "offset": [7569, 7605], "op": "JUMPDEST", "path": "0"}, "2293": {"fn": "ERC721._transferFrom", "offset": [7690, 7695], "op": "PUSH2", "path": "0", "statement": 71, "value": "0x10"}, "2296": {"op": "MLOAD"}, "2297": {"op": "PUSH1", "value": "0x40"}, "2299": {"op": "MSTORE"}, "2300": {"fn": "ERC721._transferFrom", "offset": [7697, 7705], "op": "PUSH2", "path": "0", "value": "0x140"}, "2303": {"op": "MLOAD"}, "2304": {"op": "PUSH1", "value": "0x60"}, "2306": {"op": "MSTORE"}, "2307": {"op": "PUSH2", "value": "0x9A"}, "2310": {"fn": "ERC721._transferFrom", "offset": [7668, 7706], "op": "PUSH2", "path": "0", "value": "0x81E"}, "2313": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [7668, 7706], "op": "JUMP", "path": "0"}, "2314": {"fn": "ERC721._transferFrom", "offset": [7668, 7706], "op": "JUMPDEST", "path": "0"}, "2315": {"fn": "ERC721._transferFrom", "offset": [7742, 7745], "op": "PUSH2", "path": "0", "statement": 72, "value": "0x120"}, "2318": {"op": "MLOAD"}, "2319": {"op": "PUSH1", "value": "0x40"}, "2321": {"op": "MSTORE"}, "2322": {"fn": "ERC721._transferFrom", "offset": [7747, 7755], "op": "PUSH2", "path": "0", "value": "0x140"}, "2325": {"op": "MLOAD"}, "2326": {"op": "PUSH1", "value": "0x60"}, "2328": {"op": "MSTORE"}, "2329": {"op": "PUSH2", "value": "0x920"}, "2332": {"fn": "ERC721._transferFrom", "offset": [7725, 7756], "op": "PUSH2", "path": "0", "value": "0x7D1"}, "2335": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [7725, 7756], "op": "JUMP", "path": "0"}, "2336": {"fn": "ERC721._transferFrom", "offset": [7725, 7756], "op": "JUMPDEST", "path": "0"}, "2337": {"fn": "ERC721._transferFrom", "offset": [7809, 7817], "op": "PUSH2", "path": "0", "statement": 73, "value": "0x140"}, "2340": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "MLOAD", "path": "0"}, "2341": {"fn": "ERC721._transferFrom", "offset": [7804, 7807], "op": "PUSH2", "path": "0", "value": "0x120"}, "2344": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "MLOAD", "path": "0"}, "2345": {"fn": "ERC721._transferFrom", "offset": [7797, 7802], "op": "PUSH2", "path": "0", "value": "0x10"}, "2348": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "MLOAD", "path": "0"}, "2349": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "2382": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "PUSH1", "path": "0", "value": "0x0"}, "2384": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "PUSH2", "path": "0", "value": "0x180"}, "2387": {"fn": "ERC721._transferFrom", "offset": [7784, 7818], "op": "LOG4", "path": "0"}, "2388": {"op": "JUMP"}, "2389": {"op": "JUMPDEST"}, "2390": {"op": "PUSH1", "value": "0x0"}, "2392": {"op": "DUP1"}, "2393": {"op": "REVERT"}}, "sha1": "600a1907574ce4dcb9332428f08dd27c653e19d6", "source": "# @version ^0.3.0\n\n# @dev Implementation of ERC-721 non-fungible token standard.\n# @author Ryuya Nakamura (@nrryuya)\n# Modified from: https://github.com/vyperlang/vyper/blob/de74722bf2d8718cca46902be165f9fe0e3641dd/examples/tokens/ERC721.vy\n\nfrom vyper.interfaces import ERC165\nfrom vyper.interfaces import ERC721\n\nimplements: ERC721\nimplements: ERC165\n\n# Interface for the contract called by safeTransferFrom()\ninterface ERC721Receiver:\n    def onERC721Received(\n            _operator: address,\n            _from: address,\n            _tokenId: uint256,\n            _data: Bytes[1024]\n        ) -> bytes4: nonpayable\n\n\n# @dev Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are\n#      created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any\n#      number of NFTs may be created and assigned without emitting Transfer. At the time of any\n#      transfer, the approved address for that NFT (if any) is reset to none.\n# @param _from Sender of NFT (if address is zero address it indicates token creation).\n# @param _to Receiver of NFT (if address is zero address it indicates token destruction).\n# @param _tokenId The NFT that got transfered.\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when the approved address for an NFT is changed or reaffirmed. The zero\n#      address indicates there is no approved address. When a Transfer event emits, this also\n#      indicates that the approved address for that NFT (if any) is reset to none.\n# @param _owner Owner of NFT.\n# @param _approved Address that we are approving.\n# @param _tokenId NFT which we are approving.\nevent Approval:\n    owner: indexed(address)\n    approved: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when an operator is enabled or disabled for an owner. The operator can manage\n#      all NFTs of the owner.\n# @param _owner Owner of NFT.\n# @param _operator Address to which we are setting operator rights.\n# @param _approved Status of operator rights(true if operator rights are given and false if\n# revoked).\nevent ApprovalForAll:\n    owner: indexed(address)\n    operator: indexed(address)\n    approved: bool\n\n\n# @dev Mapping from NFT ID to the address that owns it.\nidToOwner: HashMap[uint256, address]\n\n# @dev Mapping from NFT ID to approved address.\nidToApprovals: HashMap[uint256, address]\n\n# @dev Mapping from owner address to count of his tokens.\nownerToNFTokenCount: HashMap[address, uint256]\n\n# @dev Mapping from owner address to mapping of operator addresses.\nownerToOperators: HashMap[address, HashMap[address, bool]]\n\n# @dev Address of minter, who can mint a token\nminter: address\n\nbaseURL: String[53]\n\n# @dev Static list of supported ERC165 interface ids\nSUPPORTED_INTERFACES: constant(bytes4[2]) = [\n    # ERC165 interface ID of ERC165\n    0x01ffc9a7,\n    # ERC165 interface ID of ERC721\n    0x80ac58cd,\n]\n\n@external\ndef __init__():\n    \"\"\"\n    @dev Contract constructor.\n    \"\"\"\n    self.minter = msg.sender\n    self.baseURL = \"https://api.babby.xyz/metadata/\"\n\n\n@pure\n@external\ndef supportsInterface(interface_id: bytes4) -> bool:\n    \"\"\"\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Id of the interface\n    \"\"\"\n    return interface_id in SUPPORTED_INTERFACES\n\n\n### VIEW FUNCTIONS ###\n\n@view\n@external\ndef balanceOf(_owner: address) -> uint256:\n    \"\"\"\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    \"\"\"\n    assert _owner != empty(address)\n    return self.ownerToNFTokenCount[_owner]\n\n\n@view\n@external\ndef ownerOf(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    return owner\n\n\n@view\n@external\ndef getApproved(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    \"\"\"\n    # Throws if `_tokenId` is not a valid NFT\n    assert self.idToOwner[_tokenId] != empty(address)\n    return self.idToApprovals[_tokenId]\n\n\n@view\n@external\ndef isApprovedForAll(_owner: address, _operator: address) -> bool:\n    \"\"\"\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    \"\"\"\n    return (self.ownerToOperators[_owner])[_operator]\n\n\n### TRANSFER FUNCTION HELPERS ###\n\n@view\n@internal\ndef _isApprovedOrOwner(_spender: address, _tokenId: uint256) -> bool:\n    \"\"\"\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    spenderIsOwner: bool = owner == _spender\n    spenderIsApproved: bool = _spender == self.idToApprovals[_tokenId]\n    spenderIsApprovedForAll: bool = (self.ownerToOperators[owner])[_spender]\n    return (spenderIsOwner or spenderIsApproved) or spenderIsApprovedForAll\n\n\n@internal\ndef _addTokenTo(_to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    \"\"\"\n    # Throws if `_tokenId` is owned by someone\n    assert self.idToOwner[_tokenId] == empty(address)\n    # Change the owner\n    self.idToOwner[_tokenId] = _to\n    # Change count tracking\n    self.ownerToNFTokenCount[_to] += 1\n\n\n@internal\ndef _removeTokenFrom(_from: address, _tokenId: uint256):\n    \"\"\"\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    \"\"\"\n    # Throws if `_from` is not the current owner\n    assert self.idToOwner[_tokenId] == _from\n    # Change the owner\n    self.idToOwner[_tokenId] = empty(address)\n    # Change count tracking\n    self.ownerToNFTokenCount[_from] -= 1\n\n\n@internal\ndef _clearApproval(_owner: address, _tokenId: uint256):\n    \"\"\"\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    \"\"\"\n    # Throws if `_owner` is not the current owner\n    assert self.idToOwner[_tokenId] == _owner\n    if self.idToApprovals[_tokenId] != empty(address):\n        # Reset approvals\n        self.idToApprovals[_tokenId] = empty(address)\n\n\n@internal\ndef _transferFrom(_from: address, _to: address, _tokenId: uint256, _sender: address):\n    \"\"\"\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    \"\"\"\n    # Check requirements\n    assert self._isApprovedOrOwner(_sender, _tokenId)\n    # Throws if `_to` is the zero address\n    assert _to != empty(address)\n    # Clear approval. Throws if `_from` is not the current owner\n    self._clearApproval(_from, _tokenId)\n    # Remove NFT. Throws if `_tokenId` is not a valid NFT\n    self._removeTokenFrom(_from, _tokenId)\n    # Add NFT\n    self._addTokenTo(_to, _tokenId)\n    # Log the transfer\n    log Transfer(_from, _to, _tokenId)\n\n\n### TRANSFER FUNCTIONS ###\n\n@external\n@payable\ndef transferFrom(_from: address, _to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n\n\n@external\n@payable\ndef safeTransferFrom(\n        _from: address,\n        _to: address,\n        _tokenId: uint256,\n        _data: Bytes[1024]=b\"\"\n    ):\n    \"\"\"\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n    if _to.is_contract: # check if `_to` is a contract address\n        returnValue: bytes4 = ERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data)\n        # Throws if transfer destination is a contract which does not implement 'onERC721Received'\n        assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes4)\n\n\n@external\n@payable\ndef approve(_approved: address, _tokenId: uint256):\n    \"\"\"\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    # Throws if `_approved` is the current owner\n    assert _approved != owner\n    # Check requirements\n    senderIsOwner: bool = self.idToOwner[_tokenId] == msg.sender\n    senderIsApprovedForAll: bool = (self.ownerToOperators[owner])[msg.sender]\n    assert (senderIsOwner or senderIsApprovedForAll)\n    # Set the approval\n    self.idToApprovals[_tokenId] = _approved\n    log Approval(owner, _approved, _tokenId)\n\n\n@external\ndef setApprovalForAll(_operator: address, _approved: bool):\n    \"\"\"\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    \"\"\"\n    # Throws if `_operator` is the `msg.sender`\n    assert _operator != msg.sender\n    self.ownerToOperators[msg.sender][_operator] = _approved\n    log ApprovalForAll(msg.sender, _operator, _approved)\n\n\n### MINT & BURN FUNCTIONS ###\n\n@external\ndef mint(_to: address, _tokenId: uint256) -> bool:\n    \"\"\"\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @param _tokenId The token id to mint.\n    @return A boolean that indicates if the operation was successful.\n    \"\"\"\n    # Throws if `msg.sender` is not the minter\n    assert msg.sender == self.minter\n    # Throws if `_to` is zero address\n    assert _to != empty(address)\n    # Add NFT. Throws if `_tokenId` is owned by someone\n    self._addTokenTo(_to, _tokenId)\n    log Transfer(empty(address), _to, _tokenId)\n    return True\n\n\n@external\ndef burn(_tokenId: uint256):\n    \"\"\"\n    @dev Burns a specific ERC721 token.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId uint256 id of the ERC721 token to be burned.\n    \"\"\"\n    # Check requirements\n    assert self._isApprovedOrOwner(msg.sender, _tokenId)\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    self._clearApproval(owner, _tokenId)\n    self._removeTokenFrom(owner, _tokenId)\n    log Transfer(owner, empty(address), _tokenId)\n\n\n@view\n@external\ndef tokenURI(tokenId: uint256) -> String[132]:\n    return concat(self.baseURL, uint2str(tokenId))\n", "sourceMap": "", "sourcePath": "contracts/ERC721.vy", "type": "contract", "deployment": {"address": "0x136044aF5916aA12E88255c952c844c90001b823", "chainid": "5", "blockHeight": 8311606}}